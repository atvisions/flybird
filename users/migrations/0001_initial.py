# Generated by Django 4.2.17 on 2025-01-11 14:43

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uid",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        unique=True,
                        verbose_name="用户ID",
                    ),
                ),
                (
                    "phone",
                    models.CharField(max_length=11, unique=True, verbose_name="手机号"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="邮箱"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "background_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="backgrounds/",
                        verbose_name="背景图",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="职位"
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="简介"
                    ),
                ),
                ("is_vip", models.BooleanField(default=False, verbose_name="是否会员")),
                (
                    "vip_type",
                    models.CharField(
                        default="none", max_length=50, verbose_name="会员类型"
                    ),
                ),
                (
                    "vip_expire_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="会员过期时间"
                    ),
                ),
                (
                    "vip_status",
                    models.CharField(
                        default="普通用户", max_length=50, verbose_name="会员状态"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "users_user",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="WorkExperience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company", models.CharField(max_length=100, verbose_name="公司名称")),
                ("position", models.CharField(max_length=100, verbose_name="职位")),
                (
                    "department",
                    models.CharField(blank=True, max_length=100, verbose_name="部门"),
                ),
                ("start_date", models.DateField(verbose_name="入职时间")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="离职时间"),
                ),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="是否在职"),
                ),
                (
                    "description",
                    models.TextField(
                        validators=[django.core.validators.MinLengthValidator(50)],
                        verbose_name="工作描述",
                    ),
                ),
                ("achievements", models.TextField(blank=True, verbose_name="工作成就")),
                ("technologies", models.TextField(blank=True, verbose_name="技术栈")),
                (
                    "quality_score",
                    models.FloatField(default=0, verbose_name="质量评分"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_experiences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "工作经历",
                "verbose_name_plural": "工作经历",
                "db_table": "user_work_experience",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="SocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("weibo", "新浪微博"),
                            ("zhihu", "知乎"),
                            ("zcool", "站酷"),
                            ("douyin", "抖音"),
                            ("bilibili", "Bilibili"),
                            ("github", "GitHub"),
                            ("twitter", "Twitter"),
                            ("website", "个人网站"),
                            ("other", "其他"),
                        ],
                        max_length=50,
                        verbose_name="平台名称",
                    ),
                ),
                ("url", models.URLField(verbose_name="链接地址")),
                ("description", models.TextField(blank=True, verbose_name="链接描述")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "社交主页",
                "verbose_name_plural": "社交主页",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="技能名称")),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("初级", "初级"),
                            ("中级", "中级"),
                            ("高级", "高级"),
                            ("专家", "专家"),
                        ],
                        default="初级",
                        max_length=20,
                        null=True,
                        verbose_name="熟练程度",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="技能描述")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("projects", models.TextField(blank=True, verbose_name="相关项目")),
                ("order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "技能",
                "verbose_name_plural": "技能",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="项目名称")),
                ("role", models.CharField(max_length=100, verbose_name="担任角色")),
                ("start_date", models.DateField(verbose_name="开始日期")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="结束日期"),
                ),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="是否进行中"),
                ),
                ("description", models.TextField(blank=True, verbose_name="项目描述")),
                ("achievement", models.TextField(blank=True, verbose_name="项目成果")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "项目经历",
                "verbose_name_plural": "项目经历",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="ProfileScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_score",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=5, verbose_name="总分"
                    ),
                ),
                (
                    "basic_dimension",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="基础维度",
                    ),
                ),
                (
                    "experience_dimension",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="经验维度",
                    ),
                ),
                (
                    "ability_dimension",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="能力维度",
                    ),
                ),
                (
                    "achievement_dimension",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="成就维度",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_score",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "档案评分",
                "verbose_name_plural": "档案评分",
            },
        ),
        migrations.CreateModel(
            name="ProfileLayout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("layout", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile_layout",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "档案布局",
                "verbose_name_plural": "档案布局",
            },
        ),
        migrations.CreateModel(
            name="Portfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="标题"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("project", "项目"),
                            ("website", "网站"),
                            ("app", "应用"),
                            ("article", "文章"),
                            ("other", "其他"),
                        ],
                        default="project",
                        max_length=20,
                        verbose_name="作品类型",
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="作品描述")),
                ("url", models.URLField(blank=True, verbose_name="作品链接")),
                (
                    "image",
                    models.ImageField(
                        blank=True, upload_to="portfolios/", verbose_name="作品图片"
                    ),
                ),
                ("highlights", models.TextField(blank=True, verbose_name="项目亮点")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolios",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "作品集",
                "verbose_name_plural": "作品集",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobIntention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_type", models.CharField(blank=True, max_length=50)),
                ("job_status", models.CharField(blank=True, max_length=50)),
                ("expected_salary", models.CharField(blank=True, max_length=50)),
                ("expected_city", models.CharField(blank=True, max_length=100)),
                ("industries", models.CharField(blank=True, max_length=200)),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_intention",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "求职意向",
                "verbose_name_plural": "求职意向",
                "db_table": "user_job_intention",
            },
        ),
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("school", models.CharField(max_length=100, verbose_name="学校名称")),
                ("major", models.CharField(max_length=100, verbose_name="专业")),
                (
                    "degree",
                    models.CharField(
                        choices=[
                            ("high_school", "高中"),
                            ("junior_college", "大专"),
                            ("bachelor", "本科"),
                            ("master", "硕士"),
                            ("doctor", "博士"),
                            ("other", "其他"),
                        ],
                        max_length=20,
                        verbose_name="学历",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="入学时间")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="毕业时间"),
                ),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="是否在读"),
                ),
                ("description", models.TextField(blank=True, verbose_name="在校经历")),
                ("achievements", models.TextField(blank=True, verbose_name="在校成就")),
                (
                    "quality_score",
                    models.FloatField(default=0, verbose_name="质量评分"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="educations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "教育经历",
                "verbose_name_plural": "教育经历",
                "db_table": "user_education",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="证书名称")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("professional", "专业证书"),
                            ("award", "获奖证书"),
                            ("language", "语言证书"),
                            ("other", "其他证书"),
                        ],
                        default="professional",
                        max_length=20,
                        verbose_name="证书类型",
                    ),
                ),
                (
                    "issuing_authority",
                    models.CharField(max_length=100, verbose_name="发证机构"),
                ),
                ("issue_date", models.DateField(verbose_name="发证日期")),
                (
                    "expiry_date",
                    models.DateField(blank=True, null=True, verbose_name="到期日期"),
                ),
                (
                    "credential_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="证书编号"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="证书描述")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "证书奖项",
                "verbose_name_plural": "证书奖项",
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="BasicInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=50, verbose_name="姓名"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "background",
                    models.ImageField(
                        blank=True, upload_to="backgrounds/", verbose_name="背景图"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("male", "男"), ("female", "女"), ("other", "其他")],
                        max_length=10,
                        verbose_name="性别",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, default=None, null=True, verbose_name="出生日期"
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=11, verbose_name="手机号"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="邮箱"),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=100, verbose_name="所在地"),
                ),
                (
                    "personal_summary",
                    models.TextField(blank=True, verbose_name="个人简介"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="basic_info",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "基本信息",
                "verbose_name_plural": "基本信息",
            },
        ),
        migrations.CreateModel(
            name="AIQualityImprovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field", models.CharField(max_length=50, verbose_name="改进字段")),
                ("original_content", models.TextField(verbose_name="原始内容")),
                ("improved_content", models.TextField(verbose_name="改进后内容")),
                ("improvement_score", models.FloatField(verbose_name="改进分数")),
                (
                    "improvement_details",
                    models.JSONField(default=dict, verbose_name="改进详情"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_improvements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI质量改进记录",
                "verbose_name_plural": "AI质量改进记录",
                "db_table": "user_ai_improvement",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIOptimizationSuggestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "field",
                    models.CharField(
                        choices=[
                            ("personal_summary", "个人简介"),
                            ("work_experience", "工作经历"),
                            ("skill", "技能特长"),
                            ("education", "教育经历"),
                            ("project", "项目经验"),
                            ("certificate", "证书奖项"),
                            ("portfolio", "作品集"),
                        ],
                        max_length=50,
                        verbose_name="优化字段",
                    ),
                ),
                ("original_content", models.TextField(verbose_name="原始内容")),
                ("suggested_content", models.TextField(verbose_name="建议内容")),
                ("reason", models.TextField(verbose_name="优化理由")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待处理"),
                            ("adopted", "已采纳"),
                            ("rejected", "已拒绝"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="处理状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_suggestions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI优化建议",
                "verbose_name_plural": "AI优化建议",
                "db_table": "user_ai_suggestion",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIOptimizationQuota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_quota", models.IntegerField(default=3, verbose_name="总配额")),
                (
                    "used_quota",
                    models.IntegerField(default=0, verbose_name="已使用次数"),
                ),
                ("reset_date", models.DateField(verbose_name="重置日期")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_quota",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI优化配额",
                "verbose_name_plural": "AI优化配额",
                "db_table": "user_ai_quota",
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="语言名称")),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("elementary", "入门"),
                            ("intermediate", "中级"),
                            ("advanced", "高级"),
                            ("native", "母语"),
                        ],
                        db_index=True,
                        default="elementary",
                        max_length=20,
                        verbose_name="熟练程度",
                    ),
                ),
                (
                    "certification",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="语言证书"
                    ),
                ),
                (
                    "score",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="考试分数"
                    ),
                ),
                (
                    "quality_score",
                    models.FloatField(default=0, verbose_name="质量评分"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="languages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "语言能力",
                "verbose_name_plural": "语言能力",
                "db_table": "user_language",
                "unique_together": {("user", "name")},
            },
        ),
    ]

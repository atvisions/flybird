{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useDragDrop } from '../composables/useDragDrop';\nimport axios from 'axios';\nexport default {\n  __name: 'ToolbarPanel',\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const activeTab = computed({\n      get: () => props.modelValue,\n      set: value => emit('update:modelValue', value)\n    });\n    const {\n      handleDragStart\n    } = useDragDrop();\n\n    // 布局组件列表\n    const layoutComponents = ref([]);\n    const isLoading = ref(false);\n\n    // 获取布局组件\n    const fetchLayoutComponents = async () => {\n      isLoading.value = true;\n      try {\n        // 先获取布局分类\n        const categoryResponse = await axios.get('/api/v1/resume/component-categories/main_categories/');\n        const layoutCategory = categoryResponse.data.find(category => category.code === 'layout');\n        if (layoutCategory) {\n          // 获取布局分类下的组件\n          const componentsResponse = await axios.get(`/api/v1/resume/component-categories/${layoutCategory.id}/components/`);\n          layoutComponents.value = componentsResponse.data.map(component => _objectSpread(_objectSpread({}, component), {}, {\n            config: {\n              layout: component.type,\n              columns: component.type === 'single' ? 1 : 2,\n              columnWidth: component.type === 'single' ? ['100%'] : ['50%', '50%']\n            }\n          }));\n        }\n      } catch (error) {\n        console.error('获取布局组件失败:', error);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    onMounted(() => {\n      fetchLayoutComponents();\n    });\n    const __returned__ = {\n      props,\n      emit,\n      activeTab,\n      handleDragStart,\n      layoutComponents,\n      isLoading,\n      fetchLayoutComponents,\n      ref,\n      computed,\n      onMounted,\n      get useDragDrop() {\n        return useDragDrop;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useDragDrop","axios","props","__props","emit","__emit","activeTab","get","modelValue","set","value","handleDragStart","layoutComponents","isLoading","fetchLayoutComponents","categoryResponse","layoutCategory","data","find","category","code","componentsResponse","id","map","component","_objectSpread","config","layout","type","columns","columnWidth","error","console"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <v-card class=\"toolbar-panel\">\n    <v-window v-model=\"activeTab\" class=\"h-100\">\n      <!-- 布局面板 -->\n      <v-window-item value=\"layout\">\n        <v-card-text class=\"pa-2 h-100 overflow-y-auto\">\n          <div class=\"component-blocks\">\n            <div v-for=\"component in layoutComponents\" \n              :key=\"component.id\"\n              class=\"component-block\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\">\n              <v-icon size=\"18\">{{ component.icon }}</v-icon>\n              <div class=\"block-content\">\n                <div class=\"block-title\">{{ component.name }}</div>\n              </div>\n            </div>\n          </div>\n        </v-card-text>\n      </v-window-item>\n\n      <!-- 组件面板 -->\n      <v-window-item value=\"components\">\n        <v-card-text class=\"pa-2 h-100 overflow-y-auto\">\n          组件列表\n        </v-card-text>\n      </v-window-item>\n\n      <!-- 档案面板 -->\n      <v-window-item value=\"files\">\n        <v-card-text class=\"pa-2 h-100 overflow-y-auto\">\n          档案列表\n        </v-card-text>\n      </v-window-item>\n    </v-window>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useDragDrop } from '../composables/useDragDrop'\nimport axios from 'axios'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst activeTab = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\nconst { handleDragStart } = useDragDrop()\n\n// 布局组件列表\nconst layoutComponents = ref([])\nconst isLoading = ref(false)\n\n// 获取布局组件\nconst fetchLayoutComponents = async () => {\n  isLoading.value = true\n  try {\n    // 先获取布局分类\n    const categoryResponse = await axios.get('/api/v1/resume/component-categories/main_categories/')\n    const layoutCategory = categoryResponse.data.find(category => category.code === 'layout')\n    \n    if (layoutCategory) {\n      // 获取布局分类下的组件\n      const componentsResponse = await axios.get(`/api/v1/resume/component-categories/${layoutCategory.id}/components/`)\n      layoutComponents.value = componentsResponse.data.map(component => ({\n        ...component,\n        config: {\n          layout: component.type,\n          columns: component.type === 'single' ? 1 : 2,\n          columnWidth: component.type === 'single' ? ['100%'] : ['50%', '50%']\n        }\n      }))\n    }\n  } catch (error) {\n    console.error('获取布局组件失败:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nonMounted(() => {\n  fetchLayoutComponents()\n})\n</script>\n\n<style scoped>\n.toolbar-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n:deep(.v-window) {\n  height: 100%;\n  flex: 1;\n}\n\n:deep(.v-window__container) {\n  height: 100%;\n}\n\n:deep(.v-window-item) {\n  height: 100%;\n}\n\n:deep(.v-card-text) {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.component-blocks {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 6px;\n  padding: 0 6px;\n}\n\n.component-block {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  cursor: move;\n  user-select: none;\n}\n\n.component-block:hover {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n\n.block-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.block-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(0, 0, 0, 0.87);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style> "],"mappings":";;;;AAuCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AAC7C,SAASC,WAAW,QAAQ,4BAA2B;AACvD,OAAOC,KAAK,MAAM,OAAM;;;;;;;;;;;;;;;IAExB,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,SAAS,GAAGR,QAAQ,CAAC;MACzBS,GAAG,EAAEA,CAAA,KAAML,KAAK,CAACM,UAAU;MAC3BC,GAAG,EAAGC,KAAK,IAAKN,IAAI,CAAC,mBAAmB,EAAEM,KAAK;IACjD,CAAC;IAED,MAAM;MAAEC;IAAgB,CAAC,GAAGX,WAAW,CAAC;;IAExC;IACA,MAAMY,gBAAgB,GAAGf,GAAG,CAAC,EAAE;IAC/B,MAAMgB,SAAS,GAAGhB,GAAG,CAAC,KAAK;;IAE3B;IACA,MAAMiB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxCD,SAAS,CAACH,KAAK,GAAG,IAAG;MACrB,IAAI;QACF;QACA,MAAMK,gBAAgB,GAAG,MAAMd,KAAK,CAACM,GAAG,CAAC,sDAAsD;QAC/F,MAAMS,cAAc,GAAGD,gBAAgB,CAACE,IAAI,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAK,QAAQ;QAExF,IAAIJ,cAAc,EAAE;UAClB;UACA,MAAMK,kBAAkB,GAAG,MAAMpB,KAAK,CAACM,GAAG,CAAC,uCAAuCS,cAAc,CAACM,EAAE,cAAc;UACjHV,gBAAgB,CAACF,KAAK,GAAGW,kBAAkB,CAACJ,IAAI,CAACM,GAAG,CAACC,SAAS,IAAAC,aAAA,CAAAA,aAAA,KACzDD,SAAS;YACZE,MAAM,EAAE;cACNC,MAAM,EAAEH,SAAS,CAACI,IAAI;cACtBC,OAAO,EAAEL,SAAS,CAACI,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC;cAC5CE,WAAW,EAAEN,SAAS,CAACI,IAAI,KAAK,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK;YACrE;UAAA,EACA;QACJ;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC,CAAC,SAAS;QACRlB,SAAS,CAACH,KAAK,GAAG,KAAI;MACxB;IACF;IAEAX,SAAS,CAAC,MAAM;MACde,qBAAqB,CAAC;IACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
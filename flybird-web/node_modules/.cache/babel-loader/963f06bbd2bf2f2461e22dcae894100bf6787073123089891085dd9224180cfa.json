{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { DocumentArrowUpIcon, DocumentIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport profile from '@/api/profile';\nimport { eventBus } from '@/utils/eventBus';\nexport default {\n  __name: 'ResumeImport',\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'success'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 对话框显示状态\n    const dialogVisible = ref(false);\n\n    // 监听 modelValue 变化\n    watch(() => props.modelValue, val => {\n      dialogVisible.value = val;\n    });\n\n    // 监听对话框状态变化\n    watch(() => dialogVisible.value, val => {\n      emit('update:modelValue', val);\n    });\n\n    // 关闭对话框\n    const closeDialog = () => {\n      dialogVisible.value = false;\n      // 清除已选文件\n      clearFile();\n    };\n\n    // 组件状态\n    const showImportDialog = ref(false);\n    const showPreviewDialog = ref(false);\n    const fileInput = ref(null);\n    const selectedFile = ref(null);\n    const importing = ref(false);\n    const importProgress = ref(0);\n    const previewData = ref(null);\n\n    // 字段标签映射\n    const fieldLabels = {\n      basic_info: {\n        name: '姓名',\n        gender: '性别',\n        birth_date: '出生日期',\n        phone: '手机号',\n        email: '邮箱',\n        location: '所在地',\n        personal_summary: '个人简介'\n      },\n      work_experience: {\n        company: '公司名称',\n        position: '职位',\n        department: '部门',\n        start_date: '入职时间',\n        end_date: '离职时间',\n        is_current: '是否在职',\n        description: '工作描述',\n        achievements: '工作成就',\n        technologies: '技术栈'\n      },\n      education: {\n        school: '学校名称',\n        major: '专业',\n        degree: '学历',\n        start_date: '入学时间',\n        end_date: '毕业时间',\n        is_current: '是否在读',\n        description: '在校经历',\n        achievements: '在校成就'\n      },\n      project: {\n        name: '项目名称',\n        role: '担任角色',\n        start_date: '开始日期',\n        end_date: '结束日期',\n        is_current: '是否进行中',\n        description: '项目描述',\n        achievement: '项目成果'\n      },\n      skill: {\n        name: '技能名称',\n        level: '熟练程度',\n        description: '技能描述',\n        projects: '相关项目'\n      },\n      study: {\n        title: '学习项目',\n        institution: '培训机构',\n        start_date: '开始日期',\n        end_date: '结束日期',\n        is_current: '是否在学',\n        description: '学习描述',\n        certificate: '证书编号'\n      },\n      language: {\n        name: '语言名称',\n        proficiency: '熟练程度',\n        certification: '语言证书',\n        score: '考试分数'\n      },\n      social_link: {\n        platform: '平台名称',\n        url: '链接地址',\n        description: '链接描述'\n      }\n    };\n\n    // 获取字段标签\n    const getFieldLabel = (module, key) => {\n      return fieldLabels[module]?.[key] || key;\n    };\n\n    // 触发文件选择\n    const triggerFileInput = () => {\n      fileInput.value.click();\n    };\n\n    // 处理文件拖放\n    const handleDrop = event => {\n      const file = event.dataTransfer.files[0];\n      if (validateFile(file)) {\n        selectedFile.value = file;\n      }\n    };\n\n    // 处理文件选择\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (validateFile(file)) {\n        selectedFile.value = file;\n      }\n    };\n\n    // 验证文件\n    const validateFile = file => {\n      const allowedTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/pdf', 'image/jpeg', 'image/png'];\n      if (!allowedTypes.includes(file.type)) {\n        ElMessage.error('请上传 Word、PDF 或图片格式的文件');\n        return false;\n      }\n      const maxSize = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSize) {\n        ElMessage.error('文件大小不能超过 10MB');\n        return false;\n      }\n      return true;\n    };\n\n    // 清除已选文件\n    const clearFile = () => {\n      selectedFile.value = null;\n      fileInput.value.value = '';\n    };\n\n    // 处理导入\n    const handleImport = async () => {\n      if (!selectedFile.value) return;\n      try {\n        importing.value = true;\n        importProgress.value = 0;\n\n        // 创建 FormData\n        const formData = new FormData();\n        formData.append('file', selectedFile.value);\n\n        // 上传文件并解析\n        const response = await profile.parseResume(formData, progress => {\n          importProgress.value = Math.round(progress);\n        });\n        if (response.data?.code === 200 || response.status === 200) {\n          // 显示预览数据\n          previewData.value = response.data?.data || response.data;\n          dialogVisible.value = false;\n          showPreviewDialog.value = true;\n        } else {\n          throw new Error(response.data?.message || '解析失败');\n        }\n      } catch (error) {\n        console.error('简历解析失败:', error);\n        ElMessage.error(error.message || '简历解析失败，请重试');\n      } finally {\n        importing.value = false;\n        importProgress.value = 0;\n      }\n    };\n\n    // 确认导入\n    const confirmImport = async () => {\n      if (!previewData.value) return;\n      try {\n        importing.value = true;\n\n        // 提交导入数据\n        const response = await profile.importResumeData(previewData.value);\n        if (response.data?.code === 200 || response.status === 200) {\n          ElMessage.success('导入成功');\n          showPreviewDialog.value = false;\n          // 触发数据更新事件\n          eventBus.emit('profile-updated');\n          // 触发完整度更新事件\n          eventBus.emit('completeness-updated');\n          // 触发成功回调\n          emit('success');\n          return;\n        }\n      } catch (error) {\n        console.error('数据导入失败:', error);\n        ElMessage.error(error.message || '数据导入失败，请重试');\n      } finally {\n        importing.value = false;\n      }\n    };\n    const __returned__ = {\n      props,\n      emit,\n      dialogVisible,\n      closeDialog,\n      showImportDialog,\n      showPreviewDialog,\n      fileInput,\n      selectedFile,\n      importing,\n      importProgress,\n      previewData,\n      fieldLabels,\n      getFieldLabel,\n      triggerFileInput,\n      handleDrop,\n      handleFileChange,\n      validateFile,\n      clearFile,\n      handleImport,\n      confirmImport,\n      ref,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get DocumentArrowUpIcon() {\n        return DocumentArrowUpIcon;\n      },\n      get DocumentIcon() {\n        return DocumentIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get profile() {\n        return profile;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","ElMessage","DocumentArrowUpIcon","DocumentIcon","XMarkIcon","profile","eventBus","props","__props","emit","__emit","dialogVisible","modelValue","val","value","closeDialog","clearFile","showImportDialog","showPreviewDialog","fileInput","selectedFile","importing","importProgress","previewData","fieldLabels","basic_info","name","gender","birth_date","phone","email","location","personal_summary","work_experience","company","position","department","start_date","end_date","is_current","description","achievements","technologies","education","school","major","degree","project","role","achievement","skill","level","projects","study","title","institution","certificate","language","proficiency","certification","score","social_link","platform","url","getFieldLabel","module","key","triggerFileInput","click","handleDrop","event","file","dataTransfer","files","validateFile","handleFileChange","target","allowedTypes","includes","type","error","maxSize","size","handleImport","formData","FormData","append","response","parseResume","progress","Math","round","data","code","status","Error","message","console","confirmImport","importResumeData","success"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/ResumeImport.vue"],"sourcesContent":["<template>\n  <div class=\"resume-import\">\n    <!-- 导入对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      title=\"导入简历\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"p-4\">\n        <!-- 上传区域 -->\n        <div\n          class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\"\n          @drop.prevent=\"handleDrop\"\n          @dragover.prevent\n          @click=\"triggerFileInput\"\n        >\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            class=\"hidden\"\n            @change=\"handleFileChange\"\n            accept=\".doc,.docx,.pdf,.jpg,.jpeg,.png\"\n          />\n          <div class=\"space-y-2\">\n            <DocumentArrowUpIcon class=\"w-12 h-12 mx-auto text-gray-400\" />\n            <div class=\"text-sm text-gray-600\">\n              <span class=\"font-medium text-blue-600 hover:text-blue-500\">\n                点击上传\n              </span>\n              或将文件拖拽到这里\n            </div>\n            <p class=\"text-xs text-gray-500\">\n              支持 Word、PDF、JPG 格式文件\n            </p>\n          </div>\n        </div>\n\n        <!-- 文件信息 -->\n        <div v-if=\"selectedFile\" class=\"mt-4\">\n          <div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n            <div class=\"flex items-center space-x-2\">\n              <DocumentIcon class=\"w-5 h-5 text-gray-400\" />\n              <span class=\"text-sm text-gray-900\">{{ selectedFile.name }}</span>\n            </div>\n            <button\n              @click=\"clearFile\"\n              class=\"text-gray-400 hover:text-gray-500\"\n            >\n              <XMarkIcon class=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- 导入进度 -->\n        <div v-if=\"importing\" class=\"mt-4\">\n          <div class=\"flex items-center justify-between\">\n            <span class=\"text-sm text-gray-500\">正在解析文件...</span>\n            <span class=\"text-sm text-gray-500\">{{ importProgress }}%</span>\n          </div>\n          <div class=\"mt-2 h-2 bg-gray-200 rounded-full\">\n            <div\n              class=\"h-2 bg-blue-600 rounded-full transition-all duration-300\"\n              :style=\"{ width: importProgress + '%' }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 对话框底部按钮 -->\n      <template #footer>\n        <div class=\"flex justify-end space-x-3\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"handleImport\"\n            :loading=\"importing\"\n            :disabled=\"!selectedFile\"\n          >\n            {{ importing ? '导入中...' : '开始导入' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 预览对话框 -->\n    <el-dialog\n      v-model=\"showPreviewDialog\"\n      title=\"导入预览\"\n      width=\"800px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"p-4\">\n        <div class=\"space-y-6\">\n          <!-- 基本信息 -->\n          <div v-if=\"previewData?.basic_info\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">基本信息</h3>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div v-for=\"(value, key) in previewData.basic_info\" :key=\"key\">\n                <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('basic_info', key) }}</label>\n                <div class=\"mt-1\">\n                  <input\n                    type=\"text\"\n                    v-model=\"previewData.basic_info[key]\"\n                    class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工作经历 -->\n          <div v-if=\"previewData?.work_experiences?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">工作经历</h3>\n            <div v-for=\"(exp, index) in previewData.work_experiences\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in exp\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('work_experience', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievements', 'technologies'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.work_experiences[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.work_experiences[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 教育经历 -->\n          <div v-if=\"previewData?.educations?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">教育经历</h3>\n            <div v-for=\"(edu, index) in previewData.educations\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in edu\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('education', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievements'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.educations[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.educations[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 项目经历 -->\n          <div v-if=\"previewData?.projects?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">项目经历</h3>\n            <div v-for=\"(proj, index) in previewData.projects\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in proj\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('project', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievement'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.projects[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.projects[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 技能特长 -->\n          <div v-if=\"previewData?.skills?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">技能特长</h3>\n            <div v-for=\"(skill, index) in previewData.skills\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in skill\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('skill', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'projects'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.skills[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.skills[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 学习经历 -->\n          <div v-if=\"previewData?.studies?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">学习经历</h3>\n            <div v-for=\"(study, index) in previewData.studies\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in study\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('study', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.studies[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.studies[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 语言能力 -->\n          <div v-if=\"previewData?.languages?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">语言能力</h3>\n            <div v-for=\"(lang, index) in previewData.languages\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in lang\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('language', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      v-model=\"previewData.languages[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 社交主页 -->\n          <div v-if=\"previewData?.social_links?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">社交主页</h3>\n            <div v-for=\"(link, index) in previewData.social_links\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in link\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('social_link', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.social_links[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.social_links[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 预览对话框底部按钮 -->\n      <template #footer>\n        <div class=\"flex justify-end space-x-3\">\n          <el-button @click=\"showPreviewDialog = false\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"confirmImport\"\n            :loading=\"importing\"\n          >\n            确认导入\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport {\n  DocumentArrowUpIcon,\n  DocumentIcon,\n  XMarkIcon\n} from '@heroicons/vue/24/outline'\nimport profile from '@/api/profile'\nimport { eventBus } from '@/utils/eventBus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'success'])\n\n// 对话框显示状态\nconst dialogVisible = ref(false)\n\n// 监听 modelValue 变化\nwatch(() => props.modelValue, (val) => {\n  dialogVisible.value = val\n})\n\n// 监听对话框状态变化\nwatch(() => dialogVisible.value, (val) => {\n  emit('update:modelValue', val)\n})\n\n// 关闭对话框\nconst closeDialog = () => {\n  dialogVisible.value = false\n  // 清除已选文件\n  clearFile()\n}\n\n// 组件状态\nconst showImportDialog = ref(false)\nconst showPreviewDialog = ref(false)\nconst fileInput = ref(null)\nconst selectedFile = ref(null)\nconst importing = ref(false)\nconst importProgress = ref(0)\nconst previewData = ref(null)\n\n// 字段标签映射\nconst fieldLabels = {\n  basic_info: {\n    name: '姓名',\n    gender: '性别',\n    birth_date: '出生日期',\n    phone: '手机号',\n    email: '邮箱',\n    location: '所在地',\n    personal_summary: '个人简介'\n  },\n  work_experience: {\n    company: '公司名称',\n    position: '职位',\n    department: '部门',\n    start_date: '入职时间',\n    end_date: '离职时间',\n    is_current: '是否在职',\n    description: '工作描述',\n    achievements: '工作成就',\n    technologies: '技术栈'\n  },\n  education: {\n    school: '学校名称',\n    major: '专业',\n    degree: '学历',\n    start_date: '入学时间',\n    end_date: '毕业时间',\n    is_current: '是否在读',\n    description: '在校经历',\n    achievements: '在校成就'\n  },\n  project: {\n    name: '项目名称',\n    role: '担任角色',\n    start_date: '开始日期',\n    end_date: '结束日期',\n    is_current: '是否进行中',\n    description: '项目描述',\n    achievement: '项目成果'\n  },\n  skill: {\n    name: '技能名称',\n    level: '熟练程度',\n    description: '技能描述',\n    projects: '相关项目'\n  },\n  study: {\n    title: '学习项目',\n    institution: '培训机构',\n    start_date: '开始日期',\n    end_date: '结束日期',\n    is_current: '是否在学',\n    description: '学习描述',\n    certificate: '证书编号'\n  },\n  language: {\n    name: '语言名称',\n    proficiency: '熟练程度',\n    certification: '语言证书',\n    score: '考试分数'\n  },\n  social_link: {\n    platform: '平台名称',\n    url: '链接地址',\n    description: '链接描述'\n  }\n}\n\n// 获取字段标签\nconst getFieldLabel = (module, key) => {\n  return fieldLabels[module]?.[key] || key\n}\n\n// 触发文件选择\nconst triggerFileInput = () => {\n  fileInput.value.click()\n}\n\n// 处理文件拖放\nconst handleDrop = (event) => {\n  const file = event.dataTransfer.files[0]\n  if (validateFile(file)) {\n    selectedFile.value = file\n  }\n}\n\n// 处理文件选择\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (validateFile(file)) {\n    selectedFile.value = file\n  }\n}\n\n// 验证文件\nconst validateFile = (file) => {\n  const allowedTypes = [\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/pdf',\n    'image/jpeg',\n    'image/png'\n  ]\n  \n  if (!allowedTypes.includes(file.type)) {\n    ElMessage.error('请上传 Word、PDF 或图片格式的文件')\n    return false\n  }\n  \n  const maxSize = 10 * 1024 * 1024 // 10MB\n  if (file.size > maxSize) {\n    ElMessage.error('文件大小不能超过 10MB')\n    return false\n  }\n  \n  return true\n}\n\n// 清除已选文件\nconst clearFile = () => {\n  selectedFile.value = null\n  fileInput.value.value = ''\n}\n\n// 处理导入\nconst handleImport = async () => {\n  if (!selectedFile.value) return\n  \n  try {\n    importing.value = true\n    importProgress.value = 0\n    \n    // 创建 FormData\n    const formData = new FormData()\n    formData.append('file', selectedFile.value)\n    \n    // 上传文件并解析\n    const response = await profile.parseResume(formData, (progress) => {\n      importProgress.value = Math.round(progress)\n    })\n    \n    if (response.data?.code === 200 || response.status === 200) {\n      // 显示预览数据\n      previewData.value = response.data?.data || response.data\n      dialogVisible.value = false\n      showPreviewDialog.value = true\n    } else {\n      throw new Error(response.data?.message || '解析失败')\n    }\n  } catch (error) {\n    console.error('简历解析失败:', error)\n    ElMessage.error(error.message || '简历解析失败，请重试')\n  } finally {\n    importing.value = false\n    importProgress.value = 0\n  }\n}\n\n// 确认导入\nconst confirmImport = async () => {\n  if (!previewData.value) return\n  \n  try {\n    importing.value = true\n    \n    // 提交导入数据\n    const response = await profile.importResumeData(previewData.value)\n    \n    if (response.data?.code === 200 || response.status === 200) {\n      ElMessage.success('导入成功')\n      showPreviewDialog.value = false\n      // 触发数据更新事件\n      eventBus.emit('profile-updated')\n      // 触发完整度更新事件\n      eventBus.emit('completeness-updated')\n      // 触发成功回调\n      emit('success')\n      return\n    }\n  } catch (error) {\n    console.error('数据导入失败:', error)\n    ElMessage.error(error.message || '数据导入失败，请重试')\n  } finally {\n    importing.value = false\n  }\n}\n</script>\n\n<style scoped>\n.resume-import {\n  /* 添加需要的样式 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
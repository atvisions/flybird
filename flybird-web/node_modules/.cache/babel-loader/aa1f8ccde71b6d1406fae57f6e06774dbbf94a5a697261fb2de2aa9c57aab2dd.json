{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { Cropper, CircleStencil } from 'vue-advanced-cropper';\nimport 'vue-advanced-cropper/dist/style.css';\nimport { Dialog, DialogPanel, TransitionChild, TransitionRoot } from '@headlessui/vue';\nimport { PhotoIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport { showToast } from '@/components/ToastMessage';\nexport default {\n  __name: 'ProfileAvatarCropper',\n  props: {\n    modelValue: Boolean\n  },\n  emits: ['update:modelValue', 'upload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const cropperRef = ref(null);\n    const imageUrl = ref('');\n    const previewUrl = ref('');\n    const hasImage = ref(false);\n\n    // 处理文件选择\n    const handleFileChange = event => {\n      const file = event?.target?.files?.[0];\n      if (!file) return;\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n      const maxSize = 2 * 1024 * 1024;\n      if (file.size > maxSize) {\n        showToast('图片大小不能超过 2MB', 'error');\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        imageUrl.value = e.target.result;\n        hasImage.value = true;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 监听裁剪变化\n    const onCrop = ({\n      coordinates,\n      canvas\n    }) => {\n      if (canvas) {\n        previewUrl.value = canvas.toDataURL('image/png');\n      }\n    };\n\n    // 处理裁剪\n    const handleCrop = async () => {\n      if (!cropperRef.value || !hasImage.value) return;\n      try {\n        const {\n          canvas\n        } = cropperRef.value.getResult({\n          width: 200,\n          height: 200\n        });\n        if (!canvas) {\n          throw new Error('裁剪失败');\n        }\n        canvas.toBlob(async blob => {\n          if (!blob) {\n            throw new Error('图片处理失败');\n          }\n          const file = new File([blob], 'profile_avatar.png', {\n            type: 'image/png'\n          });\n          await emit('upload', file);\n          closeDialog();\n        }, 'image/png', 0.9);\n      } catch (error) {\n        console.error('裁剪失败:', error);\n        showToast(error.message || '图片处理失败，请重试', 'error');\n      }\n    };\n    const resetImage = () => {\n      clearImage();\n      // 触发文件选择\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.onchange = handleFileChange;\n      input.click();\n    };\n    const closeDialog = () => {\n      emit('update:modelValue', false);\n      clearImage();\n    };\n    const clearImage = () => {\n      imageUrl.value = '';\n      previewUrl.value = '';\n      hasImage.value = false;\n    };\n    watch(() => props.modelValue, newVal => {\n      if (!newVal) clearImage();\n    });\n    const __returned__ = {\n      props,\n      emit,\n      cropperRef,\n      imageUrl,\n      previewUrl,\n      hasImage,\n      handleFileChange,\n      onCrop,\n      handleCrop,\n      resetImage,\n      closeDialog,\n      clearImage,\n      ref,\n      watch,\n      get Cropper() {\n        return Cropper;\n      },\n      get CircleStencil() {\n        return CircleStencil;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get DialogPanel() {\n        return DialogPanel;\n      },\n      get TransitionChild() {\n        return TransitionChild;\n      },\n      get TransitionRoot() {\n        return TransitionRoot;\n      },\n      get PhotoIcon() {\n        return PhotoIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","Cropper","CircleStencil","Dialog","DialogPanel","TransitionChild","TransitionRoot","PhotoIcon","XMarkIcon","showToast","props","__props","emit","__emit","cropperRef","imageUrl","previewUrl","hasImage","handleFileChange","event","file","target","files","type","startsWith","maxSize","size","reader","FileReader","onload","e","value","result","readAsDataURL","onCrop","coordinates","canvas","toDataURL","handleCrop","getResult","width","height","Error","toBlob","blob","File","closeDialog","error","console","message","resetImage","clearImage","input","document","createElement","accept","onchange","click","modelValue","newVal"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/ProfileAvatarCropper.vue"],"sourcesContent":["<template>\n  <TransitionRoot appear :show=\"modelValue\" as=\"template\">\n    <Dialog as=\"div\" class=\"relative z-50\" @close=\"closeDialog\">\n      <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0\" enter-to=\"opacity-100\">\n        <div class=\"fixed inset-0 bg-black/25\" />\n      </TransitionChild>\n\n      <div class=\"fixed inset-0 overflow-y-auto\">\n        <div class=\"flex min-h-full items-center justify-center p-4\">\n          <TransitionChild\n            as=\"template\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0 scale-95\"\n            enter-to=\"opacity-100 scale-100\"\n          >\n            <DialogPanel class=\"w-full max-w-sm transform overflow-hidden rounded-2xl bg-white shadow-xl transition-all\">\n              <!-- 头部 -->\n              <div class=\"px-4 py-3 bg-primary-50 border-b border-primary-100\">\n                <div class=\"flex items-center justify-between\">\n                  <h3 class=\"text-base font-medium text-gray-900\">更新头像</h3>\n                  <button\n                    type=\"button\"\n                    class=\"text-gray-400 hover:text-gray-500\"\n                    @click=\"closeDialog\"\n                  >\n                    <XMarkIcon class=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </div>\n\n              <!-- 主要内容区 -->\n              <div class=\"p-4\">\n                <!-- 裁剪区域 -->\n                <div class=\"relative aspect-square rounded-lg overflow-hidden bg-gray-100 mb-4\">\n                  <template v-if=\"imageUrl\">\n                    <Cropper\n                      ref=\"cropperRef\"\n                      class=\"cropper\"\n                      :src=\"imageUrl\"\n                      :stencil-component=\"CircleStencil\"\n                      :stencil-props=\"{\n                        aspectRatio: 1,\n                        minWidth: '50%',\n                        minHeight: '50%'\n                      }\"\n                      :resize-image=\"{\n                        touch: true,\n                        wheel: true\n                      }\"\n                      :transitions=\"true\"\n                      :canvas=\"{\n                        width: 200,\n                        height: 200\n                      }\"\n                      @change=\"onCrop\"\n                    />\n                  </template>\n                  <template v-else>\n                    <label class=\"absolute inset-0 cursor-pointer\">\n                      <div class=\"h-full flex flex-col items-center justify-center\">\n                        <PhotoIcon class=\"w-12 h-12 text-gray-400\" />\n                        <p class=\"mt-2 text-sm font-medium text-gray-900\">点击选择照片</p>\n                        <p class=\"mt-1 text-xs text-gray-500\">建议使用正面照，保持微笑</p>\n                      </div>\n                      <input type=\"file\" class=\"hidden\" accept=\"image/*\" @change=\"handleFileChange\">\n                    </label>\n                  </template>\n                </div>\n\n                <!-- 底部操作区 -->\n                <div class=\"flex items-center justify-between\">\n                  <div class=\"flex items-center space-x-4\">\n                    <div v-if=\"previewUrl\" class=\"w-12 h-12 rounded-full overflow-hidden border-2 border-gray-200\">\n                      <img :src=\"previewUrl\" class=\"w-full h-full object-cover\" alt=\"预览\" />\n                    </div>\n                    <button\n                      v-if=\"imageUrl\"\n                      type=\"button\"\n                      class=\"text-sm text-gray-600 hover:text-primary-500\"\n                      @click=\"resetImage\"\n                    >\n                      重新选择\n                    </button>\n                  </div>\n                  <button\n                    v-if=\"imageUrl\"\n                    type=\"button\"\n                    class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n                    :disabled=\"!hasImage\"\n                    @click=\"handleCrop\"\n                  >\n                    确认使用\n                  </button>\n                </div>\n              </div>\n            </DialogPanel>\n          </TransitionChild>\n        </div>\n      </div>\n    </Dialog>\n  </TransitionRoot>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { Cropper, CircleStencil } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css'\nimport { Dialog, DialogPanel, TransitionChild, TransitionRoot } from '@headlessui/vue'\nimport { PhotoIcon, XMarkIcon } from '@heroicons/vue/24/outline'\nimport { showToast } from '@/components/ToastMessage'\n\nconst props = defineProps({\n  modelValue: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst cropperRef = ref(null)\nconst imageUrl = ref('')\nconst previewUrl = ref('')\nconst hasImage = ref(false)\n\n// 处理文件选择\nconst handleFileChange = (event) => {\n  const file = event?.target?.files?.[0]\n  if (!file) return\n\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n\n  const maxSize = 2 * 1024 * 1024\n  if (file.size > maxSize) {\n    showToast('图片大小不能超过 2MB', 'error')\n    return\n  }\n\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    imageUrl.value = e.target.result\n    hasImage.value = true\n  }\n  reader.readAsDataURL(file)\n}\n\n// 监听裁剪变化\nconst onCrop = ({ coordinates, canvas }) => {\n  if (canvas) {\n    previewUrl.value = canvas.toDataURL('image/png')\n  }\n}\n\n// 处理裁剪\nconst handleCrop = async () => {\n  if (!cropperRef.value || !hasImage.value) return\n  \n  try {\n    const { canvas } = cropperRef.value.getResult({\n      width: 200,\n      height: 200\n    })\n    \n    if (!canvas) {\n      throw new Error('裁剪失败')\n    }\n\n    canvas.toBlob(async (blob) => {\n      if (!blob) {\n        throw new Error('图片处理失败')\n      }\n      const file = new File([blob], 'profile_avatar.png', { type: 'image/png' })\n      await emit('upload', file)\n      closeDialog()\n    }, 'image/png', 0.9)\n  } catch (error) {\n    console.error('裁剪失败:', error)\n    showToast(error.message || '图片处理失败，请重试', 'error')\n  }\n}\n\nconst resetImage = () => {\n  clearImage()\n  // 触发文件选择\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.accept = 'image/*'\n  input.onchange = handleFileChange\n  input.click()\n}\n\nconst closeDialog = () => {\n  emit('update:modelValue', false)\n  clearImage()\n}\n\nconst clearImage = () => {\n  imageUrl.value = ''\n  previewUrl.value = ''\n  hasImage.value = false\n}\n\nwatch(() => props.modelValue, (newVal) => {\n  if (!newVal) clearImage()\n})\n</script>\n\n<style>\n.cropper {\n  height: 100%;\n  background: #f3f4f6;\n}\n\n.vue-advanced-cropper {\n  background: #f3f4f6;\n}\n\n.vue-advanced-cropper__foreground {\n  background: rgba(0, 0, 0, 0.3);\n}\n\n.vue-advanced-cropper__image {\n  max-width: none !important;\n}\n\n.vue-advanced-cropper__stencil {\n  border-radius: 50% !important;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
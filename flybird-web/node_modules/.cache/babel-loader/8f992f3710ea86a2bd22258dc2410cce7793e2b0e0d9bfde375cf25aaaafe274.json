{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { PlusIcon, UserIcon } from '@heroicons/vue/24/outline';\nexport default {\n  __name: 'CommunityNavigation',\n  props: {\n    currentCategory: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:currentCategory'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n\n    // 使用 Vuex store 的 isAuthenticated 状态\n    const isAuthenticated = computed(() => store.state.isAuthenticated);\n\n    // 主导航数据\n    const mainNavs = [{\n      name: '首页',\n      path: '/community'\n    }, {\n      name: '文章',\n      path: '/community/articles'\n    }, {\n      name: '问答',\n      path: '/community/questions'\n    }, {\n      name: '话题',\n      path: '/community/topics'\n    }];\n\n    // 根据当前路由显示不同的分类选项\n    const currentCategories = computed(() => {\n      const path = route.path;\n      if (path.includes('articles')) {\n        return articleCategories;\n      } else if (path.includes('questions')) {\n        return questionCategories;\n      } else if (path.includes('topics')) {\n        return topicCategories;\n      }\n      return allCategories;\n    });\n\n    // 处理分类变更\n    const handleCategoryChange = categoryId => {\n      emit('update:currentCategory', categoryId);\n    };\n\n    // 分类数据\n    const allCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'recommend',\n      name: '推荐'\n    }, {\n      id: 'following',\n      name: '关注'\n    }, {\n      id: 'latest',\n      name: '最新'\n    }];\n    const articleCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'frontend',\n      name: '前端开发'\n    }, {\n      id: 'backend',\n      name: '后端开发'\n    }, {\n      id: 'mobile',\n      name: '移动开发'\n    }, {\n      id: 'ai',\n      name: '人工智能'\n    }, {\n      id: 'devops',\n      name: 'DevOps'\n    }, {\n      id: 'database',\n      name: '数据库'\n    }, {\n      id: 'architecture',\n      name: '架构设计'\n    }];\n    const questionCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'unsolved',\n      name: '待解决'\n    }, {\n      id: 'solved',\n      name: '已解决'\n    }, {\n      id: 'featured',\n      name: '精选问答'\n    }, {\n      id: 'reward',\n      name: '悬赏问答'\n    }];\n    const topicCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'hot',\n      name: '热门话题'\n    }, {\n      id: 'tech',\n      name: '技术之争'\n    }, {\n      id: 'career',\n      name: '职业发展'\n    }, {\n      id: 'tools',\n      name: '工具推荐'\n    }];\n    const __returned__ = {\n      props,\n      emit,\n      router,\n      route,\n      store,\n      isAuthenticated,\n      mainNavs,\n      currentCategories,\n      handleCategoryChange,\n      allCategories,\n      articleCategories,\n      questionCategories,\n      topicCategories,\n      ref,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get UserIcon() {\n        return UserIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRouter","useRoute","useStore","PlusIcon","UserIcon","props","__props","emit","__emit","router","route","store","isAuthenticated","state","mainNavs","name","path","currentCategories","includes","articleCategories","questionCategories","topicCategories","allCategories","handleCategoryChange","categoryId","id"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/community/CommunityNavigation.vue"],"sourcesContent":["<template>\n  <!-- 主导航区域 -->\n  <div class=\"mt-6 bg-white rounded-xl border border-gray-100 p-4 hidden md:block mb-6\">\n    <div class=\"flex flex-col gap-4\">\n      <!-- 左侧主导航和右侧按钮 -->\n      <div class=\"flex flex-row sm:items-center justify-between\">\n        <!-- 主导航链接 -->\n        <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n          <router-link\n            v-for=\"nav in mainNavs\"\n            :key=\"nav.path\"\n            :to=\"nav.path\"\n            class=\"px-4 sm:px-8 py-3 mx-1 text-sm font-medium transition-colors relative group whitespace-nowrap\"\n            :class=\"[\n              $route.path === nav.path\n                ? 'text-gray-900'\n                : 'text-gray-500 hover:text-gray-700'\n            ]\"\n          >\n            {{ nav.name }}\n            <!-- 活跃状态指示器 -->\n            <div \n              class=\"absolute left-1/2 -translate-x-1/2 bottom-4.5 w-1.5 h-1.5 rounded-full transition-colors\"\n              :class=\"$route.path === nav.path ? 'bg-gray-900' : 'bg-transparent group-hover:bg-gray-200'\"\n            ></div>\n          </router-link>\n        </div>\n\n        <!-- 右侧操作按钮 -->\n        <div class=\"flex items-center gap-2 sm:gap-3\">\n          <template v-if=\"isAuthenticated\">\n            <!-- 发布按钮 -->\n            <button class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-full hover:shadow-lg hover:shadow-blue-500/20 transition-all duration-300 text-sm font-medium flex items-center group\">\n              <PlusIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n              <span class=\"hidden sm:inline\">发布内容</span>\n              <span class=\"sm:hidden\">发布</span>\n            </button>\n          </template>\n          <template v-else>\n            <!-- 登录按钮 -->\n            <router-link \n              :to=\"`/login?redirect=${encodeURIComponent($route.fullPath)}`\"\n              class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-full hover:shadow-lg hover:shadow-blue-500/20 transition-all duration-300 text-sm font-medium flex items-center group\"\n            >\n              <UserIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n              <span>登录</span>\n            </router-link>\n          </template>\n        </div>\n      </div>\n\n      <!-- 分隔线 -->\n      <div class=\"h-px bg-gray-200\"></div>\n      \n      <!-- 二级分类标签 -->\n      <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n        <button\n          v-for=\"category in currentCategories\"\n          :key=\"category.id\"\n          @click=\"handleCategoryChange(category.id)\"\n          class=\"px-4 py-2 mx-1 rounded-full text-sm font-medium transition-colors whitespace-nowrap\"\n          :class=\"[\n            currentCategory === category.id\n              ? 'bg-gray-900 text-white'\n              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n          ]\"\n        >\n          {{ category.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { PlusIcon, UserIcon } from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  currentCategory: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:currentCategory'])\n\nconst router = useRouter()\nconst route = useRoute()\nconst store = useStore()\n\n// 使用 Vuex store 的 isAuthenticated 状态\nconst isAuthenticated = computed(() => store.state.isAuthenticated)\n\n// 主导航数据\nconst mainNavs = [\n  { name: '首页', path: '/community' },\n  { name: '文章', path: '/community/articles' },\n  { name: '问答', path: '/community/questions' },\n  { name: '话题', path: '/community/topics' }\n]\n\n// 根据当前路由显示不同的分类选项\nconst currentCategories = computed(() => {\n  const path = route.path\n  if (path.includes('articles')) {\n    return articleCategories\n  } else if (path.includes('questions')) {\n    return questionCategories\n  } else if (path.includes('topics')) {\n    return topicCategories\n  }\n  return allCategories\n})\n\n// 处理分类变更\nconst handleCategoryChange = (categoryId) => {\n  emit('update:currentCategory', categoryId)\n}\n\n// 分类数据\nconst allCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'recommend', name: '推荐' },\n  { id: 'following', name: '关注' },\n  { id: 'latest', name: '最新' }\n]\n\nconst articleCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'frontend', name: '前端开发' },\n  { id: 'backend', name: '后端开发' },\n  { id: 'mobile', name: '移动开发' },\n  { id: 'ai', name: '人工智能' },\n  { id: 'devops', name: 'DevOps' },\n  { id: 'database', name: '数据库' },\n  { id: 'architecture', name: '架构设计' }\n]\n\nconst questionCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'unsolved', name: '待解决' },\n  { id: 'solved', name: '已解决' },\n  { id: 'featured', name: '精选问答' },\n  { id: 'reward', name: '悬赏问答' }\n]\n\nconst topicCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'hot', name: '热门话题' },\n  { id: 'tech', name: '技术之争' },\n  { id: 'career', name: '职业发展' },\n  { id: 'tools', name: '工具推荐' }\n]\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
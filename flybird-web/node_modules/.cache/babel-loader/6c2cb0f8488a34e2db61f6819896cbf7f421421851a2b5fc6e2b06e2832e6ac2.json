{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useTooltipContentProps } from './content.mjs';\nimport { useTooltipTriggerProps } from './trigger2.mjs';\nimport { popperProps } from '../../popper/src/popper.mjs';\nimport { popperArrowProps } from '../../popper/src/arrow.mjs';\nimport { createModelToggleComposable } from '../../../hooks/use-model-toggle/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nconst {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle\n} = createModelToggleComposable(\"visible\");\nconst useTooltipProps = buildProps(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, popperProps), useTooltipModelToggleProps), useTooltipContentProps), useTooltipTriggerProps), popperArrowProps), {}, {\n  showArrow: {\n    type: Boolean,\n    default: true\n  }\n}));\nconst tooltipEmits = [...useTooltipModelToggleEmits, \"before-show\", \"before-hide\", \"show\", \"hide\", \"open\", \"close\"];\nexport { tooltipEmits, useTooltipModelToggle, useTooltipModelToggleEmits, useTooltipModelToggleProps, useTooltipProps };","map":{"version":3,"names":["useModelToggleProps","useTooltipModelToggleProps","useModelToggleEmits","useTooltipModelToggleEmits","useModelToggle","useTooltipModelToggle","createModelToggleComposable","useTooltipProps","buildProps","_objectSpread","popperProps","useTooltipContentProps","useTooltipTriggerProps","popperArrowProps","showArrow","type","Boolean","default","tooltipEmits"],"sources":["../../../../../../packages/components/tooltip/src/tooltip.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { createModelToggleComposable } from '@element-plus/hooks'\nimport { popperArrowProps, popperProps } from '@element-plus/components/popper'\nimport { useTooltipContentProps } from './content'\nimport { useTooltipTriggerProps } from './trigger'\nimport type Tooltip from './tooltip.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const {\n  useModelToggleProps: useTooltipModelToggleProps,\n  useModelToggleEmits: useTooltipModelToggleEmits,\n  useModelToggle: useTooltipModelToggle,\n} = createModelToggleComposable('visible' as const)\n\nexport const useTooltipProps = buildProps({\n  ...popperProps,\n  ...useTooltipModelToggleProps,\n  ...useTooltipContentProps,\n  ...useTooltipTriggerProps,\n  ...popperArrowProps,\n  /**\n   * @description whether the tooltip content has an arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n})\n\nexport const tooltipEmits = [\n  ...useTooltipModelToggleEmits,\n  'before-show',\n  'before-hide',\n  'show',\n  'hide',\n  'open',\n  'close',\n]\n\nexport type ElTooltipProps = ExtractPropTypes<typeof useTooltipProps>\n\nexport type TooltipInstance = InstanceType<typeof Tooltip>\n"],"mappings":";;;;;;;AAKY,MAAC;EACXA,mBAAmB,EAAEC,0BAA0B;EAC/CC,mBAAmB,EAAEC,0BAA0B;EAC/CC,cAAc,EAAEC;AAClB,CAAC,GAAGC,2BAA2B,CAAC,SAAS;AAC7B,MAACC,eAAe,GAAGC,UAAU,CAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCC,WAAW,GACXT,0BAA0B,GAC1BU,sBAAsB,GACtBC,sBAAsB,GACtBC,gBAAgB;EACnBC,SAAS,EAAE;IACTC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb;AAAG,EACF;AACW,MAACC,YAAY,GAAG,CAC1B,GAAGf,0BAA0B,EAC7B,aAAa,EACb,aAAa,EACb,MAAM,EACN,MAAM,EACN,MAAM,EACN,OAAO,CACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
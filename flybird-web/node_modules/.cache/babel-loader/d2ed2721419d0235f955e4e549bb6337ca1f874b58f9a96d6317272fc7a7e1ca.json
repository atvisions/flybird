{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"template-editor\"\n};\nconst _hoisted_2 = {\n  class: \"editor-toolbar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Save = _resolveComponent(\"Save\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_View = _resolveComponent(\"View\");\n  const _component_Download = _resolveComponent(\"Download\");\n  const _component_el_button_group = _resolveComponent(\"el-button-group\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部工具栏 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_button_group, null, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: $setup.handleSave\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Save)]),\n        _: 1 /* STABLE */\n      }), _cache[1] || (_cache[1] = _createTextVNode(\" 保存 \"))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      onClick: $setup.handlePreview\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_View)]),\n        _: 1 /* STABLE */\n      }), _cache[2] || (_cache[2] = _createTextVNode(\" 预览 \"))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      onClick: $setup.handleExport\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Download)]),\n        _: 1 /* STABLE */\n      }), _cache[3] || (_cache[3] = _createTextVNode(\" 导出 \"))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_input, {\n    modelValue: $setup.templateName,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.templateName = $event),\n    placeholder: \"模板名称\",\n    class: \"template-name\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createCommentVNode(\" GrapesJS 编辑器容器 \"), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    id: \"gjs\",\n    class: \"editor-container\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_button_group","default","_withCtx","_component_el_button","onClick","$setup","handleSave","_component_el_icon","_component_Save","_","_createTextVNode","handlePreview","_component_View","handleExport","_component_Download","_component_el_input","modelValue","templateName","_cache","$event","placeholder","id"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/views/TemplateEditor.vue"],"sourcesContent":["<!-- 模板编辑器主视图 -->\n<template>\n  <div class=\"template-editor\">\n    <!-- 顶部工具栏 -->\n    <div class=\"editor-toolbar\">\n      <el-button-group>\n        <el-button @click=\"handleSave\">\n          <el-icon><Save /></el-icon>\n          保存\n        </el-button>\n        <el-button @click=\"handlePreview\">\n          <el-icon><View /></el-icon>\n          预览\n        </el-button>\n        <el-button @click=\"handleExport\">\n          <el-icon><Download /></el-icon>\n          导出\n        </el-button>\n      </el-button-group>\n      \n      <el-input\n        v-model=\"templateName\"\n        placeholder=\"模板名称\"\n        class=\"template-name\"\n      />\n    </div>\n    \n    <!-- GrapesJS 编辑器容器 -->\n    <div id=\"gjs\" class=\"editor-container\"></div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport 'grapesjs/dist/css/grapes.min.css'\nimport grapesjs from 'grapesjs'\n\n// 模板数据\nconst templateName = ref('新建模板')\nconst editor = ref(null)\nconst route = useRoute()\n\n// 初始化编辑器\nonMounted(() => {\n  // 基础配置\n  editor.value = grapesjs.init({\n    container: '#gjs',\n    height: 'calc(100vh - 64px)',\n    width: 'auto',\n    storageManager: false,\n    \n    // 面板配置\n    panels: {\n      defaults: []\n    },\n    \n    // 块管理器配置\n    blockManager: {\n      appendTo: '#blocks',\n      blocks: [\n        {\n          id: 'section',\n          label: '分栏',\n          content: `\n            <div class=\"section\">\n              <div class=\"column\"></div>\n              <div class=\"column\"></div>\n            </div>\n            <style>\n              .section {\n                display: flex;\n                gap: 20px;\n                padding: 20px;\n              }\n              .column {\n                flex: 1;\n                min-height: 100px;\n                background-color: #f5f7fa;\n                border-radius: 8px;\n              }\n            </style>\n          `\n        },\n        {\n          id: 'text',\n          label: '文本',\n          content: '<div data-gjs-type=\"text\">双击编辑文本</div>'\n        }\n      ]\n    },\n    \n    // 样式管理器配置\n    styleManager: {\n      appendTo: '#styles',\n      sectors: [{\n        name: '尺寸',\n        open: false,\n        properties: [\n          'width',\n          'height',\n          'padding',\n          'margin'\n        ]\n      },\n      {\n        name: '排版',\n        open: false,\n        properties: [\n          'font-family',\n          'font-size',\n          'font-weight',\n          'color',\n          'text-align'\n        ]\n      },\n      {\n        name: '装饰',\n        open: false,\n        properties: [\n          'background-color',\n          'border-radius',\n          'box-shadow'\n        ]\n      }]\n    },\n    \n    // 画布设置\n    canvas: {\n      styles: [\n        'https://unpkg.com/element-plus/dist/index.css'\n      ]\n    }\n  })\n  \n  // 添加自定义简历组件\n  addResumeBlocks()\n  \n  // 如果有模板 ID，加载模板数据\n  if (route.params.id) {\n    loadTemplate(route.params.id)\n  }\n})\n\n// 添加简历专用组件\nconst addResumeBlocks = () => {\n  const blockManager = editor.value.BlockManager\n  \n  // 基本信息组件\n  blockManager.add('basic-info', {\n    label: '基本信息',\n    category: '简历组件',\n    content: `\n      <div class=\"basic-info\">\n        <div class=\"avatar\">\n          <img src=\"https://via.placeholder.com/100\" alt=\"头像\" />\n        </div>\n        <div class=\"info\">\n          <h2>姓名</h2>\n          <p>性别 | 年龄</p>\n          <p>电话 | 邮箱</p>\n          <p>所在地</p>\n        </div>\n      </div>\n    `,\n    style: {\n      'basic-info': {\n        padding: '20px',\n        display: 'flex',\n        'align-items': 'center',\n        gap: '20px',\n        'background-color': '#f5f7fa',\n        'border-radius': '8px'\n      }\n    }\n  })\n  \n  // 工作经历组件\n  blockManager.add('work-experience', {\n    label: '工作经历',\n    category: '简历组件',\n    content: `\n      <div class=\"work-experience\">\n        <h3>工作经历</h3>\n        <div class=\"experience-item\">\n          <div class=\"company\">公司名称</div>\n          <div class=\"position\">职位</div>\n          <div class=\"date\">2020.01 - 至今</div>\n          <div class=\"description\">工作描述</div>\n        </div>\n      </div>\n    `,\n    style: {\n      'work-experience': {\n        padding: '20px',\n        'background-color': '#ffffff',\n        'border-radius': '8px',\n        'box-shadow': '0 2px 4px rgba(0,0,0,0.05)'\n      }\n    }\n  })\n  \n  // 教育经历组件\n  blockManager.add('education', {\n    label: '教育经历',\n    category: '简历组件',\n    content: `\n      <div class=\"education\">\n        <h3>教育经历</h3>\n        <div class=\"education-item\">\n          <div class=\"school\">学校名称</div>\n          <div class=\"major\">专业</div>\n          <div class=\"date\">2016.09 - 2020.06</div>\n          <div class=\"degree\">学位</div>\n        </div>\n      </div>\n    `,\n    style: {\n      'education': {\n        padding: '20px',\n        'background-color': '#ffffff',\n        'border-radius': '8px',\n        'box-shadow': '0 2px 4px rgba(0,0,0,0.05)'\n      }\n    }\n  })\n}\n\n// 加载模板数据\nconst loadTemplate = async (id) => {\n  try {\n    // TODO: 从后端加载模板数据\n    const template = await fetch(`/api/v1/resume/templates/${id}`).then(res => res.json())\n    templateName.value = template.name\n    editor.value.setComponents(template.content)\n  } catch (error) {\n    ElMessage.error('加载模板失败')\n  }\n}\n\n// 保存模板\nconst handleSave = async () => {\n  try {\n    const html = editor.value.getHtml()\n    const css = editor.value.getCss()\n    \n    // TODO: 保存到后端\n    await fetch('/api/v1/resume/templates', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: templateName.value,\n        content: html,\n        styles: css\n      })\n    })\n    \n    ElMessage.success('保存成功')\n  } catch (error) {\n    ElMessage.error('保存失败')\n  }\n}\n\n// 预览模板\nconst handlePreview = () => {\n  const html = editor.value.getHtml()\n  const css = editor.value.getCss()\n  \n  // 在新窗口中预览\n  const win = window.open('', '_blank')\n  win.document.write(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <style>${css}</style>\n      </head>\n      <body>${html}</body>\n    </html>\n  `)\n}\n\n// 导出模板\nconst handleExport = () => {\n  const html = editor.value.getHtml()\n  const css = editor.value.getCss()\n  \n  // TODO: 调用后端导出 PDF\n}\n\n// 组件销毁时清理编辑器\nonUnmounted(() => {\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n</script>\n\n<style lang=\"scss\">\n.template-editor {\n  @apply h-full flex flex-col;\n  \n  .editor-toolbar {\n    @apply h-16 px-4 flex items-center justify-between bg-white border-b border-gray-200;\n    \n    .template-name {\n      @apply w-64;\n    }\n  }\n  \n  .editor-container {\n    @apply flex-1;\n    \n    // GrapesJS 样式覆盖\n    .gjs-cv-canvas {\n      @apply h-full;\n      \n      .gjs-frame {\n        @apply bg-white;\n      }\n    }\n    \n    .gjs-pn-panel {\n      @apply bg-white border-gray-200;\n    }\n    \n    .gjs-block {\n      @apply bg-white border border-gray-200 rounded-lg;\n      \n      &:hover {\n        @apply border-blue-500;\n      }\n    }\n    \n    .gjs-block-category {\n      @apply bg-gray-50;\n    }\n  }\n}\n</style> "],"mappings":";;EAEOA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAgB;;;;;;;;;uBAF7BC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,mBAAA,WAAc,EACdC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAakBC,0BAAA;IAlBxBC,OAAA,EAAAC,QAAA,CAMQ,MAGY,CAHZH,YAAA,CAGYI,oBAAA;MAHAC,OAAK,EAAEC,MAAA,CAAAC;IAAU;MANrCL,OAAA,EAAAC,QAAA,CAOU,MAA2B,CAA3BH,YAAA,CAA2BQ,kBAAA;QAPrCN,OAAA,EAAAC,QAAA,CAOmB,MAAQ,CAARH,YAAA,CAAQS,eAAA,E;QAP3BC,CAAA;oCAAAC,gBAAA,CAOqC,MAE7B,G;MATRD,CAAA;QAUQV,YAAA,CAGYI,oBAAA;MAHAC,OAAK,EAAEC,MAAA,CAAAM;IAAa;MAVxCV,OAAA,EAAAC,QAAA,CAWU,MAA2B,CAA3BH,YAAA,CAA2BQ,kBAAA;QAXrCN,OAAA,EAAAC,QAAA,CAWmB,MAAQ,CAARH,YAAA,CAAQa,eAAA,E;QAX3BH,CAAA;oCAAAC,gBAAA,CAWqC,MAE7B,G;MAbRD,CAAA;QAcQV,YAAA,CAGYI,oBAAA;MAHAC,OAAK,EAAEC,MAAA,CAAAQ;IAAY;MAdvCZ,OAAA,EAAAC,QAAA,CAeU,MAA+B,CAA/BH,YAAA,CAA+BQ,kBAAA;QAfzCN,OAAA,EAAAC,QAAA,CAemB,MAAY,CAAZH,YAAA,CAAYe,mBAAA,E;QAf/BL,CAAA;oCAAAC,gBAAA,CAeyC,MAEjC,G;MAjBRD,CAAA;;IAAAA,CAAA;MAoBMV,YAAA,CAIEgB,mBAAA;IAxBRC,UAAA,EAqBiBX,MAAA,CAAAY,YAAY;IArB7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBiBd,MAAA,CAAAY,YAAY,GAAAE,MAAA;IACrBC,WAAW,EAAC,MAAM;IAClB3B,KAAK,EAAC;6CAIVG,mBAAA,oBAAuB,E,0BACvBC,mBAAA,CAA6C;IAAxCwB,EAAE,EAAC,KAAK;IAAC5B,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n  getters: {\n    avatar: state => state.userInfo?.avatar || defaultAvatar,\n    username: state => state.userInfo?.username || '未设置昵称',\n    uid: state => state.userInfo?.uid,\n    background: state => state.backgroundImage,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email,\n    position: state => state.userInfo?.position,\n    bio: state => state.userInfo?.bio,\n    isVip: state => state.userInfo?.is_vip || false,\n    isStaff: state => state.userInfo?.is_staff || false\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          };\n          this.backgroundImage = userData.background_image || null;\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return this.userInfo;\n        }\n        return null;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar');\n        const response = await user.updateAvatar(file);\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background');\n        const response = await user.updateBackground(file);\n        if (response?.data?.code === 200) {\n          this.backgroundImage = response.data.data.background || null;\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        console.log('Updating user info with:', data);\n        const response = await user.updateUserInfo(data);\n        console.log('Update response:', response.data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            username: userData.username || this.userInfo?.username || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null,\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            position: userData.position || this.userInfo?.position || null,\n            bio: userData.bio || this.userInfo?.bio || null\n          });\n          if (userData.background_image) {\n            this.backgroundImage = userData.background_image;\n          }\n          console.log('Updated user info:', this.userInfo);\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n        }\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.backgroundImage = null;\n      localStorage.removeItem('userInfo');\n      localStorage.removeItem('avatarUpdateTime');\n      localStorage.removeItem('backgroundImage');\n    }\n  }\n});","map":{"version":3,"names":["defineStore","user","defaultAvatar","useAccountStore","state","userInfo","JSON","parse","localStorage","getItem","avatarUpdateTime","backgroundImage","getters","avatar","username","uid","background","phone","email","position","bio","isVip","is_vip","isStaff","is_staff","actions","fetchUserInfo","response","getUserInfo","data","code","userData","id","background_image","setItem","stringify","error","console","updateAvatar","formData","file","get","Date","now","_objectSpread","Error","message","updateBackground","updateUserInfo","log","clearUserInfo","removeItem"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n\n  getters: {\n    avatar: (state) => state.userInfo?.avatar || defaultAvatar,\n    username: (state) => state.userInfo?.username || '未设置昵称',\n    uid: (state) => state.userInfo?.uid,\n    background: (state) => state.backgroundImage,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email,\n    position: (state) => state.userInfo?.position,\n    bio: (state) => state.userInfo?.bio,\n    isVip: (state) => state.userInfo?.is_vip || false,\n    isStaff: (state) => state.userInfo?.is_staff || false\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          }\n          \n          this.backgroundImage = userData.background_image || null\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          return this.userInfo\n        }\n        return null\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar')\n        const response = await user.updateAvatar(file)\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background')\n        const response = await user.updateBackground(file)\n        if (response?.data?.code === 200) {\n          this.backgroundImage = response.data.data.background || null\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        console.log('Updating user info with:', data)\n        const response = await user.updateUserInfo(data)\n        console.log('Update response:', response.data)\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          this.userInfo = {\n            ...this.userInfo,\n            username: userData.username || this.userInfo?.username || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null,\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            position: userData.position || this.userInfo?.position || null,\n            bio: userData.bio || this.userInfo?.bio || null\n          }\n          \n          if (userData.background_image) {\n            this.backgroundImage = userData.background_image\n          }\n          \n          console.log('Updated user info:', this.userInfo)\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        if (error.response) {\n          console.error('Error response:', error.response.data)\n        }\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.backgroundImage = null\n      localStorage.removeItem('userInfo')\n      localStorage.removeItem('avatarUpdateTime')\n      localStorage.removeItem('backgroundImage')\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"template-editor\"\n};\nconst _hoisted_2 = {\n  class: \"editor-main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部工具栏 \"), _createVNode($setup[\"EditorToolbar\"], {\n    template: $setup.template.value || {},\n    onSave: $setup.handleSave,\n    onPreview: $setup.handlePreview,\n    onPublish: $setup.handlePublish,\n    \"onUpdate:name\": _cache[0] || (_cache[0] = name => $setup.template.value.name = name)\n  }, null, 8 /* PROPS */, [\"template\"]), _createCommentVNode(\" 主要编辑区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 左侧组件面板 \"), _createVNode($setup[\"ComponentPanel\"], {\n    components: $setup.availableComponents,\n    onAddComponent: $setup.handleAddComponent\n  }, null, 8 /* PROPS */, [\"components\"]), _createCommentVNode(\" 中间画布区域 \"), _createVNode($setup[\"EditorCanvas\"], {\n    modelValue: $setup.templateData.layout,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.templateData.layout = $event),\n    styles: $setup.templateData.styles,\n    onSelect: $setup.handleSelectComponent,\n    onAddComponent: $setup.handleAddComponent\n  }, null, 8 /* PROPS */, [\"modelValue\", \"styles\"]), _createCommentVNode(\" 右侧属性面板 \"), $setup.selectedComponent ? (_openBlock(), _createBlock($setup[\"PropertyPanel\"], {\n    key: 0,\n    component: $setup.selectedComponent,\n    onUpdate: $setup.handleComponentUpdate\n  }, null, 8 /* PROPS */, [\"component\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","template","value","onSave","handleSave","onPreview","handlePreview","onPublish","handlePublish","_cache","name","_createElementVNode","_hoisted_2","components","availableComponents","onAddComponent","handleAddComponent","modelValue","templateData","layout","$event","styles","onSelect","handleSelectComponent","selectedComponent","_createBlock","key","component","onUpdate","handleComponentUpdate"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/views/TemplateEditor.vue"],"sourcesContent":["<!-- 模板编辑器主视图 -->\n<template>\n  <div class=\"template-editor\">\n    <!-- 顶部工具栏 -->\n    <editor-toolbar \n      :template=\"template.value || {}\"\n      @save=\"handleSave\"\n      @preview=\"handlePreview\"\n      @publish=\"handlePublish\"\n      @update:name=\"name => template.value.name = name\"\n    />\n    \n    <!-- 主要编辑区域 -->\n    <div class=\"editor-main\">\n      <!-- 左侧组件面板 -->\n      <component-panel\n        :components=\"availableComponents\"\n        @add-component=\"handleAddComponent\"\n      />\n      \n      <!-- 中间画布区域 -->\n      <editor-canvas\n        v-model=\"templateData.layout\"\n        :styles=\"templateData.styles\"\n        @select=\"handleSelectComponent\"\n        @add-component=\"handleAddComponent\"\n      />\n      \n      <!-- 右侧属性面板 -->\n      <property-panel\n        v-if=\"selectedComponent\"\n        :component=\"selectedComponent\"\n        @update=\"handleComponentUpdate\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport EditorToolbar from '../components/toolbar/EditorToolbar.vue'\nimport ComponentPanel from '../components/panels/ComponentPanel.vue'\nimport EditorCanvas from '../components/canvas/EditorCanvas.vue'\nimport PropertyPanel from '../components/panels/PropertyPanel.vue'\nimport { useTemplateStore } from '../store/template'\nimport { useComponentStore } from '../store/component'\n\n// 模板数据\nconst template = ref({\n  id: null,\n  name: '',\n  category: null,\n  layout: [],\n  styles: {}\n})\n\n// 计算属性，确保数据的安全访问\nconst templateData = computed(() => ({\n  layout: template.value?.layout || [],\n  styles: template.value?.styles || {}\n}))\n\n// 选中的组件\nconst selectedComponent = ref(null)\n\n// 获取可用组件列表\nconst componentStore = useComponentStore()\nconst availableComponents = computed(() => componentStore.components)\n\n// 路由参数\nconst route = useRoute()\nconst templateStore = useTemplateStore()\n\n// 初始化\nonMounted(async () => {\n  // 如果有模板ID，加载模板数据\n  if (route.params.id) {\n    const data = await templateStore.getTemplate(route.params.id)\n    template.value = { ...data }\n  } else {\n    // 初始化一个空模板\n    template.value = {\n      id: null,\n      name: '新建模板',\n      category: null,\n      layout: [],\n      styles: {}\n    }\n  }\n  \n  // 加载可用组件\n  await componentStore.loadComponents()\n  \n  // 添加默认组件\n  const defaultComponents = [\n    {\n      type: 'basic_info',\n      position: { x: 0, y: 0 },\n      data: componentStore.components.find(c => c.type === 'basic_info')?.demo_data || {}\n    },\n    {\n      type: 'job_intention',\n      position: { x: 0, y: 4 },\n      data: componentStore.components.find(c => c.type === 'job_intention')?.demo_data || {}\n    },\n    {\n      type: 'education',\n      position: { x: 0, y: 8 },\n      data: componentStore.components.find(c => c.type === 'education')?.demo_data || {}\n    }\n  ]\n  \n  // 如果是新建模板，添加默认组件\n  if (!route.params.id) {\n    defaultComponents.forEach(component => {\n      handleAddComponent(component)\n    })\n  }\n})\n\n// 处理添加组件\nconst handleAddComponent = (component) => {\n  console.log('Handling add component:', component)\n  \n  // 确保模板数据存在\n  if (!template.value) {\n    template.value = {\n      id: null,\n      name: '新建模板',\n      category: null,\n      layout: [],\n      styles: {}\n    }\n  }\n  \n  const id = `component_${Date.now()}`\n  \n  // 创建新的布局项，包含组件数据\n  const newLayoutItem = {\n    i: id,\n    x: component.position?.x || 0,\n    y: component.position?.y || template.value.layout.length * 4,\n    w: 12,\n    h: 4,\n    type: component.type,\n    data: component.demo_data || component.data || {},\n    styles: component.styles || {}\n  }\n  \n  console.log('New layout item:', newLayoutItem)\n  \n  // 更新布局数据\n  template.value.layout = [...template.value.layout, newLayoutItem]\n  \n  // 选中新添加的组件\n  selectedComponent.value = {\n    id,\n    type: component.type,\n    data: newLayoutItem.data,\n    styles: newLayoutItem.styles\n  }\n  \n  console.log('Updated template:', template.value)\n}\n\n// 处理选中组件\nconst handleSelectComponent = (componentId) => {\n  const component = template.value?.layout?.find(item => item.i === componentId)\n  selectedComponent.value = component\n    ? {\n        id: componentId,\n        type: component.type,\n        data: component.data || {},\n        styles: component.styles || {}\n      }\n    : null\n}\n\n// 处理组件更新\nconst handleComponentUpdate = (componentId, data) => {\n  const index = template.value?.layout?.findIndex(item => item.i === componentId)\n  if (index > -1) {\n    template.value.layout[index] = {\n      ...template.value.layout[index],\n      ...data\n    }\n  }\n}\n\n// 处理布局更新\nconst handleLayoutUpdate = (layout) => {\n  if (template.value) {\n    template.value.layout = layout\n  }\n}\n\n// 保存模板\nconst handleSave = async () => {\n  try {\n    await templateStore.saveTemplate(template.value)\n    ElMessage.success('保存成功')\n  } catch (error) {\n    ElMessage.error('保存失败')\n  }\n}\n\n// 预览模板\nconst handlePreview = () => {\n  // 实现预览逻辑\n}\n\n// 发布模板\nconst handlePublish = async () => {\n  try {\n    await templateStore.publishTemplate(template.value.id)\n    ElMessage.success('发布成功')\n  } catch (error) {\n    ElMessage.error('发布失败')\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.template-editor {\n  @apply h-full flex flex-col;\n  \n  .editor-main {\n    @apply flex-1 flex;\n    height: calc(100vh - 64px); // 减去顶部工具栏高度\n  }\n}\n</style> "],"mappings":";;EAEOA,KAAK,EAAC;AAAiB;;EAWrBA,KAAK,EAAC;AAAa;;uBAX1BC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,WAAc,EACdC,YAAA,CAMEC,MAAA;IALCC,QAAQ,EAAED,MAAA,CAAAC,QAAQ,CAACC,KAAK;IACxBC,MAAI,EAAEH,MAAA,CAAAI,UAAU;IAChBC,SAAO,EAAEL,MAAA,CAAAM,aAAa;IACtBC,SAAO,EAAEP,MAAA,CAAAQ,aAAa;IACtB,eAAW,EAAAC,MAAA,QAAAA,MAAA,MAAEC,IAAI,IAAIV,MAAA,CAAAC,QAAQ,CAACC,KAAK,CAACQ,IAAI,GAAGA,IAAI;yCAGlDZ,mBAAA,YAAe,EACfa,mBAAA,CAqBM,OArBNC,UAqBM,GApBJd,mBAAA,YAAe,EACfC,YAAA,CAGEC,MAAA;IAFCa,UAAU,EAAEb,MAAA,CAAAc,mBAAmB;IAC/BC,cAAa,EAAEf,MAAA,CAAAgB;2CAGlBlB,mBAAA,YAAe,EACfC,YAAA,CAKEC,MAAA;IA1BRiB,UAAA,EAsBiBjB,MAAA,CAAAkB,YAAY,CAACC,MAAM;IAtBpC,uBAAAV,MAAA,QAAAA,MAAA,MAAAW,MAAA,IAsBiBpB,MAAA,CAAAkB,YAAY,CAACC,MAAM,GAAAC,MAAA;IAC3BC,MAAM,EAAErB,MAAA,CAAAkB,YAAY,CAACG,MAAM;IAC3BC,QAAM,EAAEtB,MAAA,CAAAuB,qBAAqB;IAC7BR,cAAa,EAAEf,MAAA,CAAAgB;qDAGlBlB,mBAAA,YAAe,EAEPE,MAAA,CAAAwB,iBAAiB,I,cADzBC,YAAA,CAIEzB,MAAA;IAjCR0B,GAAA;IA+BSC,SAAS,EAAE3B,MAAA,CAAAwB,iBAAiB;IAC5BI,QAAM,EAAE5B,MAAA,CAAA6B;4CAhCjB/B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
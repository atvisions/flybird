{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fixed inset-0 overflow-y-auto\"\n};\nconst _hoisted_2 = {\n  class: \"flex min-h-full items-center justify-center p-4 text-center\"\n};\nconst _hoisted_3 = {\n  class: \"flex items-center space-x-2\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"flex items-center space-x-1 text-sm text-gray-500\"\n};\nconst _hoisted_5 = {\n  class: \"font-medium text-blue-600\"\n};\nconst _hoisted_6 = {\n  class: \"px-6 py-4 overflow-y-auto max-h-[calc(100vh-16rem)]\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"divide-y divide-gray-100\"\n};\nconst _hoisted_8 = {\n  class: \"flex justify-between items-center\"\n};\nconst _hoisted_9 = {\n  class: \"font-medium text-sm text-gray-900\"\n};\nconst _hoisted_10 = {\n  class: \"flex items-center\"\n};\nconst _hoisted_11 = {\n  key: 2,\n  class: \"animate-spin rounded-full h-5 w-5 border-2 border-gray-300 border-t-blue-600\"\n};\nconst _hoisted_12 = {\n  class: \"text-sm text-gray-500\"\n};\nconst _hoisted_13 = {\n  class: \"break-words\"\n};\nconst _hoisted_14 = {\n  class: \"text-sm text-gray-900\"\n};\nconst _hoisted_15 = {\n  class: \"break-words\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"flex items-center space-x-2 text-gray-500\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"flex items-center justify-between\"\n};\nconst _hoisted_18 = {\n  class: \"flex-1 pr-2\"\n};\nconst _hoisted_19 = [\"onClick\", \"disabled\"];\nconst _hoisted_20 = {\n  class: \"min-w-full\"\n};\nconst _hoisted_21 = {\n  class: \"bg-white\"\n};\nconst _hoisted_22 = {\n  class: \"transition-all duration-300\"\n};\nconst _hoisted_23 = {\n  class: \"col-span-2 py-3 px-4 text-sm text-gray-900\"\n};\nconst _hoisted_24 = {\n  class: \"col-span-4 py-3 px-4 text-sm text-gray-500\"\n};\nconst _hoisted_25 = {\n  class: \"break-words\"\n};\nconst _hoisted_26 = {\n  class: \"col-span-5 py-3 px-4 text-sm text-gray-900\"\n};\nconst _hoisted_27 = {\n  class: \"break-words\"\n};\nconst _hoisted_28 = {\n  key: 0,\n  class: \"flex items-center space-x-2 text-gray-500\"\n};\nconst _hoisted_29 = {\n  key: 1,\n  class: \"flex items-center justify-between\"\n};\nconst _hoisted_30 = [\"onClick\", \"disabled\"];\nconst _hoisted_31 = {\n  class: \"col-span-1 py-3 px-4 flex items-center justify-center\"\n};\nconst _hoisted_32 = {\n  key: 2,\n  class: \"animate-spin rounded-full h-5 w-5 border-2 border-gray-300 border-t-blue-600\"\n};\nconst _hoisted_33 = {\n  class: \"px-6 py-4 bg-gray-50 border-t border-gray-200\"\n};\nconst _hoisted_34 = {\n  class: \"flex flex-col sm:flex-row sm:justify-between sm:items-center space-y-3 sm:space-y-0\"\n};\nconst _hoisted_35 = {\n  class: \"text-sm text-gray-500\"\n};\nconst _hoisted_36 = {\n  class: \"flex justify-end space-x-3\"\n};\nconst _hoisted_37 = [\"disabled\"];\nconst _hoisted_38 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"TransitionRoot\"], {\n    appear: \"\",\n    show: !!$props.modelValue,\n    as: \"template\"\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"Dialog\"], {\n      as: \"div\",\n      class: \"relative z-50\",\n      onClose: $setup.handleClose\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 背景遮罩 \"), _createVNode($setup[\"TransitionChild\"], {\n        as: \"template\",\n        enter: \"duration-300 ease-out\",\n        \"enter-from\": \"opacity-0\",\n        \"enter-to\": \"opacity-100\",\n        leave: \"duration-200 ease-in\",\n        \"leave-from\": \"opacity-100\",\n        \"leave-to\": \"opacity-0\"\n      }, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n          class: \"fixed inset-0 bg-black/25\"\n        }, null, -1 /* HOISTED */)])),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 对话框 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"TransitionChild\"], {\n        as: \"template\",\n        enter: \"duration-300 ease-out\",\n        \"enter-from\": \"opacity-0 scale-95\",\n        \"enter-to\": \"opacity-100 scale-100\",\n        leave: \"duration-200 ease-in\",\n        \"leave-from\": \"opacity-100 scale-100\",\n        \"leave-to\": \"opacity-0 scale-95\"\n      }, {\n        default: _withCtx(() => [_createVNode($setup[\"DialogPanel\"], {\n          class: \"w-full max-w-2xl transform overflow-hidden rounded-xl bg-white text-left align-middle shadow-xl transition-all\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" 头部 \"), _createVNode($setup[\"DialogTitle\"], {\n            as: \"div\",\n            class: \"flex items-center justify-between px-6 py-4 border-b border-gray-200\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", {\n              class: \"text-lg font-medium text-gray-900\"\n            }, \"AI 优化\", -1 /* HOISTED */)), $setup.isOptimizing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"已完成\", -1 /* HOISTED */)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($setup.completedCount), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"span\", null, \"/\", -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.totalFields), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n              onClick: $setup.handleClose,\n              class: \"rounded-full p-1 hover:bg-gray-100 transition-colors\"\n            }, [_createVNode($setup[\"XMarkIcon\"], {\n              class: \"w-5 h-5 text-gray-400\"\n            })])]),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 内容区域 \"), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 移动端视图 \"), $setup.isMobile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayFields, field => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: field.name,\n              class: \"py-4 space-y-3\"\n            }, [_createCommentVNode(\" 字段名和状态 \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(field.label), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [field.status === 'success' ? (_openBlock(), _createBlock($setup[\"CheckCircleIcon\"], {\n              key: 0,\n              class: \"w-5 h-5 text-green-500\"\n            })) : field.status === 'failed' ? (_openBlock(), _createBlock($setup[\"XCircleIcon\"], {\n              key: 1,\n              class: \"w-5 h-5 text-red-500\"\n            })) : field.status === 'processing' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11)) : (_openBlock(), _createBlock($setup[\"MinusCircleIcon\"], {\n              key: 3,\n              class: \"w-5 h-5 text-gray-300\"\n            }))])]), _createCommentVNode(\" 当前内容 \"), _createElementVNode(\"div\", _hoisted_12, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n              class: \"font-medium text-xs text-gray-400 mb-1\"\n            }, \"当前内容\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(field.currentValue || '未填写'), 1 /* TEXT */)]), _createCommentVNode(\" 优化建议 \"), _createElementVNode(\"div\", _hoisted_14, [_cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n              class: \"font-medium text-xs text-gray-400 mb-1\"\n            }, \"优化建议\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, [field.status === 'processing' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [...(_cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n              class: \"animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-blue-600\"\n            }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"优化中...\", -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, _toDisplayString(field.optimizedValue || '等待优化'), 1 /* TEXT */), field.status === 'failed' ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              onClick: $event => $setup.retryOptimize(field),\n              disabled: $setup.isOptimizing,\n              class: \"shrink-0 px-2 py-1 text-xs text-blue-600 hover:text-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            }, \" 重新优化 \", 8 /* PROPS */, _hoisted_19)) : _createCommentVNode(\"v-if\", true)]))])])]);\n          }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n            key: 1\n          }, [_createCommentVNode(\" 桌面端表格视图 \"), _createElementVNode(\"div\", _hoisted_20, [_createCommentVNode(\" 表格头部 \"), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n            class: \"sticky top-0 z-10 bg-gray-50 border-b border-gray-200\"\n          }, [_createElementVNode(\"div\", {\n            class: \"grid grid-cols-12 gap-0\"\n          }, [_createElementVNode(\"div\", {\n            class: \"col-span-2 py-3 px-4 text-left text-sm font-medium text-gray-900\"\n          }, \"字段\"), _createElementVNode(\"div\", {\n            class: \"col-span-4 py-3 px-4 text-left text-sm font-medium text-gray-900\"\n          }, \"当前内容\"), _createElementVNode(\"div\", {\n            class: \"col-span-5 py-3 px-4 text-left text-sm font-medium text-gray-900\"\n          }, \"优化建议\"), _createElementVNode(\"div\", {\n            class: \"col-span-1 py-3 px-4 text-center text-sm font-medium text-gray-900\"\n          }, \"状态\")])], -1 /* HOISTED */)), _createCommentVNode(\" 表格内容 \"), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayFields, field => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: field.name,\n              class: \"grid grid-cols-12 gap-0 border-b border-gray-100 hover:bg-gray-50 field-row\"\n            }, [_createCommentVNode(\" 字段名 \"), _createElementVNode(\"div\", _hoisted_23, _toDisplayString(field.label), 1 /* TEXT */), _createCommentVNode(\" 当前内容 \"), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, _toDisplayString(field.currentValue || '未填写'), 1 /* TEXT */)]), _createCommentVNode(\" 优化建议 \"), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [field.status === 'processing' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [...(_cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n              class: \"animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-blue-600\"\n            }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"优化中...\", -1 /* HOISTED */)]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_createElementVNode(\"div\", null, _toDisplayString(field.optimizedValue || '等待优化'), 1 /* TEXT */), field.status === 'failed' ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              onClick: $event => $setup.retryOptimize(field),\n              disabled: $setup.isOptimizing,\n              class: \"ml-2 px-2 py-1 text-xs text-blue-600 hover:text-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            }, \" 重新优化 \", 8 /* PROPS */, _hoisted_30)) : _createCommentVNode(\"v-if\", true)]))])]), _createCommentVNode(\" 状态 \"), _createElementVNode(\"div\", _hoisted_31, [field.status === 'success' ? (_openBlock(), _createBlock($setup[\"CheckCircleIcon\"], {\n              key: 0,\n              class: \"w-5 h-5 text-green-500\"\n            })) : field.status === 'failed' ? (_openBlock(), _createBlock($setup[\"XCircleIcon\"], {\n              key: 1,\n              class: \"w-5 h-5 text-red-500\"\n            })) : field.status === 'processing' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32)) : (_openBlock(), _createBlock($setup[\"MinusCircleIcon\"], {\n              key: 3,\n              class: \"w-5 h-5 text-gray-300\"\n            }))])]);\n          }), 128 /* KEYED_FRAGMENT */))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]), _createCommentVNode(\" 底部按钮 \"), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"div\", _hoisted_35, _toDisplayString($setup.footerText), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"button\", {\n            onClick: $setup.handleClose,\n            disabled: $setup.isOptimizing,\n            class: \"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n          }, \" 取消 \", 8 /* PROPS */, _hoisted_37), !$setup.isOptimizing ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: $setup.startOptimize,\n            class: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700\"\n          }, \" 一键优化 \")) : $setup.hasFailedFields && !$setup.hasProcessingFields ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: $setup.retryFailedOptimizations,\n            class: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700\"\n          }, \" 继续优化 \")) : (_openBlock(), _createElementBlock(\"button\", {\n            key: 2,\n            onClick: $setup.handleApply,\n            disabled: !$setup.canApply,\n            class: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n          }, \" 应用优化 \", 8 /* PROPS */, _hoisted_38))])])])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })])])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]);\n}","map":{"version":3,"names":["class","key","_createBlock","$setup","appear","show","$props","modelValue","as","default","_withCtx","_createVNode","onClose","handleClose","_createCommentVNode","enter","leave","_cache","_createElementVNode","_","_hoisted_1","_hoisted_2","_hoisted_3","isOptimizing","_createElementBlock","_hoisted_4","_hoisted_5","_toDisplayString","completedCount","totalFields","onClick","_hoisted_6","isMobile","_hoisted_7","_Fragment","_renderList","displayFields","field","name","_hoisted_8","_hoisted_9","label","_hoisted_10","status","_hoisted_11","_hoisted_12","_hoisted_13","currentValue","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","optimizedValue","$event","retryOptimize","disabled","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","footerText","_hoisted_36","_hoisted_37","startOptimize","hasFailedFields","hasProcessingFields","retryFailedOptimizations","handleApply","canApply","_hoisted_38"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/dialogs/AIOptimizeDialog.vue"],"sourcesContent":["<template>\n  <TransitionRoot appear :show=\"!!modelValue\" as=\"template\">\n    <Dialog as=\"div\" class=\"relative z-50\" @close=\"handleClose\">\n      <!-- 背景遮罩 -->\n      <TransitionChild\n        as=\"template\"\n        enter=\"duration-300 ease-out\"\n        enter-from=\"opacity-0\"\n        enter-to=\"opacity-100\"\n        leave=\"duration-200 ease-in\"\n        leave-from=\"opacity-100\"\n        leave-to=\"opacity-0\"\n      >\n        <div class=\"fixed inset-0 bg-black/25\" />\n      </TransitionChild>\n\n      <!-- 对话框 -->\n      <div class=\"fixed inset-0 overflow-y-auto\">\n        <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n          <TransitionChild\n            as=\"template\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0 scale-95\"\n            enter-to=\"opacity-100 scale-100\"\n            leave=\"duration-200 ease-in\"\n            leave-from=\"opacity-100 scale-100\"\n            leave-to=\"opacity-0 scale-95\"\n          >\n            <DialogPanel class=\"w-full max-w-2xl transform overflow-hidden rounded-xl bg-white text-left align-middle shadow-xl transition-all\">\n              <!-- 头部 -->\n              <DialogTitle as=\"div\" class=\"flex items-center justify-between px-6 py-4 border-b border-gray-200\">\n                <div class=\"flex items-center space-x-2\">\n                  <h3 class=\"text-lg font-medium text-gray-900\">AI 优化</h3>\n                  <div v-if=\"isOptimizing\" class=\"flex items-center space-x-1 text-sm text-gray-500\">\n                    <span>已完成</span>\n                    <span class=\"font-medium text-blue-600\">{{ completedCount }}</span>\n                    <span>/</span>\n                    <span>{{ totalFields }}</span>\n                  </div>\n                </div>\n                <button\n                  @click=\"handleClose\"\n                  class=\"rounded-full p-1 hover:bg-gray-100 transition-colors\"\n                >\n                  <XMarkIcon class=\"w-5 h-5 text-gray-400\" />\n                </button>\n              </DialogTitle>\n\n              <!-- 内容区域 -->\n              <div class=\"px-6 py-4 overflow-y-auto max-h-[calc(100vh-16rem)]\">\n                <!-- 移动端视图 -->\n                <div v-if=\"isMobile\" class=\"divide-y divide-gray-100\">\n                  <div \n                    v-for=\"field in displayFields\" \n                    :key=\"field.name\"\n                    class=\"py-4 space-y-3\"\n                  >\n                    <!-- 字段名和状态 -->\n                    <div class=\"flex justify-between items-center\">\n                      <div class=\"font-medium text-sm text-gray-900\">{{ field.label }}</div>\n                      <div class=\"flex items-center\">\n                        <template v-if=\"field.status === 'success'\">\n                          <CheckCircleIcon class=\"w-5 h-5 text-green-500\" />\n                        </template>\n                        <template v-else-if=\"field.status === 'failed'\">\n                          <XCircleIcon class=\"w-5 h-5 text-red-500\" />\n                        </template>\n                        <template v-else-if=\"field.status === 'processing'\">\n                          <div class=\"animate-spin rounded-full h-5 w-5 border-2 border-gray-300 border-t-blue-600\"></div>\n                        </template>\n                        <template v-else>\n                          <MinusCircleIcon class=\"w-5 h-5 text-gray-300\" />\n                        </template>\n                      </div>\n                    </div>\n                    \n                    <!-- 当前内容 -->\n                    <div class=\"text-sm text-gray-500\">\n                      <div class=\"font-medium text-xs text-gray-400 mb-1\">当前内容</div>\n                      <div class=\"break-words\">{{ field.currentValue || '未填写' }}</div>\n                    </div>\n                    \n                    <!-- 优化建议 -->\n                    <div class=\"text-sm text-gray-900\">\n                      <div class=\"font-medium text-xs text-gray-400 mb-1\">优化建议</div>\n                      <div class=\"break-words\">\n                        <template v-if=\"field.status === 'processing'\">\n                          <div class=\"flex items-center space-x-2 text-gray-500\">\n                            <div class=\"animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-blue-600\"></div>\n                            <span>优化中...</span>\n                          </div>\n                        </template>\n                        <template v-else>\n                          <div class=\"flex items-center justify-between\">\n                            <div class=\"flex-1 pr-2\">{{ field.optimizedValue || '等待优化' }}</div>\n                            <button\n                              v-if=\"field.status === 'failed'\"\n                              @click=\"retryOptimize(field)\"\n                              :disabled=\"isOptimizing\"\n                              class=\"shrink-0 px-2 py-1 text-xs text-blue-600 hover:text-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                            >\n                              重新优化\n                            </button>\n                          </div>\n                        </template>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 桌面端表格视图 -->\n                <div v-else class=\"min-w-full\">\n                  <!-- 表格头部 -->\n                  <div class=\"sticky top-0 z-10 bg-gray-50 border-b border-gray-200\">\n                    <div class=\"grid grid-cols-12 gap-0\">\n                      <div class=\"col-span-2 py-3 px-4 text-left text-sm font-medium text-gray-900\">字段</div>\n                      <div class=\"col-span-4 py-3 px-4 text-left text-sm font-medium text-gray-900\">当前内容</div>\n                      <div class=\"col-span-5 py-3 px-4 text-left text-sm font-medium text-gray-900\">优化建议</div>\n                      <div class=\"col-span-1 py-3 px-4 text-center text-sm font-medium text-gray-900\">状态</div>\n                    </div>\n                  </div>\n\n                  <!-- 表格内容 -->\n                  <div class=\"bg-white\">\n                    <div class=\"transition-all duration-300\">\n                      <div\n                        v-for=\"field in displayFields\" \n                        :key=\"field.name\"\n                        class=\"grid grid-cols-12 gap-0 border-b border-gray-100 hover:bg-gray-50 field-row\"\n                      >\n                        <!-- 字段名 -->\n                        <div class=\"col-span-2 py-3 px-4 text-sm text-gray-900\">\n                          {{ field.label }}\n                        </div>\n                        \n                        <!-- 当前内容 -->\n                        <div class=\"col-span-4 py-3 px-4 text-sm text-gray-500\">\n                          <div class=\"break-words\">\n                            {{ field.currentValue || '未填写' }}\n                          </div>\n                        </div>\n                        \n                        <!-- 优化建议 -->\n                        <div class=\"col-span-5 py-3 px-4 text-sm text-gray-900\">\n                          <div class=\"break-words\">\n                            <template v-if=\"field.status === 'processing'\">\n                              <div class=\"flex items-center space-x-2 text-gray-500\">\n                                <div class=\"animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-blue-600\"></div>\n                                <span>优化中...</span>\n                              </div>\n                            </template>\n                            <template v-else>\n                              <div class=\"flex items-center justify-between\">\n                                <div>{{ field.optimizedValue || '等待优化' }}</div>\n                                <button\n                                  v-if=\"field.status === 'failed'\"\n                                  @click=\"retryOptimize(field)\"\n                                  :disabled=\"isOptimizing\"\n                                  class=\"ml-2 px-2 py-1 text-xs text-blue-600 hover:text-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                  重新优化\n                                </button>\n                              </div>\n                            </template>\n                          </div>\n                        </div>\n                        \n                        <!-- 状态 -->\n                        <div class=\"col-span-1 py-3 px-4 flex items-center justify-center\">\n                          <template v-if=\"field.status === 'success'\">\n                            <CheckCircleIcon class=\"w-5 h-5 text-green-500\" />\n                          </template>\n                          <template v-else-if=\"field.status === 'failed'\">\n                            <XCircleIcon class=\"w-5 h-5 text-red-500\" />\n                          </template>\n                          <template v-else-if=\"field.status === 'processing'\">\n                            <div class=\"animate-spin rounded-full h-5 w-5 border-2 border-gray-300 border-t-blue-600\"></div>\n                          </template>\n                          <template v-else>\n                            <MinusCircleIcon class=\"w-5 h-5 text-gray-300\" />\n                          </template>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- 底部按钮 -->\n              <div class=\"px-6 py-4 bg-gray-50 border-t border-gray-200\">\n                <div class=\"flex flex-col sm:flex-row sm:justify-between sm:items-center space-y-3 sm:space-y-0\">\n                  <div class=\"text-sm text-gray-500\">\n                    {{ footerText }}\n                  </div>\n                  <div class=\"flex justify-end space-x-3\">\n                    <button\n                      @click=\"handleClose\"\n                      :disabled=\"isOptimizing\"\n                      class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      取消\n                    </button>\n                    <button v-if=\"!isOptimizing\"\n                      @click=\"startOptimize\"\n                      class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700\"\n                    >\n                      一键优化\n                    </button>\n                    <button v-else-if=\"hasFailedFields && !hasProcessingFields\"\n                      @click=\"retryFailedOptimizations\"\n                      class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700\"\n                    >\n                      继续优化\n                    </button>\n                    <button v-else\n                      @click=\"handleApply\"\n                      :disabled=\"!canApply\"\n                      class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      应用优化\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </DialogPanel>\n          </TransitionChild>\n        </div>\n      </div>\n    </Dialog>\n  </TransitionRoot>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, nextTick, watch } from 'vue'\nimport { useWindowSize } from '@vueuse/core'\nimport { \n  XMarkIcon, \n  CheckCircleIcon, \n  XCircleIcon,\n  MinusCircleIcon\n} from '@heroicons/vue/24/solid'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  TransitionChild,\n  TransitionRoot\n} from '@headlessui/vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  },\n  profileData: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'apply'])\n\n// 修改字段配置，只保留需要优化的字段\nconst fieldConfig = [\n  // 基本信息 - 只优化个人简介\n  { name: 'basic_info.personal_summary', label: '个人简介', group: '基本信息' },\n  \n  // 求职意向 - 全部需要优化\n  { name: 'job_intention.job_type', label: '工作类型', group: '求职意向' },\n  { name: 'job_intention.job_status', label: '求职状态', group: '求职意向' },\n  { name: 'job_intention.expected_salary', label: '期望薪资', group: '求职意向' },\n  { name: 'job_intention.industries', label: '期望行业', group: '求职意向' },\n\n  // 工作经历 - 优化职位、描述、成就和技术栈\n  { name: 'work_experiences', label: '工作经历', group: '工作经历', isArray: true, fields: [\n    { name: 'position', label: '职位名称' },\n    { name: 'department', label: '所在部门' },\n    { name: 'description', label: '工作描述' },\n    { name: 'achievements', label: '工作成就' },\n    { name: 'technologies', label: '技术栈' }\n  ]},\n\n  // 教育经历 - 只优化在校经历\n  { name: 'educations', label: '教育经历', group: '教育经历', isArray: true, fields: [\n    { name: 'description', label: '在校经历' }\n  ]},\n\n  // 技能特长 - 优化描述和等级\n  { name: 'skills', label: '技能特长', group: '技能特长', isArray: true, fields: [\n    { name: 'level', label: '掌握程度' },\n    { name: 'description', label: '技能描述' }\n  ]},\n\n  // 证书成就 - 只优化描述\n  { name: 'certificates', label: '证书成就', group: '证书成就', isArray: true, fields: [\n    { name: 'description', label: '证书描述' }\n  ]},\n\n  // 项目经历 - 优化角色、描述、成就和技术栈\n  { name: 'projects', label: '项目经历', group: '项目经历', isArray: true, fields: [\n    { name: 'role', label: '担任角色' },\n    { name: 'description', label: '项目描述' },\n    { name: 'achievements', label: '项目成就' },\n    { name: 'technologies', label: '使用技术' }\n  ]}\n]\n\n// 修改模拟优化方法\nconst mockOptimize = async (field, value) => {\n  if (!value) return null\n  \n  const optimizations = {\n    // 基本信息优化\n    personal_summary: value => `我是一名经验丰富的${value.includes('开发') ? '开发工程师' : '专业人士'}，${value}`,\n\n    // 求职意向优化\n    expected_salary: value => value.includes('面议') ? '根据经验和能力，期望薪资15k-25k' : value,\n    industries: value => value.split(',').map(i => i.trim()).join('、'),\n    job_type: value => value || '全职',\n    job_status: value => value || '在职，考虑新机会',\n\n    // 工作经历优化\n    position: value => value.replace(/^高级/, '资深').replace(/工程师$/, '开发工程师'),\n    department: value => value || '技术部',\n    description: value => value.replace(/^我/, '').replace(/。$/, '，工作中注重团队协作和技术创新。'),\n    achievements: value => value ? `${value}，为团队和公司创造了显著价值。` : '通过技术创新和流程优化，提升了团队工作效率，获得领导和同事的一致好评。',\n    technologies: value => value ? value.split(',').sort().join(', ') : '',\n\n    // 技能特长优化\n    level: value => value === '熟悉' ? '精通' : value,\n    'skills.description': value => `精通${value}，有丰富的实践经验。`,\n\n    // 项目经历优化\n    role: value => value || '核心开发工程师',\n    'projects.description': value => value ? \n      value.replace(/。$/, '，负责核心功能开发和性能优化。') : \n      '负责项目核心功能开发，解决技术难点，提升系统性能。',\n    'projects.achievements': value => value ? \n      `${value}，获得客户好评。` : \n      '按时完成项目交付，解决多个技术难点，提升系统性能30%以上。'\n  }\n\n  // 模拟 API 延迟\n  await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000))\n\n  // 根据字段名返回优化结果\n  const fieldKey = field.name.split('.').pop()\n  return optimizations[fieldKey] ? \n    optimizations[fieldKey](value) : \n    value // 如果没有优化规则，返回原值\n}\n\n// 修改处理字段数据的方法\nconst processFields = () => {\n  if (!props.profileData) return []\n  \n  const allFields = []\n  \n  // 基本信息\n  if (props.profileData.basic_info) {\n    allFields.push({\n      name: 'basic_info.bio',\n      label: '个人简介',\n      currentValue: props.profileData.basic_info.bio,\n      optimizedValue: '',\n      status: 'pending'\n    })\n  }\n  \n  // 工作经历\n  if (props.profileData.work_experiences?.length) {\n    props.profileData.work_experiences.forEach((exp, index) => {\n      allFields.push({\n        name: `work_experiences.${index}.description`,\n        label: `工作描述 ${index + 1}`,\n        currentValue: exp.description,\n        optimizedValue: '',\n        status: 'pending'\n      })\n      \n      if (exp.achievements) {\n        allFields.push({\n          name: `work_experiences.${index}.achievements`,\n          label: `工作成就 ${index + 1}`,\n          currentValue: exp.achievements,\n          optimizedValue: '',\n          status: 'pending'\n        })\n      }\n    })\n  }\n  \n  // 项目经历\n  if (props.profileData.projects?.length) {\n    props.profileData.projects.forEach((project, index) => {\n      allFields.push({\n        name: `projects.${index}.description`,\n        label: `项目描述 ${index + 1}`,\n        currentValue: project.description,\n        optimizedValue: '',\n        status: 'pending'\n      })\n      \n      if (project.achievements) {\n        allFields.push({\n          name: `projects.${index}.achievements`,\n          label: `项目成就 ${index + 1}`,\n          currentValue: project.achievements,\n          optimizedValue: '',\n          status: 'pending'\n        })\n      }\n    })\n  }\n  \n  return allFields\n}\n\nconst fields = ref(processFields())\n\n// 计算属性\nconst displayFields = computed(() => {\n  return fields.value.sort((a, b) => {\n    if (a.status === 'pending' && b.status !== 'pending') return 1\n    if (a.status !== 'pending' && b.status === 'pending') return -1\n    return 0\n  })\n})\n\nconst completedCount = computed(() => \n  fields.value.filter(f => ['success', 'failed'].includes(f.status)).length\n)\n\nconst totalFields = computed(() => fields.value.length)\n\nconst hasOptimized = computed(() => \n  fields.value.some(f => f.status === 'success')\n)\n\n// 添加优化状态标志\nconst isOptimizing = ref(false)\n\n// 添加新的计算属性\nconst hasFailedFields = computed(() => \n  fields.value.some(f => f.status === 'failed')\n)\n\nconst hasProcessingFields = computed(() => \n  fields.value.some(f => f.status === 'processing')\n)\n\n// 修改 canApply 计算属性的逻辑\nconst canApply = computed(() => {\n  // 不能有正在处理的字段\n  if (hasProcessingFields.value) return false\n  \n  // 至少要有一个成功优化的字段\n  const hasSuccessFields = fields.value.some(f => \n    f.status === 'success' && f.optimizedValue !== f.currentValue\n  )\n  \n  // 所有有内容的字段都必须完成优化（成功或失败）\n  const allFieldsProcessed = fields.value.every(f => \n    !f.currentValue || // 未填写的字段可以跳过\n    f.status === 'success' || \n    f.status === 'failed'\n  )\n  \n  return hasSuccessFields && allFieldsProcessed\n})\n\n// 修改底部文本\nconst footerText = computed(() => {\n  if (!isOptimizing.value) return '点击\"一键优化\"开始AI优化'\n  if (hasProcessingFields.value) return '正在优化中，请稍候...'\n  if (hasFailedFields.value) return '部分优化失败，您可以选择继续优化或应用已优化的内容'\n  if (canApply.value) return '优化完成，您可以选择应用建议的内容'\n  return '正在准备优化...'\n})\n\n// 添加滚动容器的引用\nconst scrollContainer = ref(null)\n\n// 修改开始优化方法\nconst startOptimize = async () => {\n  isOptimizing.value = true\n  // 只优化有内容的待处理字段\n  const pendingFields = fields.value.filter(f => \n    f.currentValue && f.status === 'pending'\n  )\n  \n  for (let i = 0; i < pendingFields.length; i++) {\n    const field = pendingFields[i]\n    field.status = 'processing'\n    \n    try {\n      const optimized = await mockOptimize(field, field.currentValue)\n      if (optimized) {\n        field.optimizedValue = optimized\n        field.status = 'success'\n      } else {\n        field.status = 'failed' // 改为失败而不是重置为 pending\n      }\n      \n      // 等待DOM更新后滚动\n      await nextTick()\n      if (i < pendingFields.length - 1) {\n        const container = scrollContainer.value\n        const itemHeight = 60\n        const scrollAmount = itemHeight * (i + 1)\n        container.scrollTo({\n          top: scrollAmount,\n          behavior: 'smooth'\n        })\n      }\n    } catch (error) {\n      console.error('优化失败:', error)\n      field.status = 'failed'\n    }\n    \n    await new Promise(resolve => setTimeout(resolve, 500))\n  }\n}\n\n// 修改处理关闭方法\nconst handleClose = () => {\n  if (isOptimizing.value) {\n    // 如果正在优化，提示用户是否确认关闭\n    if (confirm('正在优化中，确定要关闭吗？')) {\n      isOptimizing.value = false\n      dialogVisible.value = false\n    }\n  } else {\n    dialogVisible.value = false\n  }\n}\n\n// 修改处理应用优化的方法\nconst handleApply = async () => {\n  try {\n    // 获取已优化的字段数量\n    const optimizedCount = fields.value.filter(f => \n      f.status === 'success' && f.optimizedValue !== f.currentValue\n    ).length\n\n    // 构建确认消息\n    const message = `确定要应用 ${optimizedCount} 条优化建议吗？此操作将覆盖原有内容且不可撤销。`\n\n    // 显示确认对话框\n    const confirmed = await ElMessageBox.confirm(\n      message,\n      '应用优化建议',\n      {\n        confirmButtonText: '确定应用',\n        cancelButtonText: '取消',\n        type: 'warning',\n        closeOnClickModal: false,\n        closeOnPressEscape: false,\n        distinguishCancelAndClose: true,\n        confirmButtonClass: 'el-button--danger',\n      }\n    )\n\n    if (confirmed === 'confirm') {\n      const optimizedData = {}\n      fields.value.forEach(field => {\n        if (field.status === 'success' && field.optimizedValue !== field.currentValue) {\n          // 解析字段路径\n          const pathParts = field.name.split('.')\n          \n          if (pathParts.length === 4) { // 数组字段，例如: work_experiences.0.description\n            const [collection, index, key] = pathParts.slice(1)\n            if (!optimizedData[pathParts[0]]) {\n              optimizedData[pathParts[0]] = []\n            }\n            if (!optimizedData[pathParts[0]][parseInt(index)]) {\n              optimizedData[pathParts[0]][parseInt(index)] = {}\n            }\n            optimizedData[pathParts[0]][parseInt(index)][key] = field.optimizedValue\n          } else { // 普通字段\n            const [category, key] = pathParts\n            if (category && key) {\n              if (!optimizedData[category]) {\n                optimizedData[category] = {}\n              }\n              optimizedData[category][key] = field.optimizedValue\n            } else {\n              optimizedData[field.name] = field.optimizedValue\n            }\n          }\n        }\n      })\n\n      emit('apply', optimizedData)\n      ElMessage.success('优化内容已保存')\n      dialogVisible.value = false\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('应用优化失败:', error)\n      ElMessage.error('应用优化失败，请重试')\n    }\n  }\n}\n\n// 添加回对话框控制代码\nconst dialogVisible = computed({\n  get: () => props.modelValue,\n  set: (value) => emit('update:modelValue', value)\n})\n\n// 响应式布局\nconst { width } = useWindowSize()\nconst isMobile = computed(() => width.value < 640)\nconst dialogWidth = computed(() => {\n  if (isMobile.value) return '100%'\n  return '1000px'  // 增加宽度以适应内容\n})\n\n// 移除 onMounted 中的自动处理\nonMounted(() => {\n  if (props.profileData) {\n    fields.value = processFields()\n  }\n})\n\n// 监听对话框显示状态\nwatch(() => dialogVisible.value, (visible) => {\n  if (visible) {\n    fields.value = processFields()\n  }\n})\n\n// 修改表格列宽度\nconst columnWidths = {\n  label: 'w-[120px] min-w-[120px]',\n  content: 'w-[200px] min-w-[200px]',\n  suggestion: 'min-w-[300px] flex-1',\n  status: 'w-[60px] min-w-[60px]'\n}\n\n// 添加 watch 来监控数据变化\nwatch(() => props.profileData, (newVal) => {\n  if (newVal) {\n    fields.value = processFields()\n  }\n}, { immediate: true, deep: true })\n\n// 添加重试优化方法\nconst retryOptimize = async (field) => {\n  field.status = 'processing'\n  try {\n    const optimized = await mockOptimize(field, field.currentValue)\n    if (optimized) {\n      field.optimizedValue = optimized\n      field.status = 'success'\n    } else {\n      field.status = 'failed'\n    }\n  } catch (error) {\n    console.error('重新优化失败:', error)\n    field.status = 'failed'\n  }\n}\n\n// 添加重试所有失败的优化方法\nconst retryFailedOptimizations = async () => {\n  const failedFields = fields.value.filter(f => f.status === 'failed')\n  isOptimizing.value = true\n  \n  for (const field of failedFields) {\n    await retryOptimize(field)\n    // 添加短暂延迟\n    await new Promise(resolve => setTimeout(resolve, 500))\n  }\n  \n  isOptimizing.value = false\n}\n</script>\n\n<style scoped>\n/* 动画效果 */\n.list-move,\n.list-enter-active,\n.list-leave-active {\n  transition: all 0.5s ease;\n}\n\n.list-enter-from,\n.list-leave-to {\n  opacity: 0;\n  transform: translateY(30px);\n}\n\n.list-leave-active {\n  position: absolute;\n}\n\n/* 滚动条美化 */\n.overflow-y-auto {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(0, 0, 0, 0.2) transparent;\n}\n\n.overflow-y-auto::-webkit-scrollbar {\n  width: 6px;\n}\n\n.overflow-y-auto::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.overflow-y-auto::-webkit-scrollbar-thumb {\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 3px;\n}\n\n/* 文本换行 */\n.break-words {\n  word-break: break-word;\n  overflow-wrap: break-word;\n}\n\n/* 添加平滑滚动 */\n.overflow-y-auto {\n  scroll-behavior: smooth;\n}\n\n/* 优化滚动体验 */\n.field-row {\n  scroll-margin: 100px; /* 确保滚动时有足够的上下文 */\n}\n\n/* 优化滚动行为 */\n.scroll-smooth {\n  scroll-behavior: smooth;\n}\n\n/* 确保每个字段行高一致 */\n.field-row {\n  min-height: 60px; /* 与 itemHeight 对应 */\n}\n\n/* 移动端优化 */\n@media (max-width: 640px) {\n  .field-row {\n    min-height: auto;\n  }\n  \n  .optimize-dialog {\n    margin: 0;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
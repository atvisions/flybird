{"ast":null,"code":"import request from '@/utils/request';\nexport const auth = {\n  // 密码登录\n  loginWithPassword: async function (data) {\n    try {\n      // 打印请求数据\n      console.log('Login request data:', {\n        account: data.account,\n        password: '***' // 不打印实际密码\n      });\n      const response = await request.post('/api/v1/users/auth/login/password/', {\n        account: data.account,\n        password: data.password\n      });\n      return this.handleLoginResponse(response);\n    } catch (error) {\n      // 打印错误详情\n\n      if (error.response) {\n        // 直接抛出服务器返回的错误信息\n        throw new Error(error.response.data.message || '登录失败，请稍后重试');\n      }\n      throw error;\n    }\n  },\n  // 退出登录\n  logout: async () => {\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) return;\n    try {\n      await request.post('/api/v1/users/auth/logout/', {\n        refresh: refreshToken\n      });\n    } finally {\n      // 清除所有相关的本地存储数据\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('token_expires_at');\n      // 清除用户相关数据\n      localStorage.removeItem('remember_me');\n      localStorage.removeItem('remembered_account');\n      localStorage.removeItem('userInfo');\n      // 清除其他可能存在的数据\n      localStorage.removeItem('isLoggedIn');\n      // 清除请求头中的 token\n      delete request.defaults.headers.common['Authorization'];\n    }\n  },\n  // 刷新 token\n  refreshToken: data => {\n    return request.post('/api/v1/users/auth/token/refresh/', data);\n  },\n  // 更新用户名（昵称）\n  updateUsername: data => {\n    return request.post('/api/v1/users/account/username/', data);\n  },\n  // 发送验证码\n  sendVerifyCode: data => {\n    // 验证必要参数\n    if (!data.phone || !data.scene) {\n      throw new Error('手机号和场景参数不能为空');\n    }\n\n    // 验证场景是否有效\n    const validScenes = ['register', 'login', 'reset_password', 'change_phone'];\n    if (!validScenes.includes(data.scene)) {\n      throw new Error('无效的场景类型');\n    }\n    return request({\n      url: '/api/v1/users/auth/sms/send/',\n      method: 'post',\n      data: {\n        phone: data.phone,\n        scene: data.scene\n      }\n    });\n  },\n  // 重置密码\n  resetPassword: async data => {\n    return request.post('/api/v1/users/auth/password/reset/', {\n      phone: data.phone,\n      code: data.code,\n      new_password: data.new_password,\n      confirm_password: data.confirm_password\n    });\n  },\n  // 注册\n  register: async data => {\n    return request.post('/api/v1/users/auth/register/', {\n      phone: data.phone,\n      code: data.code,\n      password: data.password,\n      confirm_password: data.confirmPassword\n    });\n  },\n  handleLoginResponse(response) {\n    if (response?.data?.code === 200) {\n      const userData = response.data.data;\n      // 设置请求头的 Authorization\n      const token = userData.access;\n      if (token) {\n        request.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      }\n      return {\n        token: token,\n        refresh: userData.refresh,\n        userInfo: {\n          id: userData.id,\n          uid: userData.uid,\n          username: userData.username,\n          avatar: userData.avatar\n        }\n      };\n    }\n    console.error('Login response error:', response?.data);\n    throw new Error(response?.data?.message || '登录失败');\n  }\n};\nexport default auth;","map":{"version":3,"names":["request","auth","loginWithPassword","data","console","log","account","password","response","post","handleLoginResponse","error","Error","message","logout","refreshToken","localStorage","getItem","refresh","removeItem","defaults","headers","common","updateUsername","sendVerifyCode","phone","scene","validScenes","includes","url","method","resetPassword","code","new_password","confirm_password","register","confirmPassword","userData","token","access","userInfo","id","uid","username","avatar"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/api/auth.js"],"sourcesContent":["import request from '@/utils/request'\n\nexport const auth = {\n  // 密码登录\n  loginWithPassword: async function(data) {\n    try {\n      // 打印请求数据\n      console.log('Login request data:', {\n        account: data.account,\n        password: '***'  // 不打印实际密码\n      })\n      const response = await request.post('/api/v1/users/auth/login/password/', {\n        account: data.account,\n        password: data.password\n      })\n      return this.handleLoginResponse(response)\n    } catch (error) {\n      // 打印错误详情\n      \n      if (error.response) {\n        \n        // 直接抛出服务器返回的错误信息\n        throw new Error(error.response.data.message || '登录失败，请稍后重试')\n      }\n      throw error\n    }\n  },\n  \n  // 退出登录\n  logout: async () => {\n    const refreshToken = localStorage.getItem('refresh_token')\n    if (!refreshToken) return\n    try {\n      await request.post('/api/v1/users/auth/logout/', { refresh: refreshToken })\n    } finally {\n      // 清除所有相关的本地存储数据\n      localStorage.removeItem('token')\n      localStorage.removeItem('refresh_token')\n      localStorage.removeItem('token_expires_at')\n      // 清除用户相关数据\n      localStorage.removeItem('remember_me')\n      localStorage.removeItem('remembered_account')\n      localStorage.removeItem('userInfo')\n      // 清除其他可能存在的数据\n      localStorage.removeItem('isLoggedIn')\n      // 清除请求头中的 token\n      delete request.defaults.headers.common['Authorization']\n    }\n  },\n  \n  // 刷新 token\n  refreshToken: (data) => {\n    return request.post('/api/v1/users/auth/token/refresh/', data)\n  },\n  \n  // 更新用户名（昵称）\n  updateUsername: (data) => {\n    return request.post('/api/v1/users/account/username/', data)\n  },\n  \n  // 发送验证码\n  sendVerifyCode: (data) => {\n    // 验证必要参数\n    if (!data.phone || !data.scene) {\n      throw new Error('手机号和场景参数不能为空')\n    }\n    \n    // 验证场景是否有效\n    const validScenes = ['register', 'login', 'reset_password', 'change_phone']\n    if (!validScenes.includes(data.scene)) {\n      throw new Error('无效的场景类型')\n    }\n    \n    return request({\n      url: '/api/v1/users/auth/sms/send/',\n      method: 'post',\n      data: {\n        phone: data.phone,\n        scene: data.scene\n      }\n    })\n  },\n  \n  // 重置密码\n  resetPassword: async (data) => {\n    return request.post('/api/v1/users/auth/password/reset/', {\n      phone: data.phone,\n      code: data.code,\n      new_password: data.new_password,\n      confirm_password: data.confirm_password\n    })\n  },\n  \n  // 注册\n  register: async (data) => {\n    return request.post('/api/v1/users/auth/register/', {\n      phone: data.phone,\n      code: data.code,\n      password: data.password,\n      confirm_password: data.confirmPassword\n    })\n  },\n  \n  handleLoginResponse(response) {\n    if (response?.data?.code === 200) {\n      const userData = response.data.data\n      // 设置请求头的 Authorization\n      const token = userData.access\n      if (token) {\n        request.defaults.headers.common['Authorization'] = `Bearer ${token}`\n      }\n      \n      return {\n        token: token,\n        refresh: userData.refresh,\n        userInfo: {\n          id: userData.id,\n          uid: userData.uid,\n          username: userData.username,\n          avatar: userData.avatar\n        }\n      }\n    }\n    console.error('Login response error:', response?.data)\n    throw new Error(response?.data?.message || '登录失败')\n  }\n}\n\nexport default auth "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
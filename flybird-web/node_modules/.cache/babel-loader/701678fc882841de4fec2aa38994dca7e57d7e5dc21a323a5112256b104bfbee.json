{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'ToolbarPanel',\n  emits: ['element-dragstart', 'template-select'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const emit = __emit;\n\n    // 模板相关\n    const templateStore = useTemplateStore();\n    const templates = ref([]);\n    const loading = ref(false);\n\n    // 获取模板列表\n    const fetchTemplates = async () => {\n      console.log('开始获取模板列表...');\n      loading.value = true;\n      try {\n        const response = await templateStore.getTemplates({\n          page: 1,\n          page_size: 50,\n          ordering: '-created_at',\n          status: 'pending,approved' // 获取待审核和已通过的模板\n        });\n        console.log('获取到的完整响应:', response);\n        console.log('响应数据中的results:', response?.data?.results);\n        if (response?.data?.results) {\n          templates.value = response.data.results;\n          console.log('设置后的模板数据:', templates.value);\n          console.log('模板ID列表:', templates.value.map(t => t.id));\n        } else {\n          console.error('获取模板列表失败: 无数据');\n          templates.value = [];\n        }\n      } catch (error) {\n        console.error('获取模板列表失败:', error);\n        templates.value = [];\n      } finally {\n        loading.value = false;\n        console.log('模板列表获取完成，当前模板数量:', templates.value.length);\n      }\n    };\n\n    // 暴露刷新方法给父组件\n    __expose({\n      refreshTemplates: fetchTemplates\n    });\n\n    // 选择模板\n    const handleTemplateSelect = template => {\n      console.log('选择模板:', template);\n      emit('template-select', template);\n    };\n\n    // 设计元素拖拽开始\n    const handleElementDragStart = (type, event) => {\n      const elementData = {\n        type,\n        config: {}\n      };\n\n      // 根据类型设置默认配置\n      switch (type) {\n        case 'rectangle':\n        case 'circle':\n        case 'triangle':\n          elementData.config = {\n            width: 100,\n            height: 100,\n            backgroundColor: '#409EFF'\n          };\n          break;\n        case 'text':\n          elementData.config = {\n            content: '点击编辑文本',\n            fontSize: '14px',\n            color: '#333333'\n          };\n          break;\n        case 'image':\n          elementData.config = {\n            width: 200,\n            height: 200\n          };\n          break;\n      }\n      event.dataTransfer.setData('element', JSON.stringify(elementData));\n      event.dataTransfer.effectAllowed = 'move';\n      emit('element-dragstart', type);\n    };\n    onMounted(() => {\n      fetchTemplates();\n    });\n\n    // 布局组件列表\n    const layoutComponents = ref([{\n      id: 'single',\n      type: 'layout',\n      name: '单栏布局',\n      icon: 'mdi-view-stream',\n      config: {\n        type: 'single',\n        columns: 1\n      }\n    }, {\n      id: 'double',\n      type: 'layout',\n      name: '双栏布局',\n      icon: 'mdi-view-sequential',\n      config: {\n        type: 'double',\n        columns: 2\n      }\n    }]);\n\n    // 处理布局组件拖拽开始\n    const handleDragStart = (event, component) => {\n      event.dataTransfer.setData('component', JSON.stringify(component));\n      event.dataTransfer.effectAllowed = 'move';\n    };\n    const __returned__ = {\n      emit,\n      templateStore,\n      templates,\n      loading,\n      fetchTemplates,\n      handleTemplateSelect,\n      handleElementDragStart,\n      layoutComponents,\n      handleDragStart,\n      ref,\n      onMounted,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useTemplateStore","emit","__emit","templateStore","templates","loading","fetchTemplates","console","log","value","response","getTemplates","page","page_size","ordering","status","data","results","map","t","id","error","length","__expose","refreshTemplates","handleTemplateSelect","template","handleElementDragStart","type","event","elementData","config","width","height","backgroundColor","content","fontSize","color","dataTransfer","setData","JSON","stringify","effectAllowed","layoutComponents","name","icon","columns","handleDragStart","component"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <v-expansion-panels>\n      <!-- 模板列表 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          <div class=\"d-flex align-center\">\n            <v-icon class=\"mr-2\">mdi-file-document-outline</v-icon>\n            模板列表\n          </div>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div v-if=\"loading\" class=\"d-flex justify-center\">\n            <v-progress-circular indeterminate></v-progress-circular>\n          </div>\n          <div v-else-if=\"templates.length === 0\" class=\"text-center pa-4\">\n            暂无模板\n          </div>\n          <div v-else class=\"template-list\">\n            <v-card\n              v-for=\"template in templates\"\n              :key=\"template.id\"\n              class=\"mb-4\"\n              variant=\"outlined\"\n            >\n              <v-img\n                :src=\"template.thumbnail\"\n                height=\"160\"\n                cover\n                class=\"bg-grey-lighten-2\"\n              >\n                <template v-slot:placeholder>\n                  <div class=\"d-flex align-center justify-center fill-height\">\n                    <v-icon icon=\"mdi-image\" size=\"48\" color=\"grey-lighten-1\"></v-icon>\n                  </div>\n                </template>\n              </v-img>\n\n              <v-card-title class=\"text-subtitle-1 font-weight-bold\">\n                {{ template.name }}\n                <v-chip\n                  v-if=\"template.is_vip\"\n                  color=\"warning\"\n                  size=\"small\"\n                  class=\"ml-2\"\n                >\n                  VIP\n                </v-chip>\n              </v-card-title>\n\n              <v-card-text class=\"text-body-2\">\n                {{ template.description }}\n              </v-card-text>\n\n              <v-card-actions>\n                <v-btn\n                  color=\"primary\"\n                  variant=\"text\"\n                  block\n                  @click=\"handleTemplateSelect(template)\"\n                >\n                  使用此模板\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <!-- 设计元素 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          <div class=\"d-flex align-center\">\n            <v-icon class=\"mr-2\">mdi-shape-outline</v-icon>\n            设计元素\n          </div>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"design-elements\">\n            <!-- 图片元素 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"(e) => handleElementDragStart('image', e)\"\n            >\n              <v-img\n                src=\"/images.jpeg\"\n                width=\"60\"\n                height=\"60\"\n                class=\"rounded\"\n              ></v-img>\n              <div class=\"element-label\">图片</div>\n            </div>\n\n            <!-- 矩形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"(e) => handleElementDragStart('rectangle', e)\"\n            >\n              <div class=\"shape-preview rectangle\"></div>\n              <div class=\"element-label\">矩形</div>\n            </div>\n\n            <!-- 三角形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"(e) => handleElementDragStart('triangle', e)\"\n            >\n              <div class=\"shape-preview triangle\"></div>\n              <div class=\"element-label\">三角形</div>\n            </div>\n\n            <!-- 圆形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"(e) => handleElementDragStart('circle', e)\"\n            >\n              <div class=\"shape-preview circle\"></div>\n              <div class=\"element-label\">圆形</div>\n            </div>\n\n            <!-- 文字 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"(e) => handleElementDragStart('text', e)\"\n            >\n              <div class=\"text-preview\">\n                <v-icon icon=\"mdi-format-text\" size=\"32\" color=\"primary\"></v-icon>\n              </div>\n              <div class=\"element-label\">文字</div>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <!-- 布局组件面板 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>布局组件</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"components-grid\">\n            <div\n              v-for=\"component in layoutComponents\"\n              :key=\"component.id\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\"\n            >\n              <v-icon :icon=\"component.icon\" size=\"24\" class=\"mb-1\"></v-icon>\n              <span class=\"component-name\">{{ component.name }}</span>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst emit = defineEmits(['element-dragstart', 'template-select'])\n\n// 模板相关\nconst templateStore = useTemplateStore()\nconst templates = ref([])\nconst loading = ref(false)\n\n// 获取模板列表\nconst fetchTemplates = async () => {\n  console.log('开始获取模板列表...')\n  loading.value = true\n  try {\n    const response = await templateStore.getTemplates({\n      page: 1,\n      page_size: 50,\n      ordering: '-created_at',\n      status: 'pending,approved'  // 获取待审核和已通过的模板\n    })\n    console.log('获取到的完整响应:', response)\n    console.log('响应数据中的results:', response?.data?.results)\n    \n    if (response?.data?.results) {\n      templates.value = response.data.results\n      console.log('设置后的模板数据:', templates.value)\n      console.log('模板ID列表:', templates.value.map(t => t.id))\n    } else {\n      console.error('获取模板列表失败: 无数据')\n      templates.value = []\n    }\n  } catch (error) {\n    console.error('获取模板列表失败:', error)\n    templates.value = []\n  } finally {\n    loading.value = false\n    console.log('模板列表获取完成，当前模板数量:', templates.value.length)\n  }\n}\n\n// 暴露刷新方法给父组件\ndefineExpose({\n  refreshTemplates: fetchTemplates\n})\n\n// 选择模板\nconst handleTemplateSelect = (template) => {\n  console.log('选择模板:', template)\n  emit('template-select', template)\n}\n\n// 设计元素拖拽开始\nconst handleElementDragStart = (type, event) => {\n  const elementData = {\n    type,\n    config: {}\n  }\n  \n  // 根据类型设置默认配置\n  switch (type) {\n    case 'rectangle':\n    case 'circle':\n    case 'triangle':\n      elementData.config = {\n        width: 100,\n        height: 100,\n        backgroundColor: '#409EFF'\n      }\n      break\n    case 'text':\n      elementData.config = {\n        content: '点击编辑文本',\n        fontSize: '14px',\n        color: '#333333'\n      }\n      break\n    case 'image':\n      elementData.config = {\n        width: 200,\n        height: 200\n      }\n      break\n  }\n\n  event.dataTransfer.setData('element', JSON.stringify(elementData))\n  event.dataTransfer.effectAllowed = 'move'\n  emit('element-dragstart', type)\n}\n\nonMounted(() => {\n  fetchTemplates()\n})\n\n// 布局组件列表\nconst layoutComponents = ref([\n  {\n    id: 'single',\n    type: 'layout',\n    name: '单栏布局',\n    icon: 'mdi-view-stream',\n    config: {\n      type: 'single',\n      columns: 1\n    }\n  },\n  {\n    id: 'double',\n    type: 'layout',\n    name: '双栏布局',\n    icon: 'mdi-view-sequential',\n    config: {\n      type: 'double',\n      columns: 2\n    }\n  }\n])\n\n// 处理布局组件拖拽开始\nconst handleDragStart = (event, component) => {\n  event.dataTransfer.setData('component', JSON.stringify(component))\n  event.dataTransfer.effectAllowed = 'move'\n}\n</script>\n\n<style scoped>\n.toolbar-panel {\n  width: 280px;\n  height: 100%;\n  border-right: 1px solid #e0e0e0;\n  background: #ffffff;\n  overflow-y: auto;\n}\n\n.template-list {\n  padding: 12px;\n}\n\n.template-list .v-card {\n  transition: all 0.3s ease;\n}\n\n.template-list .v-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.components-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  padding: 12px;\n}\n\n.component-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.component-item:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.component-name {\n  font-size: 12px;\n  color: #606266;\n  margin-top: 4px;\n  text-align: center;\n}\n\n.design-elements {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  padding: 12px;\n}\n\n.design-element {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.design-element:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.element-label {\n  font-size: 12px;\n  color: #606266;\n  text-align: center;\n}\n\n.shape-preview {\n  width: 60px;\n  height: 60px;\n  border: 2px solid #dcdfe6;\n}\n\n.shape-preview.rectangle {\n  background-color: #409EFF;\n}\n\n.shape-preview.circle {\n  background-color: #E6A23C;\n  border-radius: 50%;\n}\n\n.shape-preview.triangle {\n  background-color: #67C23A;\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n}\n\n.text-preview {\n  width: 60px;\n  height: 60px;\n  border: 2px solid #dcdfe6;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f5f7fa;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"toolbar-panel\"\n};\nconst _hoisted_2 = {\n  class: \"panel-content\"\n};\nconst _hoisted_3 = {\n  class: \"panel-section\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-indicator\"\n};\nconst _hoisted_5 = {\n  class: \"component-block\"\n};\nconst _hoisted_6 = {\n  class: \"block-content\"\n};\nconst _hoisted_7 = {\n  class: \"block-title\"\n};\nconst _hoisted_8 = {\n  class: \"panel-section\"\n};\nconst _hoisted_9 = {\n  class: \"panel-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_progress_circular = _resolveComponent(\"v-progress-circular\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 内容面板 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 布局面板 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_3, [$setup.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_v_progress_circular, {\n    indeterminate: \"\",\n    color: \"primary\"\n  })])) : (_openBlock(), _createBlock($setup[\"draggable\"], {\n    key: 1,\n    list: $setup.layoutComponents,\n    group: {\n      name: 'layouts',\n      pull: 'clone',\n      put: false\n    },\n    sort: false,\n    clone: $setup.cloneLayout,\n    \"item-key\": \"id\",\n    class: \"component-blocks\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_v_icon, {\n      size: \"18\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(element.icon), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(element.name), 1 /* TEXT */)])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"list\"]))], 512 /* NEED_PATCH */), [[_vShow, $props.modelValue === 'layout']]), _createCommentVNode(\" 组件面板 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_8, \" 组件列表 \", 512 /* NEED_PATCH */), [[_vShow, $props.modelValue === 'components']]), _createCommentVNode(\" 档案面板 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_9, \" 档案列表 \", 512 /* NEED_PATCH */), [[_vShow, $props.modelValue === 'files']])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","$setup","isLoading","_hoisted_4","_createVNode","_component_v_progress_circular","indeterminate","color","_createBlock","list","layoutComponents","group","name","pull","put","sort","clone","cloneLayout","item","_withCtx","element","_hoisted_5","_component_v_icon","size","default","_createTextVNode","_toDisplayString","icon","_","_hoisted_6","_hoisted_7","$props","modelValue","_hoisted_8","_hoisted_9"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <!-- 内容面板 -->\n    <div class=\"panel-content\">\n      <!-- 布局面板 -->\n      <div v-show=\"modelValue === 'layout'\" class=\"panel-section\">\n        <div v-if=\"isLoading\" class=\"loading-indicator\">\n          <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n        </div>\n        <draggable \n          v-else\n          :list=\"layoutComponents\"\n          :group=\"{ name: 'layouts', pull: 'clone', put: false }\"\n          :sort=\"false\"\n          :clone=\"cloneLayout\"\n          item-key=\"id\"\n          class=\"component-blocks\">\n          <template #item=\"{ element }\">\n            <div class=\"component-block\">\n              <v-icon size=\"18\">{{ element.icon }}</v-icon>\n              <div class=\"block-content\">\n                <div class=\"block-title\">{{ element.name }}</div>\n              </div>\n            </div>\n          </template>\n        </draggable>\n      </div>\n\n      <!-- 组件面板 -->\n      <div v-show=\"modelValue === 'components'\" class=\"panel-section\">\n        组件列表\n      </div>\n\n      <!-- 档案面板 -->\n      <div v-show=\"modelValue === 'files'\" class=\"panel-section\">\n        档案列表\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport draggable from 'vuedraggable'\nimport axios from 'axios'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\n// 布局组件列表\nconst layoutComponents = ref([])\nconst isLoading = ref(false)\n\n// 克隆布局组件\nconst cloneLayout = (layout) => {\n  return {\n    ...layout,\n    id: `${layout.id}_${Date.now()}`  // 确保克隆的组件有唯一ID\n  }\n}\n\n// 获取布局组件\nconst fetchLayoutComponents = async () => {\n  isLoading.value = true\n  try {\n    // 先获取布局分类\n    const categoryResponse = await axios.get('/api/v1/resume/component-categories/main_categories/')\n    const layoutCategory = categoryResponse.data.find(category => category.code === 'layout')\n    \n    if (layoutCategory) {\n      // 获取布局分类下的组件\n      const componentsResponse = await axios.get(`/api/v1/resume/component-categories/${layoutCategory.id}/components/`)\n      layoutComponents.value = componentsResponse.data.map(component => ({\n        ...component,\n        config: {\n          layout: component.type,\n          columns: component.type === 'single' ? 1 : 2,\n          columnWidth: component.type === 'single' ? ['100%'] : ['50%', '50%']\n        }\n      }))\n    }\n  } catch (error) {\n    console.error('获取布局组件失败:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 监听 modelValue 变化，当切换到布局面板时加载数据\nwatch(() => props.modelValue, (newValue) => {\n  if (newValue === 'layout' && layoutComponents.value.length === 0) {\n    fetchLayoutComponents()\n  }\n})\n\nonMounted(() => {\n  if (props.modelValue === 'layout') {\n    fetchLayoutComponents()\n  }\n})\n</script>\n\n<style scoped>\n.toolbar-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 4px;\n}\n\n.panel-content {\n  flex: 1;\n  min-height: 0;\n  overflow-y: auto;\n  padding: 8px;\n}\n\n.panel-section {\n  height: 100%;\n}\n\n.loading-indicator {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n}\n\n.component-blocks {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 6px;\n  padding: 0 6px;\n}\n\n.component-block {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background-color: #f5f7fa;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  cursor: move;\n  user-select: none;\n}\n\n.component-block:hover {\n  background-color: #ecf5ff;\n  border-color: #409eff;\n}\n\n.block-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.block-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep(.v-icon) {\n  color: #409eff;\n  font-size: 20px !important;\n}\n\n.sortable-ghost {\n  opacity: 0.5;\n  background: #ecf5ff;\n  border: 2px dashed #409eff;\n}\n\n.sortable-chosen {\n  background: #ecf5ff;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAe;;EAEcA,KAAK,EAAC;AAAe;;EALjEC,GAAA;EAM8BD,KAAK,EAAC;;;EAYnBA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAa;;EAQQA,KAAK,EAAC;AAAe;;EAK1BA,KAAK,EAAC;AAAe;;;;uBAjC9DE,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,UAAa,EACbC,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJF,mBAAA,UAAa,E,gBACbC,mBAAA,CAqBM,OArBNE,UAqBM,GApBOC,MAAA,CAAAC,SAAS,I,cAApBP,mBAAA,CAEM,OAFNQ,UAEM,GADJC,YAAA,CAAyEC,8BAAA;IAApDC,aAAa,EAAb,EAAa;IAACC,KAAK,EAAC;yBAE3CC,YAAA,CAgBYP,MAAA;IAzBpBP,GAAA;IAWWe,IAAI,EAAER,MAAA,CAAAS,gBAAgB;IACtBC,KAAK,EAAE;MAAAC,IAAA;MAAAC,IAAA;MAAAC,GAAA;IAAA,CAA8C;IACrDC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAEf,MAAA,CAAAgB,WAAW;IACnB,UAAQ,EAAC,IAAI;IACbxB,KAAK,EAAC;;IACKyB,IAAI,EAAAC,QAAA,CACb,CAKM;MANWC;IAAO,OACxBtB,mBAAA,CAKM,OALNuB,UAKM,GAJJjB,YAAA,CAA6CkB,iBAAA;MAArCC,IAAI,EAAC;IAAI;MAnB/BC,OAAA,EAAAL,QAAA,CAmBgC,MAAkB,CAnBlDM,gBAAA,CAAAC,gBAAA,CAmBmCN,OAAO,CAACO,IAAI,iB;MAnB/CC,CAAA;kCAoBc9B,mBAAA,CAEM,OAFN+B,UAEM,GADJ/B,mBAAA,CAAiD,OAAjDgC,UAAiD,EAAAJ,gBAAA,CAArBN,OAAO,CAACR,IAAI,iB;IArBxDgB,CAAA;kEAKmBG,MAAA,CAAAC,UAAU,e,GAuBvBnC,mBAAA,UAAa,E,gBACbC,mBAAA,CAEM,OAFNmC,UAEM,EAF0D,QAEhE,0B,SAFaF,MAAA,CAAAC,UAAU,mB,GAIvBnC,mBAAA,UAAa,E,gBACbC,mBAAA,CAEM,OAFNoC,UAEM,EAFqD,QAE3D,0B,SAFaH,MAAA,CAAAC,UAAU,c","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
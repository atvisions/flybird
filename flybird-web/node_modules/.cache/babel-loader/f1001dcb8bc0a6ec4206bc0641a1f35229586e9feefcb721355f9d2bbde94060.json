{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gray-50 pb-16 md:pb-0\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"HeadView\"]), _createCommentVNode(\" 内容区域 \"), _createVNode(_component_router_view), _createVNode($setup[\"FooterView\"], {\n    class: \"hidden md:block\"\n  }), _createVNode($setup[\"MobileTabBar\"], {\n    \"menu-groups\": $setup.menuGroups,\n    \"unread-messages\": $setup.unreadMessagesCount\n  }, null, 8 /* PROPS */, [\"unread-messages\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","$setup","_createCommentVNode","_component_router_view","menuGroups","unreadMessagesCount"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/portfolio/PortfolioView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50 pb-16 md:pb-0\">\n    <HeadView />\n\n    <!-- 内容区域 -->\n    <router-view></router-view>\n\n    <FooterView class=\"hidden md:block\" />\n    <MobileTabBar \n      :menu-groups=\"menuGroups\"\n      :unread-messages=\"unreadMessagesCount\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport HeadView from '@/components/HeadView.vue'\nimport FooterView from '@/components/FooterView.vue'\nimport MobileTabBar from '@/components/MobileTabBar.vue'\nimport {\n  PaintBrushIcon,\n  CommandLineIcon,\n  DocumentTextIcon,\n  HomeIcon,\n  UserIcon,\n  PlusIcon,\n  QuestionMarkCircleIcon,\n  ScaleIcon,\n  VideoCameraIcon,\n  CameraIcon,\n  FilmIcon\n} from '@heroicons/vue/24/outline'\n\nconst route = useRoute()\n\nconst mainTabs = [\n  { \n    name: '发现', \n    path: '/portfolio', \n    icon: HomeIcon \n  },\n  { \n    name: '设计作品', \n    path: '/portfolio/design', \n    icon: PaintBrushIcon \n  },\n  { \n    name: '开发项目', \n    path: '/portfolio/development', \n    icon: CommandLineIcon \n  },\n  { \n    name: '文案策划', \n    path: '/portfolio/writing', \n    icon: DocumentTextIcon \n  }\n]\n\nconst myTab = {\n  name: '我的作品',\n  path: '/portfolio/my',\n  icon: UserIcon\n}\n\nconst isCurrentRoute = (path) => {\n  return route.path === path\n}\n\n// 未读消息数量（可以从 store 或 API 获取）\nconst unreadMessagesCount = ref(0)\n\n// 更多菜单中的选项分组\nconst menuGroups = [\n  {\n    title: '社区',\n    items: [\n      { \n        name: '文章', \n        path: '/community/articles', \n        icon: DocumentTextIcon \n      },\n      { \n        name: '问答', \n        path: '/community/questions', \n        icon: QuestionMarkCircleIcon \n      },\n      { \n        name: '话题', \n        path: '/community/topics', \n        icon: ScaleIcon \n      }\n    ]\n  },\n  {\n    title: '创作集',\n    items: [\n      {\n        name: '设计',\n        path: '/portfolio/design',\n        icon: PaintBrushIcon\n      },\n      {\n        name: '视频',\n        path: '/portfolio/video',\n        icon: VideoCameraIcon\n      },\n      {\n        name: '摄影',\n        path: '/portfolio/photography',\n        icon: CameraIcon\n      },\n      {\n        name: '动画',\n        path: '/portfolio/animation',\n        icon: FilmIcon\n      }\n    ]\n  }\n]\n</script>\n\n<style scoped>\n.safe-area-inset-bottom {\n  padding-bottom: env(safe-area-inset-bottom);\n}\n\n@supports (padding-bottom: env(safe-area-inset-bottom)) {\n  .pb-16 {\n    padding-bottom: calc(4rem + env(safe-area-inset-bottom));\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAuC;;;uBAAlDC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,YAAA,CAAYC,MAAA,eAEZC,mBAAA,UAAa,EACbF,YAAA,CAA2BG,sBAAA,GAE3BH,YAAA,CAAsCC,MAAA;IAA1BJ,KAAK,EAAC;EAAiB,IACnCG,YAAA,CAGEC,MAAA;IAFC,aAAW,EAAEA,MAAA,CAAAG,UAAU;IACvB,iBAAe,EAAEH,MAAA,CAAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
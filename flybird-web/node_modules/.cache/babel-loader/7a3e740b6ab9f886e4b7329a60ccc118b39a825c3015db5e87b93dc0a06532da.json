{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'ToolbarPanel',\n  emits: ['element-dragstart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const emit = __emit;\n\n    // 模板相关\n    const templateStore = useTemplateStore();\n    const templates = ref([]);\n    const loading = ref(false);\n\n    // 获取模板列表\n    const fetchTemplates = async () => {\n      loading.value = true;\n      try {\n        const response = await templateStore.getTemplates();\n        console.log('获取到的模板数据:', response);\n        // 从response.data.results中获取模板列表\n        if (response?.data?.results) {\n          templates.value = response.data.results;\n          console.log('设置的模板数据:', templates.value);\n        } else {\n          console.error('获取模板列表失败: 无数据');\n          templates.value = [];\n        }\n      } catch (error) {\n        console.error('获取模板列表失败:', error);\n        templates.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 暴露刷新方法给父组件\n    __expose({\n      refreshTemplates: fetchTemplates\n    });\n\n    // 选择模板\n    const handleTemplateSelect = template => {\n      // TODO: 实现模板选择逻辑\n      console.log('选择模板:', template);\n    };\n\n    // 设计元素拖拽开始\n    const handleElementDragStart = type => {\n      emit('element-dragstart', type);\n    };\n    onMounted(() => {\n      fetchTemplates();\n    });\n\n    // 布局组件列表\n    const layoutComponents = ref([{\n      id: 'single',\n      type: 'layout',\n      name: '单栏布局',\n      icon: 'mdi-view-stream',\n      config: {\n        type: 'single',\n        columns: 1\n      }\n    }, {\n      id: 'double',\n      type: 'layout',\n      name: '双栏布局',\n      icon: 'mdi-view-sequential',\n      config: {\n        type: 'double',\n        columns: 2\n      }\n    }]);\n\n    // 处理布局组件拖拽开始\n    const handleDragStart = (event, component) => {\n      event.dataTransfer.setData('component', JSON.stringify(component));\n      event.dataTransfer.effectAllowed = 'move';\n    };\n    const __returned__ = {\n      emit,\n      templateStore,\n      templates,\n      loading,\n      fetchTemplates,\n      handleTemplateSelect,\n      handleElementDragStart,\n      layoutComponents,\n      handleDragStart,\n      ref,\n      onMounted,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useTemplateStore","emit","__emit","templateStore","templates","loading","fetchTemplates","value","response","getTemplates","console","log","data","results","error","__expose","refreshTemplates","handleTemplateSelect","template","handleElementDragStart","type","layoutComponents","id","name","icon","config","columns","handleDragStart","event","component","dataTransfer","setData","JSON","stringify","effectAllowed"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <v-expansion-panels>\n      <!-- 模板列表 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          <div class=\"d-flex align-center\">\n            <v-icon class=\"mr-2\">mdi-file-document-outline</v-icon>\n            模板列表\n          </div>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div v-if=\"loading\" class=\"d-flex justify-center\">\n            <v-progress-circular indeterminate></v-progress-circular>\n          </div>\n          <div v-else-if=\"templates.length === 0\" class=\"text-center pa-4\">\n            暂无模板\n          </div>\n          <v-list v-else density=\"compact\">\n            <v-list-item\n              v-for=\"template in templates\"\n              :key=\"template.id\"\n              :title=\"template.name\"\n              @click=\"handleTemplateSelect(template)\"\n            >\n              <template v-slot:prepend>\n                <v-icon>mdi-file-outline</v-icon>\n              </template>\n            </v-list-item>\n          </v-list>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <!-- 设计元素 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>\n          <div class=\"d-flex align-center\">\n            <v-icon class=\"mr-2\">mdi-shape-outline</v-icon>\n            设计元素\n          </div>\n        </v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"design-elements\">\n            <!-- 图片元素 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart('image')\"\n            >\n              <v-img\n                src=\"/images.jpeg\"\n                width=\"60\"\n                height=\"60\"\n                class=\"rounded\"\n              ></v-img>\n              <div class=\"element-label\">图片</div>\n            </div>\n\n            <!-- 矩形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart('rectangle')\"\n            >\n              <div class=\"shape-preview rectangle\"></div>\n              <div class=\"element-label\">矩形</div>\n            </div>\n\n            <!-- 三角形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart('triangle')\"\n            >\n              <div class=\"shape-preview triangle\"></div>\n              <div class=\"element-label\">三角形</div>\n            </div>\n\n            <!-- 圆形 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart('circle')\"\n            >\n              <div class=\"shape-preview circle\"></div>\n              <div class=\"element-label\">圆形</div>\n            </div>\n\n            <!-- 文字 -->\n            <div \n              class=\"design-element\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart('text')\"\n            >\n              <div class=\"text-preview\">\n                <v-icon icon=\"mdi-format-text\" size=\"32\" color=\"primary\"></v-icon>\n              </div>\n              <div class=\"element-label\">文字</div>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <!-- 布局组件面板 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>布局组件</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"components-grid\">\n            <div\n              v-for=\"component in layoutComponents\"\n              :key=\"component.id\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\"\n            >\n              <v-icon :icon=\"component.icon\" size=\"24\" class=\"mb-1\"></v-icon>\n              <span class=\"component-name\">{{ component.name }}</span>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst emit = defineEmits(['element-dragstart'])\n\n// 模板相关\nconst templateStore = useTemplateStore()\nconst templates = ref([])\nconst loading = ref(false)\n\n// 获取模板列表\nconst fetchTemplates = async () => {\n  loading.value = true\n  try {\n    const response = await templateStore.getTemplates()\n    console.log('获取到的模板数据:', response)\n    // 从response.data.results中获取模板列表\n    if (response?.data?.results) {\n      templates.value = response.data.results\n      console.log('设置的模板数据:', templates.value)\n    } else {\n      console.error('获取模板列表失败: 无数据')\n      templates.value = []\n    }\n  } catch (error) {\n    console.error('获取模板列表失败:', error)\n    templates.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 暴露刷新方法给父组件\ndefineExpose({\n  refreshTemplates: fetchTemplates\n})\n\n// 选择模板\nconst handleTemplateSelect = (template) => {\n  // TODO: 实现模板选择逻辑\n  console.log('选择模板:', template)\n}\n\n// 设计元素拖拽开始\nconst handleElementDragStart = (type) => {\n  emit('element-dragstart', type)\n}\n\nonMounted(() => {\n  fetchTemplates()\n})\n\n// 布局组件列表\nconst layoutComponents = ref([\n  {\n    id: 'single',\n    type: 'layout',\n    name: '单栏布局',\n    icon: 'mdi-view-stream',\n    config: {\n      type: 'single',\n      columns: 1\n    }\n  },\n  {\n    id: 'double',\n    type: 'layout',\n    name: '双栏布局',\n    icon: 'mdi-view-sequential',\n    config: {\n      type: 'double',\n      columns: 2\n    }\n  }\n])\n\n// 处理布局组件拖拽开始\nconst handleDragStart = (event, component) => {\n  event.dataTransfer.setData('component', JSON.stringify(component))\n  event.dataTransfer.effectAllowed = 'move'\n}\n</script>\n\n<style scoped>\n.toolbar-panel {\n  width: 280px;\n  height: 100%;\n  border-right: 1px solid #e0e0e0;\n  background: #ffffff;\n  overflow-y: auto;\n}\n\n.components-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  padding: 12px;\n}\n\n.component-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.component-item:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.component-name {\n  font-size: 12px;\n  color: #606266;\n  margin-top: 4px;\n  text-align: center;\n}\n\n.design-elements {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  padding: 12px;\n}\n\n.design-element {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.design-element:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.element-label {\n  font-size: 12px;\n  color: #606266;\n  text-align: center;\n}\n\n.shape-preview {\n  width: 60px;\n  height: 60px;\n  border: 2px solid #dcdfe6;\n}\n\n.shape-preview.rectangle {\n  background-color: #409EFF;\n}\n\n.shape-preview.circle {\n  background-color: #E6A23C;\n  border-radius: 50%;\n}\n\n.shape-preview.triangle {\n  background-color: #67C23A;\n  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);\n}\n\n.text-preview {\n  width: 60px;\n  height: 60px;\n  border: 2px solid #dcdfe6;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #f5f7fa;\n}\n</style> "],"mappings":"AA8HA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,gBAAgB,QAAQ,mBAAkB;;;;;;;;IAEnD,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,aAAa,GAAGH,gBAAgB,CAAC;IACvC,MAAMI,SAAS,GAAGN,GAAG,CAAC,EAAE;IACxB,MAAMO,OAAO,GAAGP,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCD,OAAO,CAACE,KAAK,GAAG,IAAG;MACnB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,YAAY,CAAC;QAClDC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ;QACjC;QACA,IAAIA,QAAQ,EAAEI,IAAI,EAAEC,OAAO,EAAE;UAC3BT,SAAS,CAACG,KAAK,GAAGC,QAAQ,CAACI,IAAI,CAACC,OAAM;UACtCH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,SAAS,CAACG,KAAK;QACzC,CAAC,MAAM;UACLG,OAAO,CAACI,KAAK,CAAC,eAAe;UAC7BV,SAAS,CAACG,KAAK,GAAG,EAAC;QACrB;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChCV,SAAS,CAACG,KAAK,GAAG,EAAC;MACrB,CAAC,SAAS;QACRF,OAAO,CAACE,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACAQ,QAAY,CAAC;MACXC,gBAAgB,EAAEV;IACpB,CAAC;;IAED;IACA,MAAMW,oBAAoB,GAAIC,QAAQ,IAAK;MACzC;MACAR,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEO,QAAQ;IAC/B;;IAEA;IACA,MAAMC,sBAAsB,GAAIC,IAAI,IAAK;MACvCnB,IAAI,CAAC,mBAAmB,EAAEmB,IAAI;IAChC;IAEArB,SAAS,CAAC,MAAM;MACdO,cAAc,CAAC;IACjB,CAAC;;IAED;IACA,MAAMe,gBAAgB,GAAGvB,GAAG,CAAC,CAC3B;MACEwB,EAAE,EAAE,QAAQ;MACZF,IAAI,EAAE,QAAQ;MACdG,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,iBAAiB;MACvBC,MAAM,EAAE;QACNL,IAAI,EAAE,QAAQ;QACdM,OAAO,EAAE;MACX;IACF,CAAC,EACD;MACEJ,EAAE,EAAE,QAAQ;MACZF,IAAI,EAAE,QAAQ;MACdG,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,qBAAqB;MAC3BC,MAAM,EAAE;QACNL,IAAI,EAAE,QAAQ;QACdM,OAAO,EAAE;MACX;IACF,EACD;;IAED;IACA,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;MAC5CD,KAAK,CAACE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC;MACjED,KAAK,CAACE,YAAY,CAACI,aAAa,GAAG,MAAK;IAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
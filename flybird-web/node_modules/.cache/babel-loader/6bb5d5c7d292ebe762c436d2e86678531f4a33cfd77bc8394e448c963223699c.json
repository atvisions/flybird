{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { CameraIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nexport default {\n  __name: 'AvatarUploadDialog',\n  props: {\n    modelValue: Boolean,\n    loading: Boolean\n  },\n  emits: ['update:modelValue', 'upload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const fileInput = ref(null);\n    const selectedFile = ref(null);\n    const previewUrl = ref(null);\n\n    // 创建预览URL\n    const createPreview = file => {\n      if (previewUrl.value) {\n        URL.revokeObjectURL(previewUrl.value);\n      }\n      if (file) {\n        previewUrl.value = URL.createObjectURL(file);\n      }\n    };\n    const triggerFileInput = () => {\n      fileInput.value?.click();\n    };\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file && file.type.startsWith('image/')) {\n        selectedFile.value = file;\n        createPreview(file);\n      } else {\n        console.error('无效的文件类型:', file?.type);\n      }\n    };\n    const handleDrop = event => {\n      const file = event.dataTransfer.files[0];\n      if (file && file.type.startsWith('image/')) {\n        selectedFile.value = file;\n        createPreview(file);\n      }\n    };\n    const resetFile = () => {\n      selectedFile.value = null;\n      if (previewUrl.value) {\n        URL.revokeObjectURL(previewUrl.value);\n        previewUrl.value = null;\n      }\n      if (fileInput.value) {\n        fileInput.value.value = '';\n      }\n    };\n    const handleUpload = () => {\n      if (selectedFile.value) {\n        console.log('准备上传文件:', selectedFile.value);\n        console.log('文件类型:', selectedFile.value.type);\n        console.log('文件名:', selectedFile.value.name);\n        emit('upload', selectedFile.value);\n      }\n    };\n    const close = () => {\n      selectedFile.value = null;\n      if (previewUrl.value) {\n        URL.revokeObjectURL(previewUrl.value);\n        previewUrl.value = null;\n      }\n      emit('update:modelValue', false);\n    };\n\n    // 组件卸载时清理预览URL\n    watch(() => props.modelValue, newVal => {\n      if (!newVal && previewUrl.value) {\n        URL.revokeObjectURL(previewUrl.value);\n        previewUrl.value = null;\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      fileInput,\n      selectedFile,\n      previewUrl,\n      createPreview,\n      triggerFileInput,\n      handleFileChange,\n      handleDrop,\n      resetFile,\n      handleUpload,\n      close,\n      ref,\n      watch,\n      get CameraIcon() {\n        return CameraIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","CameraIcon","XMarkIcon","props","__props","emit","__emit","fileInput","selectedFile","previewUrl","createPreview","file","value","URL","revokeObjectURL","createObjectURL","triggerFileInput","click","handleFileChange","event","target","files","type","startsWith","console","error","handleDrop","dataTransfer","resetFile","handleUpload","log","name","close","modelValue","newVal"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/dialogs/AvatarUploadDialog.vue"],"sourcesContent":["<template>\n  <div v-if=\"modelValue\" class=\"modal-overlay\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h3>上传头像</h3>\n        <button class=\"close-btn\" @click=\"close\">\n          <XMarkIcon class=\"w-5 h-5\" />\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- 文件选择区域 -->\n        <div class=\"upload-area\">\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            class=\"hidden\"\n            @change=\"handleFileChange\"\n          />\n          <div\n            class=\"drop-zone\"\n            @click=\"triggerFileInput\"\n            @drop.prevent=\"handleDrop\"\n            @dragover.prevent\n          >\n            <!-- 预览区域 -->\n            <div v-if=\"previewUrl\" class=\"preview-container\">\n              <img \n                :src=\"previewUrl\" \n                class=\"preview-image\" \n                alt=\"预览图\"\n              />\n              <!-- 重新选择按钮 -->\n              <button \n                @click.stop=\"resetFile\" \n                class=\"reset-button\"\n              >\n                重新选择\n              </button>\n            </div>\n            <!-- 默认上传区域 -->\n            <div v-else class=\"text-center\">\n              <CameraIcon class=\"w-8 h-8 mx-auto text-gray-400\" />\n              <p class=\"mt-2 text-sm text-gray-500\">点击或拖拽图片到此处上传</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button \n          class=\"btn btn-default\" \n          @click=\"close\"\n          :disabled=\"loading\"\n        >\n          取消\n        </button>\n        <button \n          class=\"btn btn-primary\" \n          @click=\"handleUpload\"\n          :disabled=\"!selectedFile || loading\"\n        >\n          {{ loading ? '上传中...' : '确认' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { CameraIcon, XMarkIcon } from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  modelValue: Boolean,\n  loading: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst fileInput = ref(null)\nconst selectedFile = ref(null)\nconst previewUrl = ref(null)\n\n// 创建预览URL\nconst createPreview = (file) => {\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n  }\n  if (file) {\n    previewUrl.value = URL.createObjectURL(file)\n  }\n}\n\nconst triggerFileInput = () => {\n  fileInput.value?.click()\n}\n\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (file && file.type.startsWith('image/')) {\n    selectedFile.value = file\n    createPreview(file)\n  } else {\n    console.error('无效的文件类型:', file?.type)\n  }\n}\n\nconst handleDrop = (event) => {\n  const file = event.dataTransfer.files[0]\n  if (file && file.type.startsWith('image/')) {\n    selectedFile.value = file\n    createPreview(file)\n  }\n}\n\nconst resetFile = () => {\n  selectedFile.value = null\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n    previewUrl.value = null\n  }\n  if (fileInput.value) {\n    fileInput.value.value = ''\n  }\n}\n\nconst handleUpload = () => {\n  if (selectedFile.value) {\n    console.log('准备上传文件:', selectedFile.value)\n    console.log('文件类型:', selectedFile.value.type)\n    console.log('文件名:', selectedFile.value.name)\n    emit('upload', selectedFile.value)\n  }\n}\n\nconst close = () => {\n  selectedFile.value = null\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n    previewUrl.value = null\n  }\n  emit('update:modelValue', false)\n}\n\n// 组件卸载时清理预览URL\nwatch(() => props.modelValue, (newVal) => {\n  if (!newVal && previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n    previewUrl.value = null\n  }\n})\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 50;\n}\n\n.modal-content {\n  position: relative;\n  width: 91.666667%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-bottom: 1px solid #e5e7eb;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #111827;\n  font-size: 1.125rem;\n  font-weight: 500;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-top: 1px solid #e5e7eb;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.375rem;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-default {\n  color: #374151;\n  background-color: white;\n  border: 1px solid #d1d5db;\n}\n\n.btn-default:not(:disabled):hover {\n  background-color: #f9fafb;\n}\n\n.btn-primary {\n  color: white;\n  background-color: #6366f1;\n  border: 1px solid transparent;\n}\n\n.btn-primary:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.close-btn {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.25rem;\n  color: #6b7280;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.15s ease-in-out;\n}\n\n.close-btn:hover {\n  color: #374151;\n}\n\n.drop-zone {\n  border: 2px dashed #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 2rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.drop-zone:hover {\n  border-color: #6366f1;\n  background-color: #f9fafb;\n}\n\n.preview-container {\n  position: relative;\n  width: 100%;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.preview-image {\n  max-width: 100%;\n  max-height: 200px;\n  object-fit: contain;\n  border-radius: 0.5rem;\n}\n\n.reset-button {\n  position: absolute;\n  bottom: 0.5rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  transition: background-color 0.2s;\n}\n\n.reset-button:hover {\n  background-color: rgba(0, 0, 0, 0.7);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
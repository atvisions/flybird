{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { showToast } from '@/components/ToastMessage';\nimport { useDeleteAccount } from '@/composables/useDeleteAccount';\nimport { usePhone } from '@/composables/usePhone';\nimport { useEmail } from '@/composables/useEmail';\nimport { useChangePassword } from '@/composables/useChangePassword';\nimport { ElMessageBox } from 'element-plus';\nimport { account } from '@/api/account';\nimport { useAuthStore } from '@/stores/auth';\nimport { useUserStore } from '@/stores/user';\nexport default {\n  __name: 'AccountSettings',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const userStore = useUserStore();\n\n    // 基础信息\n    const phone = computed(() => userStore.userInfo?.phone || '');\n    const email = computed(() => userStore.userInfo?.email || '');\n\n    // 使用 composables\n    const phoneManager = usePhone();\n    const emailManager = useEmail();\n    const {\n      deleteLoading: loading,\n      handleDeleteAccount\n    } = useDeleteAccount();\n    const {\n      state: passwordState,\n      validatePassword,\n      updatePasswordStrength,\n      strengthText,\n      strengthTextClass,\n      strengthColorClass\n    } = useChangePassword();\n\n    // 工具方法\n    const maskPhone = phone => {\n      if (!phone) return '未绑定';\n      return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2');\n    };\n\n    // 弹窗状态\n    const showPhoneModal = ref(false);\n    const showPasswordModal = ref(false);\n    const showDeleteConfirm = ref(false);\n\n    // 打开弹窗的方法\n    const openPhoneModal = () => {\n      phoneManager.state.value = '';\n      phoneManager.state.code = '';\n      showPhoneModal.value = true;\n    };\n    const openPasswordModal = () => {\n      showPasswordModal.value = true;\n    };\n    const openDeleteConfirm = async () => {\n      showDeleteConfirm.value = true;\n    };\n\n    // 关闭弹窗的方法\n    const closePhoneModal = () => {\n      showPhoneModal.value = false;\n      phoneManager.state.value = '';\n      phoneManager.state.code = '';\n    };\n    const closePasswordModal = () => {\n      showPasswordModal.value = false;\n    };\n    const closeDeleteConfirm = () => {\n      showDeleteConfirm.value = false;\n      deleteForm.value.password = '';\n    };\n\n    // 处理成功回调\n    const handlePasswordSuccess = () => {\n      closePasswordModal();\n      showToast('密码修改成功', 'success');\n    };\n\n    // 添加密码验证相关的状态和方法\n    const confirmPasswordError = ref('');\n    const validateNewPassword = () => {\n      // 使用 composable 中的验证方法\n      password.state.error = password.validatePassword(password.state.newPassword);\n      // 如果新密码变化，也要检查确认密码\n      if (password.state.confirmPassword) {\n        validateConfirmPassword();\n      }\n    };\n    const validateConfirmPassword = () => {\n      if (!password.state.confirmPassword) {\n        confirmPasswordError.value = '';\n      } else if (password.state.confirmPassword !== password.state.newPassword) {\n        confirmPasswordError.value = '两次输入的密码不一致';\n      } else {\n        confirmPasswordError.value = '';\n      }\n    };\n\n    // 处理密码更新\n    const handlePasswordUpdate = async () => {\n      // 先验证一次\n      validateNewPassword();\n      validateConfirmPassword();\n\n      // 如果有错误就不提交\n      if (password.state.error || confirmPasswordError.value) {\n        return;\n      }\n      try {\n        userInfoLoading.value = true;\n        const response = await account.updatePassword({\n          old_password: password.state.oldPassword,\n          new_password: password.state.newPassword,\n          confirm_password: password.state.confirmPassword\n        });\n        if (response?.data?.code === 200) {\n          closePasswordModal();\n          showToast('密码修改成功', 'success');\n          // 清空表单\n          password.state.oldPassword = '';\n          password.state.newPassword = '';\n          password.state.confirmPassword = '';\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error);\n        showToast(error?.response?.data?.message || '密码修改失败', 'error');\n      } finally {\n        userInfoLoading.value = false;\n      }\n    };\n\n    // 处理手机号更新\n    const handlePhoneUpdate = async () => {\n      if (!phoneManager.state.value || !phoneManager.state.code) {\n        showToast('请填写完整信息', 'warning');\n        return;\n      }\n\n      // 验证手机号格式\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phoneRegex.test(phoneManager.state.value)) {\n        showToast('请输入正确的手机号格式', 'warning');\n        return;\n      }\n      try {\n        const response = await account.changePhone({\n          phone: phoneManager.state.value,\n          code: phoneManager.state.code\n        });\n        if (response?.data?.code === 200 || response?.data?.detail) {\n          closePhoneModal();\n          await userStore.getUserInfo();\n          showToast(response.data.detail || '手机号更新成功', 'success');\n          return;\n        }\n        throw new Error(response?.data?.detail || '手机号更新失败');\n      } catch (error) {\n        console.error('手机号更新失败:', error);\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '手机号更新失败';\n        showToast(errorMsg, 'error');\n      }\n    };\n\n    // 处理手机号验证码发送\n    const handlePhoneSendCode = async () => {\n      if (!phoneManager.state.value) {\n        showToast('请输入新手机号', 'warning');\n        return;\n      }\n\n      // 验证手机号格式\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phoneRegex.test(phoneManager.state.value)) {\n        showToast('请输入正确的手机号格式', 'warning');\n        return;\n      }\n      try {\n        phoneManager.state.loading = true;\n        const response = await account.sendVerifyCode({\n          phone: phoneManager.state.value,\n          scene: 'change_phone',\n          type: 'sms'\n        });\n        if (response?.data?.code === 200) {\n          startPhoneCountdown();\n          showToast(response.data.message || '验证码已发送', 'success');\n        } else {\n          throw new Error(response?.data?.message || '发送验证码失败');\n        }\n      } catch (error) {\n        console.error('发送验证码失败:', error);\n        const errorMsg = error.response?.data?.message || error.response?.data?.detail || error.message || '发送验证码失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        phoneManager.state.loading = false;\n      }\n    };\n\n    // 邮箱相关\n    const showEmailModal = ref(false);\n    const openEmailModal = () => {\n      emailManager.state.value = '';\n      emailManager.state.code = '';\n      showEmailModal.value = true;\n    };\n    const closeEmailModal = () => {\n      showEmailModal.value = false;\n      emailManager.state.value = '';\n      emailManager.state.code = '';\n      emailManager.state.password = '';\n    };\n    const handleEmailUpdate = async () => {\n      try {\n        const data = {\n          email: emailManager.state.value,\n          code: emailManager.state.code,\n          password: emailManager.state.password\n        };\n        const response = await account.changeEmail(data);\n\n        // 检查响应状态\n        if (response?.data?.code === 200 || response?.data?.message?.includes('成功')) {\n          closeEmailModal();\n          // 更新用户信息\n          await userStore.getUserInfo();\n          showToast(response.data.message || '邮箱更新成功', 'success');\n          return; // 成功后直接返回，不抛出错误\n        }\n\n        // 如果没有成功状态码也没有成功消息，才抛出错误\n        throw new Error(response?.data?.message || '邮箱更新失败');\n      } catch (error) {\n        console.error('邮箱更新失败:', error);\n        // 如果错误消息包含\"成功\"，说明实际上是成功的\n        if (error.message?.includes('成功')) {\n          closeEmailModal();\n          await userStore.getUserInfo();\n          showToast(error.message, 'success');\n          return;\n        }\n\n        // 真正的错误处理\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '邮箱操作失败';\n        showToast(errorMsg, 'error');\n      }\n    };\n\n    // 添加计算属性控制邮箱表单按钮状态\n    const isEmailFormValid = computed(() => {\n      // 检查邮箱格式\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const isValidEmail = emailRegex.test(emailManager.state.value);\n\n      // 检查所有必填字段\n      return emailManager.state.value && emailManager.state.code && emailManager.state.password &&\n      // 密码必填\n      isValidEmail && !emailManager.state.loading;\n    });\n\n    // 添加防重复点击状态\n    const isRequestingCode = ref(false);\n\n    // 处理邮箱更新的验证码发送\n    const handleEmailSendCode = async () => {\n      if (!emailManager.state.value) {\n        showToast('请输入新邮箱', 'warning');\n        return;\n      }\n      if (!phone.value) {\n        showToast('当前账号未绑定手机号，无法进行邮箱验证', 'warning');\n        return;\n      }\n\n      // 验证邮箱格式\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(emailManager.state.value)) {\n        showToast('请输入正确的邮箱格式', 'warning');\n        return;\n      }\n      try {\n        emailManager.state.loading = true;\n        isRequestingCode.value = true;\n        const response = await account.sendEmailCode({\n          email: emailManager.state.value\n        });\n        if (response?.data?.message) {\n          showToast(response.data.message, 'success');\n          startEmailCountdown();\n        }\n      } catch (error) {\n        console.error('发送验证码失败:', error);\n        const errorMsg = error.response?.data?.detail || error.message || '发送验证码失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        emailManager.state.loading = false;\n        isRequestingCode.value = false;\n      }\n    };\n\n    // 修改按钮禁用状态\n    const isCodeButtonDisabled = computed(() => {\n      return emailManager.state.loading || emailManager.state.countdown > 0 || !emailManager.state.password || !emailManager.state.value || isRequestingCode.value;\n    });\n\n    // 修改密码强度更新的处理方法\n    const handlePasswordInput = () => {\n      validatePassword(passwordState.value.newPassword);\n      updatePasswordStrength(passwordState.value.newPassword);\n    };\n\n    // 添加表单数据\n    const deleteForm = ref({\n      password: ''\n    });\n\n    // 处理确认注销\n    const handleConfirmDelete = async () => {\n      if (!deleteForm.value.password) {\n        showToast('请输入密码', 'warning');\n        return;\n      }\n      try {\n        const response = await account.deleteAccount(deleteForm.value);\n        if (response?.data?.code === 200) {\n          showToast('账号已注销', 'success');\n          // 使用 auth store 的 logout 方法清除所有状态\n          await authStore.logout();\n          // 清除 user store 的状态\n          userStore.clearUserInfo();\n          // 清除其他可能的状态\n          localStorage.removeItem('isLoggedIn');\n          // 强制刷新页面以确保所有状态都被清除\n          window.location.href = '/login';\n        }\n      } catch (error) {\n        console.error('注销失败:', error);\n        showToast(error?.message || '注销失败', 'error');\n      }\n    };\n\n    // 倒计时管理\n    const startPhoneCountdown = () => {\n      phoneManager.state.countdown = 60;\n      const timer = setInterval(() => {\n        phoneManager.state.countdown--;\n        if (phoneManager.state.countdown <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n    const startEmailCountdown = () => {\n      emailManager.state.countdown = 60;\n      const timer = setInterval(() => {\n        emailManager.state.countdown--;\n        if (emailManager.state.countdown <= 0) {\n          clearInterval(timer);\n        }\n      }, 1000);\n    };\n\n    // 表单数据\n    const form = ref({\n      old_password: '',\n      new_password: '',\n      confirm_password: ''\n    });\n\n    // 用户信息\n    const userInfo = ref(null);\n\n    // 用户信息加载状态\n    const userInfoLoading = ref(false);\n\n    // 获取用户信息\n    const fetchUserInfo = async () => {\n      try {\n        userInfoLoading.value = true;\n        await userStore.getUserInfo();\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        showToast('获取用户信息失败', 'error');\n      } finally {\n        userInfoLoading.value = false;\n      }\n    };\n\n    // 在组件挂载时获取用户信息\n    onMounted(() => {\n      fetchUserInfo();\n    });\n\n    // 表单验证\n    const validateForm = () => {\n      if (!form.value.old_password) {\n        showToast('请输入当前密码', 'error');\n        return false;\n      }\n      if (!form.value.new_password) {\n        showToast('请输入新密码', 'error');\n        return false;\n      }\n      if (!form.value.confirm_password) {\n        showToast('请确认新密码', 'error');\n        return false;\n      }\n      if (form.value.new_password !== form.value.confirm_password) {\n        showToast('两次输入的密码不一致', 'error');\n        return false;\n      }\n      if (form.value.new_password.length < 6) {\n        showToast('密码长度不能少于6位', 'error');\n        return false;\n      }\n      return true;\n    };\n    const __returned__ = {\n      router,\n      authStore,\n      userStore,\n      phone,\n      email,\n      phoneManager,\n      emailManager,\n      loading,\n      handleDeleteAccount,\n      passwordState,\n      validatePassword,\n      updatePasswordStrength,\n      strengthText,\n      strengthTextClass,\n      strengthColorClass,\n      maskPhone,\n      showPhoneModal,\n      showPasswordModal,\n      showDeleteConfirm,\n      openPhoneModal,\n      openPasswordModal,\n      openDeleteConfirm,\n      closePhoneModal,\n      closePasswordModal,\n      closeDeleteConfirm,\n      handlePasswordSuccess,\n      confirmPasswordError,\n      validateNewPassword,\n      validateConfirmPassword,\n      handlePasswordUpdate,\n      handlePhoneUpdate,\n      handlePhoneSendCode,\n      showEmailModal,\n      openEmailModal,\n      closeEmailModal,\n      handleEmailUpdate,\n      isEmailFormValid,\n      isRequestingCode,\n      handleEmailSendCode,\n      isCodeButtonDisabled,\n      handlePasswordInput,\n      deleteForm,\n      handleConfirmDelete,\n      startPhoneCountdown,\n      startEmailCountdown,\n      form,\n      userInfo,\n      userInfoLoading,\n      fetchUserInfo,\n      validateForm,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get useDeleteAccount() {\n        return useDeleteAccount;\n      },\n      get usePhone() {\n        return usePhone;\n      },\n      get useEmail() {\n        return useEmail;\n      },\n      get useChangePassword() {\n        return useChangePassword;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get account() {\n        return account;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","showToast","useDeleteAccount","usePhone","useEmail","useChangePassword","ElMessageBox","account","useAuthStore","useUserStore","router","authStore","userStore","phone","userInfo","email","phoneManager","emailManager","deleteLoading","loading","handleDeleteAccount","state","passwordState","validatePassword","updatePasswordStrength","strengthText","strengthTextClass","strengthColorClass","maskPhone","replace","showPhoneModal","showPasswordModal","showDeleteConfirm","openPhoneModal","value","code","openPasswordModal","openDeleteConfirm","closePhoneModal","closePasswordModal","closeDeleteConfirm","deleteForm","password","handlePasswordSuccess","confirmPasswordError","validateNewPassword","error","newPassword","confirmPassword","validateConfirmPassword","handlePasswordUpdate","userInfoLoading","response","updatePassword","old_password","oldPassword","new_password","confirm_password","data","console","message","handlePhoneUpdate","phoneRegex","test","changePhone","detail","getUserInfo","Error","errorMsg","handlePhoneSendCode","sendVerifyCode","scene","type","startPhoneCountdown","showEmailModal","openEmailModal","closeEmailModal","handleEmailUpdate","changeEmail","includes","isEmailFormValid","emailRegex","isValidEmail","isRequestingCode","handleEmailSendCode","sendEmailCode","startEmailCountdown","isCodeButtonDisabled","countdown","handlePasswordInput","handleConfirmDelete","deleteAccount","logout","clearUserInfo","localStorage","removeItem","window","location","href","timer","setInterval","clearInterval","form","fetchUserInfo","validateForm","length"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/AccountSettings.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <div class=\"space-y-6\">\n      <!-- 账户安全 -->\n      <section class=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div class=\"px-6 py-4 bg-gray-100 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium text-gray-900\">账户安全</h2>\n        </div>\n        \n        <div class=\"p-6 space-y-6\">\n          <!-- 邮箱 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">邮箱</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">{{ email || '未绑定' }}</p>\n            </div>\n            <button \n              @click=\"openEmailModal\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n              hover:bg-indigo-50 transition-colors rounded-md\">\n              {{ email ? '更换邮箱' : '绑定邮箱' }}\n            </button>\n          </div>\n\n          <!-- 手机号 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">手机号</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">{{ maskPhone(phone) }}</p>\n            </div>\n            <button \n              @click=\"openPhoneModal\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n              hover:bg-indigo-50 transition-colors rounded-md\">\n              更换手机号\n            </button>\n          </div>\n\n          <!-- 密码 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">登录密码</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">用于保护账号安全</p>\n            </div>\n            <button \n              @click=\"openPasswordModal\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n              hover:bg-indigo-50 transition-colors rounded-md\">\n              修改密码\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <!-- 账户注销 -->\n      <section class=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div class=\"px-6 py-4 bg-gray-100 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium text-gray-900\">账户注销</h2>\n        </div>\n        \n        <div class=\"p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">账户注销</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">注销后，账户将被永久删除且无法恢复</p>\n            </div>\n            <button \n              @click=\"openDeleteConfirm\"\n              :disabled=\"loading\"\n              class=\"text-red-600 hover:text-red-500\"\n            >\n              {{ loading ? '注销中...' : '注销账号' }}\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <!-- Teleport 部分重写所有弹窗 -->\n      <Teleport to=\"body\">\n        <!-- 手机号修改弹窗 -->\n        <div v-if=\"showPhoneModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>更换手机号</h3>\n              <button class=\"close-btn\" @click=\"closePhoneModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <input \n                  type=\"text\" \n                  v-model=\"phoneManager.state.value\"\n                  placeholder=\"请输入新手机号\"\n                  :disabled=\"phoneManager.state.loading\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <div class=\"code-input\">\n                  <input \n                    type=\"text\" \n                    v-model=\"phoneManager.state.code\"\n                    placeholder=\"请输入验证码\"\n                    :disabled=\"phoneManager.state.loading\"\n                  />\n                  <button \n                    @click=\"handlePhoneSendCode\"\n                    :disabled=\"phoneManager.state.loading || phoneManager.state.countdown > 0\"\n                    class=\"code-btn\"\n                  >\n                    {{ phoneManager.state.countdown > 0 ? `${phoneManager.state.countdown}s` : '获取验证码' }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closePhoneModal\"\n                :disabled=\"phoneManager.state.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handlePhoneUpdate\"\n                :disabled=\"phoneManager.state.loading\"\n              >\n                {{ phoneManager.state.loading ? '更新中...' : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 密码修改弹窗 -->\n        <div v-if=\"showPasswordModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>修改密码</h3>\n              <button class=\"close-btn\" @click=\"closePasswordModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <!-- 原密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordState.oldPassword\"\n                  placeholder=\"请输入当前密码\"\n                />\n              </div>\n              \n              <!-- 新密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordState.newPassword\"\n                  @input=\"handlePasswordInput\"\n                  placeholder=\"请输入新密码\"\n                />\n                <!-- 密码强度指示器 -->\n                <div class=\"password-strength\">\n                  <div class=\"strength-text\" :class=\"strengthTextClass\">\n                    密码强度: {{ strengthText }}\n                  </div>\n                  <div class=\"strength-bar\">\n                    <div \n                      class=\"strength-progress\" \n                      :class=\"strengthColorClass\"\n                      :style=\"{ width: (passwordState.strength * 16.67) + '%' }\"\n                    ></div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- 确认密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordState.confirmPassword\"\n                  placeholder=\"请确认新密码\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closePasswordModal\"\n                :disabled=\"passwordState.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handlePasswordUpdate\"\n                :disabled=\"!isPasswordFormValid\"\n              >\n                {{ passwordState.loading ? '修改中...' : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 账户注销确认弹窗 -->\n        <div v-if=\"showDeleteConfirm\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                </svg>\n                <h3 class=\"text-red-700\">账户注销确认</h3>\n              </div>\n              <button class=\"close-btn\" @click=\"closeDeleteConfirm\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"bg-red-50 p-4 rounded-md mb-4 border border-red-100\">\n                <div class=\"flex\">\n                  <div class=\"flex-shrink-0\">\n                    <svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"text-sm font-medium text-red-800\">\n                      请确认以下信息\n                    </h3>\n                    <div class=\"mt-2 text-sm text-red-700\">\n                      <ul class=\"list-disc pl-5 space-y-1\">\n                        <li>账户注销后将无法恢复</li>\n                        <li>所有个人数据将被永久删除</li>\n                        <li>相关服务和功能将立即停止</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"deleteForm.password\"\n                  placeholder=\"请输入登录密码确认\"\n                  :disabled=\"loading\"\n                  class=\"border-red-300 focus:border-red-500 focus:ring-red-500\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closeDeleteConfirm\"\n                :disabled=\"loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-danger\" \n                @click=\"handleConfirmDelete\"\n                :disabled=\"loading || !deleteForm.password\"\n              >\n                {{ loading ? '注销中...' : '确认注销' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 邮箱绑定弹窗 -->\n        <div v-if=\"showEmailModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>{{ email ? '更换邮箱' : '绑定邮箱' }}</h3>\n              <button class=\"close-btn\" @click=\"closeEmailModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <input \n                  type=\"email\" \n                  v-model=\"emailManager.state.value\"\n                  placeholder=\"请输入邮箱地址\"\n                  :disabled=\"emailManager.state.loading\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"emailManager.state.password\"\n                  placeholder=\"请输入登录密码\"\n                  :disabled=\"emailManager.state.loading\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <div class=\"code-input\">\n                  <input \n                    type=\"text\" \n                    v-model=\"emailManager.state.code\"\n                    placeholder=\"请输入验证码\"\n                    :disabled=\"emailManager.state.loading\"\n                  />\n                  <button \n                    @click=\"handleEmailSendCode\"\n                    :disabled=\"isCodeButtonDisabled\"\n                    class=\"code-btn\"\n                  >\n                    {{ emailManager.state.countdown > 0 \n                      ? `${emailManager.state.countdown}s` \n                      : (isRequestingCode ? '发送中...' : '获取验证码') \n                    }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closeEmailModal\"\n                :disabled=\"emailManager.state.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handleEmailUpdate\"\n                :disabled=\"!isEmailFormValid\"\n              >\n                {{ emailManager.state.loading ? (email ? '更换中...' : '绑定中...') : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </Teleport>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { showToast } from '@/components/ToastMessage'\nimport { useDeleteAccount } from '@/composables/useDeleteAccount'\nimport { usePhone } from '@/composables/usePhone'\nimport { useEmail } from '@/composables/useEmail'\nimport { useChangePassword } from '@/composables/useChangePassword'\nimport { ElMessageBox } from 'element-plus'\nimport { account } from '@/api/account'\nimport { useAuthStore } from '@/stores/auth'\nimport { useUserStore } from '@/stores/user'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\nconst userStore = useUserStore()\n\n// 基础信息\nconst phone = computed(() => userStore.userInfo?.phone || '')\nconst email = computed(() => userStore.userInfo?.email || '')\n\n// 使用 composables\nconst phoneManager = usePhone()\nconst emailManager = useEmail()\nconst { deleteLoading: loading, handleDeleteAccount } = useDeleteAccount()\nconst {\n  state: passwordState,\n  validatePassword,\n  updatePasswordStrength,\n  strengthText,\n  strengthTextClass,\n  strengthColorClass\n} = useChangePassword()\n\n// 工具方法\nconst maskPhone = (phone) => {\n  if (!phone) return '未绑定'\n  return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2')\n}\n\n// 弹窗状态\nconst showPhoneModal = ref(false)\nconst showPasswordModal = ref(false)\nconst showDeleteConfirm = ref(false)\n\n// 打开弹窗的方法\nconst openPhoneModal = () => {\n  phoneManager.state.value = ''\n  phoneManager.state.code = ''\n  showPhoneModal.value = true\n}\n\nconst openPasswordModal = () => {\n  showPasswordModal.value = true\n}\n\nconst openDeleteConfirm = async () => {\n  showDeleteConfirm.value = true\n}\n\n// 关闭弹窗的方法\nconst closePhoneModal = () => {\n  showPhoneModal.value = false\n  phoneManager.state.value = ''\n  phoneManager.state.code = ''\n}\n\nconst closePasswordModal = () => {\n  showPasswordModal.value = false\n}\n\nconst closeDeleteConfirm = () => {\n  showDeleteConfirm.value = false\n  deleteForm.value.password = ''\n}\n\n// 处理成功回调\nconst handlePasswordSuccess = () => {\n  closePasswordModal()\n  showToast('密码修改成功', 'success')\n}\n\n\n// 添加密码验证相关的状态和方法\nconst confirmPasswordError = ref('')\n\nconst validateNewPassword = () => {\n  // 使用 composable 中的验证方法\n  password.state.error = password.validatePassword(password.state.newPassword)\n  // 如果新密码变化，也要检查确认密码\n  if (password.state.confirmPassword) {\n    validateConfirmPassword()\n  }\n}\n\nconst validateConfirmPassword = () => {\n  if (!password.state.confirmPassword) {\n    confirmPasswordError.value = ''\n  } else if (password.state.confirmPassword !== password.state.newPassword) {\n    confirmPasswordError.value = '两次输入的密码不一致'\n  } else {\n    confirmPasswordError.value = ''\n  }\n}\n\n// 处理密码更新\nconst handlePasswordUpdate = async () => {\n  // 先验证一次\n  validateNewPassword()\n  validateConfirmPassword()\n  \n  // 如果有错误就不提交\n  if (password.state.error || confirmPasswordError.value) {\n    return\n  }\n  \n  try {\n    userInfoLoading.value = true\n    const response = await account.updatePassword({\n      old_password: password.state.oldPassword,\n      new_password: password.state.newPassword,\n      confirm_password: password.state.confirmPassword\n    })\n    \n    if (response?.data?.code === 200) {\n      closePasswordModal()\n      showToast('密码修改成功', 'success')\n      // 清空表单\n      password.state.oldPassword = ''\n      password.state.newPassword = ''\n      password.state.confirmPassword = ''\n    }\n  } catch (error) {\n    console.error('密码修改失败:', error)\n    showToast(error?.response?.data?.message || '密码修改失败', 'error')\n  } finally {\n    userInfoLoading.value = false\n  }\n}\n\n// 处理手机号更新\nconst handlePhoneUpdate = async () => {\n  if (!phoneManager.state.value || !phoneManager.state.code) {\n    showToast('请填写完整信息', 'warning')\n    return\n  }\n\n  // 验证手机号格式\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  if (!phoneRegex.test(phoneManager.state.value)) {\n    showToast('请输入正确的手机号格式', 'warning')\n    return\n  }\n\n  try {\n    const response = await account.changePhone({\n      phone: phoneManager.state.value,\n      code: phoneManager.state.code\n    })\n    \n    if (response?.data?.code === 200 || response?.data?.detail) {\n      closePhoneModal()\n      await userStore.getUserInfo()\n      showToast(response.data.detail || '手机号更新成功', 'success')\n      return\n    }\n    \n    throw new Error(response?.data?.detail || '手机号更新失败')\n  } catch (error) {\n    console.error('手机号更新失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message ||\n                    error.message || \n                    '手机号更新失败'\n    showToast(errorMsg, 'error')\n  }\n}\n\n// 处理手机号验证码发送\nconst handlePhoneSendCode = async () => {\n  if (!phoneManager.state.value) {\n    showToast('请输入新手机号', 'warning')\n    return\n  }\n  \n  // 验证手机号格式\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  if (!phoneRegex.test(phoneManager.state.value)) {\n    showToast('请输入正确的手机号格式', 'warning')\n    return\n  }\n  \n  try {\n    phoneManager.state.loading = true\n    const response = await account.sendVerifyCode({\n      phone: phoneManager.state.value,\n      scene: 'change_phone',\n      type: 'sms'\n    })\n\n    if (response?.data?.code === 200) {\n      startPhoneCountdown()\n      showToast(response.data.message || '验证码已发送', 'success')\n    } else {\n      throw new Error(response?.data?.message || '发送验证码失败')\n    }\n  } catch (error) {\n    console.error('发送验证码失败:', error)\n    const errorMsg = error.response?.data?.message || \n                    error.response?.data?.detail ||\n                    error.message || \n                    '发送验证码失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    phoneManager.state.loading = false\n  }\n}\n\n// 邮箱相关\nconst showEmailModal = ref(false)\n\nconst openEmailModal = () => {\n  emailManager.state.value = ''\n  emailManager.state.code = ''\n  showEmailModal.value = true\n}\n\nconst closeEmailModal = () => {\n  showEmailModal.value = false\n  emailManager.state.value = ''\n  emailManager.state.code = ''\n  emailManager.state.password = ''\n}\n\nconst handleEmailUpdate = async () => {\n  try {\n    const data = {\n      email: emailManager.state.value,\n      code: emailManager.state.code,\n      password: emailManager.state.password\n    }\n    \n    const response = await account.changeEmail(data)\n\n    // 检查响应状态\n    if (response?.data?.code === 200 || response?.data?.message?.includes('成功')) {\n      closeEmailModal()\n      // 更新用户信息\n      await userStore.getUserInfo()\n      showToast(response.data.message || '邮箱更新成功', 'success')\n      return  // 成功后直接返回，不抛出错误\n    }\n    \n    // 如果没有成功状态码也没有成功消息，才抛出错误\n    throw new Error(response?.data?.message || '邮箱更新失败')\n  } catch (error) {\n    console.error('邮箱更新失败:', error)\n    // 如果错误消息包含\"成功\"，说明实际上是成功的\n    if (error.message?.includes('成功')) {\n      closeEmailModal()\n      await userStore.getUserInfo()\n      showToast(error.message, 'success')\n      return\n    }\n    \n    // 真正的错误处理\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '邮箱操作失败'\n    showToast(errorMsg, 'error')\n  }\n}\n\n// 添加计算属性控制邮箱表单按钮状态\nconst isEmailFormValid = computed(() => {\n  // 检查邮箱格式\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  const isValidEmail = emailRegex.test(emailManager.state.value)\n  \n  // 检查所有必填字段\n  return emailManager.state.value && \n         emailManager.state.code && \n         emailManager.state.password &&  // 密码必填\n         isValidEmail && \n         !emailManager.state.loading\n})\n\n// 添加防重复点击状态\nconst isRequestingCode = ref(false)\n\n// 处理邮箱更新的验证码发送\nconst handleEmailSendCode = async () => {\n  if (!emailManager.state.value) {\n    showToast('请输入新邮箱', 'warning')\n    return\n  }\n  \n  if (!phone.value) {\n    showToast('当前账号未绑定手机号，无法进行邮箱验证', 'warning')\n    return\n  }\n  \n  // 验证邮箱格式\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (!emailRegex.test(emailManager.state.value)) {\n    showToast('请输入正确的邮箱格式', 'warning')\n    return\n  }\n  \n  try {\n    emailManager.state.loading = true\n    isRequestingCode.value = true\n    const response = await account.sendEmailCode({\n      email: emailManager.state.value\n    })\n    \n    if (response?.data?.message) {\n      showToast(response.data.message, 'success')\n      startEmailCountdown()\n    }\n  } catch (error) {\n    console.error('发送验证码失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.message || \n                    '发送验证码失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    emailManager.state.loading = false\n    isRequestingCode.value = false\n  }\n}\n\n// 修改按钮禁用状态\nconst isCodeButtonDisabled = computed(() => {\n  return emailManager.state.loading || \n         emailManager.state.countdown > 0 || \n         !emailManager.state.password || \n         !emailManager.state.value ||\n         isRequestingCode.value\n})\n\n// 修改密码强度更新的处理方法\nconst handlePasswordInput = () => {\n  validatePassword(passwordState.value.newPassword)\n  updatePasswordStrength(passwordState.value.newPassword)\n}\n\n// 添加表单数据\nconst deleteForm = ref({\n  password: ''\n})\n\n// 处理确认注销\nconst handleConfirmDelete = async () => {\n  if (!deleteForm.value.password) {\n    showToast('请输入密码', 'warning')\n    return\n  }\n  \n  try {\n    const response = await account.deleteAccount(deleteForm.value)\n    if (response?.data?.code === 200) {\n      showToast('账号已注销', 'success')\n      // 使用 auth store 的 logout 方法清除所有状态\n      await authStore.logout()\n      // 清除 user store 的状态\n      userStore.clearUserInfo()\n      // 清除其他可能的状态\n      localStorage.removeItem('isLoggedIn')\n      // 强制刷新页面以确保所有状态都被清除\n      window.location.href = '/login'\n    }\n  } catch (error) {\n    console.error('注销失败:', error)\n    showToast(error?.message || '注销失败', 'error')\n  }\n}\n\n// 倒计时管理\nconst startPhoneCountdown = () => {\n  phoneManager.state.countdown = 60\n  const timer = setInterval(() => {\n    phoneManager.state.countdown--\n    if (phoneManager.state.countdown <= 0) {\n      clearInterval(timer)\n    }\n  }, 1000)\n}\n\nconst startEmailCountdown = () => {\n  emailManager.state.countdown = 60\n  const timer = setInterval(() => {\n    emailManager.state.countdown--\n    if (emailManager.state.countdown <= 0) {\n      clearInterval(timer)\n    }\n  }, 1000)\n}\n\n// 表单数据\nconst form = ref({\n  old_password: '',\n  new_password: '',\n  confirm_password: ''\n})\n\n// 用户信息\nconst userInfo = ref(null)\n\n// 用户信息加载状态\nconst userInfoLoading = ref(false)\n\n// 获取用户信息\nconst fetchUserInfo = async () => {\n  try {\n    userInfoLoading.value = true\n    await userStore.getUserInfo()\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n    showToast('获取用户信息失败', 'error')\n  } finally {\n    userInfoLoading.value = false\n  }\n}\n\n// 在组件挂载时获取用户信息\nonMounted(() => {\n  fetchUserInfo()\n})\n\n\n// 表单验证\nconst validateForm = () => {\n  if (!form.value.old_password) {\n    showToast('请输入当前密码', 'error')\n    return false\n  }\n  if (!form.value.new_password) {\n    showToast('请输入新密码', 'error')\n    return false\n  }\n  if (!form.value.confirm_password) {\n    showToast('请确认新密码', 'error')\n    return false\n  }\n  if (form.value.new_password !== form.value.confirm_password) {\n    showToast('两次输入的密码不一致', 'error')\n    return false\n  }\n  if (form.value.new_password.length < 6) {\n    showToast('密码长度不能少于6位', 'error')\n    return false\n  }\n  return true\n}\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 50;\n}\n\n.modal-content {\n  position: relative;\n  width: 91.666667%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-bottom: 1px solid #e5e7eb;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #111827;\n  font-size: 1.125rem;\n  font-weight: 500;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-top: 1px solid #e5e7eb;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: #111827;\n  background-color: white;\n  transition: border-color 0.15s ease-in-out;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #6366f1;\n  box-shadow: 0 0 0 1px #6366f1;\n}\n\n.form-group input:disabled {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n\n.code-input {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.code-input input {\n  flex: 1;\n}\n\n.code-btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: white;\n  background-color: #6366f1;\n  border-radius: 0.375rem;\n  transition: background-color 0.15s ease-in-out;\n}\n\n.code-btn:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.code-btn:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.375rem;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-default {\n  color: #374151;\n  background-color: white;\n  border: 1px solid #d1d5db;\n}\n\n.btn-default:not(:disabled):hover {\n  background-color: #f9fafb;\n}\n\n.btn-primary {\n  color: white;\n  background-color: #6366f1;\n  border: 1px solid transparent;\n}\n\n.btn-primary:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.btn-danger {\n  color: white;\n  background-color: #ef4444;\n  border: 1px solid transparent;\n}\n\n.btn-danger:not(:disabled):hover {\n  background-color: #dc2626;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 关闭按钮样式 */\n.close-btn {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.25rem;\n  color: #6b7280;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.15s ease-in-out;\n}\n\n.close-btn:hover {\n  color: #374151;\n}\n\n/* 注销弹窗特殊样式 */\n.bg-red-50 {\n  background-color: #fef2f2;\n}\n\n.border-red-100 {\n  border-color: #fee2e2;\n}\n\n.text-red-400 {\n  color: #f87171;\n}\n\n.text-red-600 {\n  color: #dc2626;\n}\n\n.text-red-700 {\n  color: #b91c1c;\n}\n\n.text-red-800 {\n  color: #991b1b;\n}\n\n/* 注销弹窗的输入框特殊样式 */\n.form-group input.border-red-300 {\n  border-color: #fca5a5;\n}\n\n.form-group input.focus\\:border-red-500:focus {\n  border-color: #ef4444;\n}\n\n.form-group input.focus\\:ring-red-500:focus {\n  box-shadow: 0 0 0 1px #ef4444;\n}\n\n.input-tips {\n  background-color: #f9fafb;\n  border-radius: 0.5rem;\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n}\n\n.input-tips ul li {\n  color: #6b7280;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.input-tips ul li span:first-child {\n  min-width: 1rem;\n  background-color: white;\n}\n\n.form-group input.error {\n  border-color: #ef4444;\n}\n\n.form-group input.error:focus {\n  border-color: #ef4444;\n  box-shadow: 0 0 0 1px #ef4444;\n}\n\n/* 添加密码强度指示器样式 */\n.password-strength {\n  margin-top: 0.5rem;\n}\n\n.strength-text {\n  font-size: 0.875rem;\n  margin-bottom: 0.25rem;\n}\n\n.strength-bar {\n  height: 4px;\n  background-color: #e5e7eb;\n  border-radius: 2px;\n  overflow: hidden;\n}\n\n.strength-progress {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
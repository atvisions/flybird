{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { Dialog, DialogPanel, DialogTitle, TransitionChild, TransitionRoot } from '@headlessui/vue';\nimport { ArrowUpTrayIcon, SparklesIcon } from '@heroicons/vue/24/outline';\nimport { useUserStore } from '@/stores/user';\n// 修改导入路径\nimport ProDialog from '../dialogs/ProDialog.vue';\nimport ResumeImport from './ResumeImport.vue';\nexport default {\n  __name: 'ResumeStatus',\n  props: {\n    completionData: {\n      type: Object,\n      default: () => ({})\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const userStore = useUserStore();\n    const isMember = computed(() => userStore.userInfo?.is_pro);\n\n    // 弹窗状态\n    const showProDialog = ref(false);\n    const showImportDialog = ref(false);\n    const showAIOptimizeDialog = ref(false);\n\n    // 处理导入按钮点击\n    const handleImportClick = () => {\n      if (isMember.value) {\n        showImportDialog.value = true;\n      } else {\n        showProDialog.value = true;\n      }\n    };\n\n    // 处理会员升级\n    const handleUpgradeMember = () => {\n      // 处理会员升级逻辑\n      showProDialog.value = false;\n    };\n\n    // 处理简历导入成功\n    const handleImportSuccess = () => {\n      showImportDialog.value = false;\n      // 通知父组件更新数据\n      emit('update');\n    };\n    const __returned__ = {\n      props,\n      emit,\n      userStore,\n      isMember,\n      showProDialog,\n      showImportDialog,\n      showAIOptimizeDialog,\n      handleImportClick,\n      handleUpgradeMember,\n      handleImportSuccess,\n      ref,\n      computed,\n      get Dialog() {\n        return Dialog;\n      },\n      get DialogPanel() {\n        return DialogPanel;\n      },\n      get DialogTitle() {\n        return DialogTitle;\n      },\n      get TransitionChild() {\n        return TransitionChild;\n      },\n      get TransitionRoot() {\n        return TransitionRoot;\n      },\n      get ArrowUpTrayIcon() {\n        return ArrowUpTrayIcon;\n      },\n      get SparklesIcon() {\n        return SparklesIcon;\n      },\n      get useUserStore() {\n        return useUserStore;\n      },\n      ProDialog,\n      ResumeImport\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","Dialog","DialogPanel","DialogTitle","TransitionChild","TransitionRoot","ArrowUpTrayIcon","SparklesIcon","useUserStore","ProDialog","ResumeImport","props","__props","emit","__emit","userStore","isMember","userInfo","is_pro","showProDialog","showImportDialog","showAIOptimizeDialog","handleImportClick","value","handleUpgradeMember","handleImportSuccess"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/ResumeStatus.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white rounded-lg shadow\">\n    <div class=\"px-4 py-5 sm:p-6\">\n      <!-- 完整度信息 -->\n      <div class=\"flex items-center justify-between\">\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900\">档案完整度</h3>\n          <div class=\"mt-1\">\n            <p class=\"text-sm text-gray-500\">\n              完善的档案信息将帮助您生成更专业的简历\n            </p>\n          </div>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-2xl font-semibold text-gray-900\">\n            {{ Math.round(completionData?.total_score || 0) }}\n            <span class=\"text-sm text-gray-500\">分</span>\n          </div>\n          <p class=\"mt-1 text-sm text-gray-500\">总分100分</p>\n        </div>\n      </div>\n\n      <!-- 进度条 -->\n      <div class=\"mt-4\">\n        <div class=\"h-2 bg-gray-100 rounded-full overflow-hidden\">\n          <div\n            class=\"h-full bg-blue-500 rounded-full transition-all duration-500\"\n            :style=\"{\n              width: `${Math.round(completionData?.total_score || 0)}%`,\n            }\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- 操作按钮 -->\n      <div class=\"mt-5 flex justify-end space-x-3\">\n        <!-- 根据会员状态显示不同按钮 -->\n        <button\n          @click=\"handleImportClick\"\n          class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          <ArrowUpTrayIcon class=\"w-5 h-5 mr-1.5\" />\n          导入简历\n        </button>\n        \n        <button\n          @click=\"showAIOptimizeDialog = true\"\n          class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n        >\n          <SparklesIcon class=\"w-5 h-5 mr-1.5 text-blue-500\" />\n          AI优化\n        </button>\n      </div>\n    </div>\n\n    <!-- 非会员弹窗 -->\n    <ProDialog \n      v-if=\"!isMember\"\n      v-model=\"showProDialog\"\n      @confirm=\"handleUpgradeMember\"\n    />\n\n    <!-- 会员导入简历弹窗 -->\n    <ResumeImport\n      v-else\n      v-model=\"showImportDialog\"\n      @import-success=\"handleImportSuccess\"\n    />\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { Dialog, DialogPanel, DialogTitle, TransitionChild, TransitionRoot } from '@headlessui/vue'\nimport { ArrowUpTrayIcon, SparklesIcon } from '@heroicons/vue/24/outline'\nimport { useUserStore } from '@/stores/user'\n// 修改导入路径\nimport ProDialog from '../dialogs/ProDialog.vue'\nimport ResumeImport from './ResumeImport.vue'\n\nconst props = defineProps({\n  completionData: {\n    type: Object,\n    default: () => ({})\n  },\n  loading: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update'])\n\nconst userStore = useUserStore()\nconst isMember = computed(() => userStore.userInfo?.is_pro)\n\n// 弹窗状态\nconst showProDialog = ref(false)\nconst showImportDialog = ref(false)\nconst showAIOptimizeDialog = ref(false)\n\n// 处理导入按钮点击\nconst handleImportClick = () => {\n  if (isMember.value) {\n    showImportDialog.value = true\n  } else {\n    showProDialog.value = true\n  }\n}\n\n// 处理会员升级\nconst handleUpgradeMember = () => {\n  // 处理会员升级逻辑\n  showProDialog.value = false\n}\n\n// 处理简历导入成功\nconst handleImportSuccess = () => {\n  showImportDialog.value = false\n  // 通知父组件更新数据\n  emit('update')\n}\n</script>"],"mappings":"AAyEA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAEC,eAAe,EAAEC,cAAc,QAAQ,iBAAgB;AAClG,SAASC,eAAe,EAAEC,YAAY,QAAQ,2BAA0B;AACxE,SAASC,YAAY,QAAQ,eAAc;AAC3C;AACA,OAAOC,SAAS,MAAM,0BAAyB;AAC/C,OAAOC,YAAY,MAAM,oBAAmB;;;;;;;;;;;;;;;;;;;IAE5C,MAAMC,KAAK,GAAGC,OAAA;IAWd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,SAAS,GAAGP,YAAY,CAAC;IAC/B,MAAMQ,QAAQ,GAAGhB,QAAQ,CAAC,MAAMe,SAAS,CAACE,QAAQ,EAAEC,MAAM;;IAE1D;IACA,MAAMC,aAAa,GAAGpB,GAAG,CAAC,KAAK;IAC/B,MAAMqB,gBAAgB,GAAGrB,GAAG,CAAC,KAAK;IAClC,MAAMsB,oBAAoB,GAAGtB,GAAG,CAAC,KAAK;;IAEtC;IACA,MAAMuB,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIN,QAAQ,CAACO,KAAK,EAAE;QAClBH,gBAAgB,CAACG,KAAK,GAAG,IAAG;MAC9B,CAAC,MAAM;QACLJ,aAAa,CAACI,KAAK,GAAG,IAAG;MAC3B;IACF;;IAEA;IACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;MAChC;MACAL,aAAa,CAACI,KAAK,GAAG,KAAI;IAC5B;;IAEA;IACA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;MAChCL,gBAAgB,CAACG,KAAK,GAAG,KAAI;MAC7B;MACAV,IAAI,CAAC,QAAQ;IACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
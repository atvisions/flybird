{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport EditorToolbar from '../components/toolbar/EditorToolbar.vue';\nimport ComponentPanel from '../components/panels/ComponentPanel.vue';\nimport EditorCanvas from '../components/canvas/EditorCanvas.vue';\nimport PropertyPanel from '../components/panels/PropertyPanel.vue';\nimport { useTemplateStore } from '../store/template';\nimport { useComponentStore } from '../store/component';\n\n// 模板数据\n\nexport default {\n  __name: 'TemplateEditor',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const template = ref({\n      id: null,\n      name: '',\n      category: null,\n      layout: [],\n      components: {},\n      styles: {}\n    });\n\n    // 选中的组件\n    const selectedComponent = ref(null);\n\n    // 获取可用组件列表\n    const componentStore = useComponentStore();\n    const availableComponents = computed(() => componentStore.components);\n\n    // 路由参数\n    const route = useRoute();\n    const templateStore = useTemplateStore();\n\n    // 初始化\n    onMounted(async () => {\n      // 如果有模板ID，加载模板数据\n      if (route.params.id) {\n        const data = await templateStore.getTemplate(route.params.id);\n        template.value = _objectSpread({}, data);\n      }\n      // 加载可用组件\n      await componentStore.loadComponents();\n    });\n\n    // 处理添加组件\n    const handleAddComponent = component => {\n      console.log('Adding component:', component);\n      const id = `component_${Date.now()}`;\n\n      // 创建新的组件数据\n      const newComponent = {\n        type: component.type,\n        data: component.data || {},\n        styles: component.styles || {}\n      };\n\n      // 创建新的布局项\n      const newLayoutItem = {\n        id,\n        x: component.position?.x || 0,\n        y: component.position?.y || template.value.layout.length * 4,\n        w: 12,\n        h: 4\n      };\n\n      // 更新组件数据\n      template.value = _objectSpread(_objectSpread({}, template.value), {}, {\n        components: _objectSpread(_objectSpread({}, template.value.components), {}, {\n          [id]: newComponent\n        }),\n        layout: [...template.value.layout, newLayoutItem]\n      });\n\n      // 选中新添加的组件\n      selectedComponent.value = _objectSpread({\n        id\n      }, newComponent);\n      console.log('Updated template:', template.value);\n    };\n\n    // 处理选中组件\n    const handleSelectComponent = componentId => {\n      selectedComponent.value = template.value.components[componentId] ? _objectSpread({\n        id: componentId\n      }, template.value.components[componentId]) : null;\n    };\n\n    // 处理组件更新\n    const handleComponentUpdate = (componentId, data) => {\n      template.value.components[componentId] = _objectSpread(_objectSpread({}, template.value.components[componentId]), data);\n    };\n\n    // 处理布局更新\n    const handleLayoutUpdate = layout => {\n      template.value.layout = layout;\n    };\n\n    // 保存模板\n    const handleSave = async () => {\n      try {\n        await templateStore.saveTemplate(template.value);\n        ElMessage.success('保存成功');\n      } catch (error) {\n        ElMessage.error('保存失败');\n      }\n    };\n\n    // 预览模板\n    const handlePreview = () => {\n      // 实现预览逻辑\n    };\n\n    // 发布模板\n    const handlePublish = async () => {\n      try {\n        await templateStore.publishTemplate(template.value.id);\n        ElMessage.success('发布成功');\n      } catch (error) {\n        ElMessage.error('发布失败');\n      }\n    };\n    const __returned__ = {\n      template,\n      selectedComponent,\n      componentStore,\n      availableComponents,\n      route,\n      templateStore,\n      handleAddComponent,\n      handleSelectComponent,\n      handleComponentUpdate,\n      handleLayoutUpdate,\n      handleSave,\n      handlePreview,\n      handlePublish,\n      ref,\n      computed,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      EditorToolbar,\n      ComponentPanel,\n      EditorCanvas,\n      PropertyPanel,\n      get useTemplateStore() {\n        return useTemplateStore;\n      },\n      get useComponentStore() {\n        return useComponentStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRoute","ElMessage","EditorToolbar","ComponentPanel","EditorCanvas","PropertyPanel","useTemplateStore","useComponentStore","template","id","name","category","layout","components","styles","selectedComponent","componentStore","availableComponents","route","templateStore","params","data","getTemplate","value","_objectSpread","loadComponents","handleAddComponent","component","console","log","Date","now","newComponent","type","newLayoutItem","x","position","y","length","w","h","handleSelectComponent","componentId","handleComponentUpdate","handleLayoutUpdate","handleSave","saveTemplate","success","error","handlePreview","handlePublish","publishTemplate"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/views/TemplateEditor.vue"],"sourcesContent":["<!-- 模板编辑器主视图 -->\n<template>\n  <div class=\"template-editor\">\n    <!-- 顶部工具栏 -->\n    <editor-toolbar \n      :template=\"template\"\n      @save=\"handleSave\"\n      @preview=\"handlePreview\"\n      @publish=\"handlePublish\"\n      @update:name=\"name => template.value.name = name\"\n    />\n    \n    <!-- 主要编辑区域 -->\n    <div class=\"editor-main\">\n      <!-- 左侧组件面板 -->\n      <component-panel\n        :components=\"availableComponents\"\n        @add-component=\"handleAddComponent\"\n      />\n      \n      <!-- 中间画布区域 -->\n      <editor-canvas\n        v-model=\"template.layout\"\n        :components=\"template.components\"\n        :styles=\"template.styles\"\n        @select=\"handleSelectComponent\"\n        @update:layout=\"handleLayoutUpdate\"\n      />\n      \n      <!-- 右侧属性面板 -->\n      <property-panel\n        v-if=\"selectedComponent\"\n        :component=\"selectedComponent\"\n        @update=\"handleComponentUpdate\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport EditorToolbar from '../components/toolbar/EditorToolbar.vue'\nimport ComponentPanel from '../components/panels/ComponentPanel.vue'\nimport EditorCanvas from '../components/canvas/EditorCanvas.vue'\nimport PropertyPanel from '../components/panels/PropertyPanel.vue'\nimport { useTemplateStore } from '../store/template'\nimport { useComponentStore } from '../store/component'\n\n// 模板数据\nconst template = ref({\n  id: null,\n  name: '',\n  category: null,\n  layout: [],\n  components: {},\n  styles: {}\n})\n\n// 选中的组件\nconst selectedComponent = ref(null)\n\n// 获取可用组件列表\nconst componentStore = useComponentStore()\nconst availableComponents = computed(() => componentStore.components)\n\n// 路由参数\nconst route = useRoute()\nconst templateStore = useTemplateStore()\n\n// 初始化\nonMounted(async () => {\n  // 如果有模板ID，加载模板数据\n  if (route.params.id) {\n    const data = await templateStore.getTemplate(route.params.id)\n    template.value = { ...data }\n  }\n  // 加载可用组件\n  await componentStore.loadComponents()\n})\n\n// 处理添加组件\nconst handleAddComponent = (component) => {\n  console.log('Adding component:', component)\n  const id = `component_${Date.now()}`\n  \n  // 创建新的组件数据\n  const newComponent = {\n    type: component.type,\n    data: component.data || {},\n    styles: component.styles || {}\n  }\n  \n  // 创建新的布局项\n  const newLayoutItem = {\n    id,\n    x: component.position?.x || 0,\n    y: component.position?.y || template.value.layout.length * 4,\n    w: 12,\n    h: 4\n  }\n  \n  // 更新组件数据\n  template.value = {\n    ...template.value,\n    components: {\n      ...template.value.components,\n      [id]: newComponent\n    },\n    layout: [...template.value.layout, newLayoutItem]\n  }\n  \n  // 选中新添加的组件\n  selectedComponent.value = {\n    id,\n    ...newComponent\n  }\n  \n  console.log('Updated template:', template.value)\n}\n\n// 处理选中组件\nconst handleSelectComponent = (componentId) => {\n  selectedComponent.value = template.value.components[componentId]\n    ? {\n        id: componentId,\n        ...template.value.components[componentId]\n      }\n    : null\n}\n\n// 处理组件更新\nconst handleComponentUpdate = (componentId, data) => {\n  template.value.components[componentId] = {\n    ...template.value.components[componentId],\n    ...data\n  }\n}\n\n// 处理布局更新\nconst handleLayoutUpdate = (layout) => {\n  template.value.layout = layout\n}\n\n// 保存模板\nconst handleSave = async () => {\n  try {\n    await templateStore.saveTemplate(template.value)\n    ElMessage.success('保存成功')\n  } catch (error) {\n    ElMessage.error('保存失败')\n  }\n}\n\n// 预览模板\nconst handlePreview = () => {\n  // 实现预览逻辑\n}\n\n// 发布模板\nconst handlePublish = async () => {\n  try {\n    await templateStore.publishTemplate(template.value.id)\n    ElMessage.success('发布成功')\n  } catch (error) {\n    ElMessage.error('发布失败')\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.template-editor {\n  @apply h-full flex flex-col;\n  \n  .editor-main {\n    @apply flex-1 flex;\n    height: calc(100vh - 64px); // 减去顶部工具栏高度\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
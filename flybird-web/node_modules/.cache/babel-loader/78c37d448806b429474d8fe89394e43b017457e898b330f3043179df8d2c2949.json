{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport DesignElement from './DesignElement.vue';\nimport profile from '@/api/profile';\nexport default {\n  __name: 'Canvas',\n  props: {\n    scale: {\n      type: Number,\n      default: 1\n    }\n  },\n  emits: ['element-select'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n\n    // 状态\n    const isDragOver = ref(false);\n    const elements = ref([]);\n    const selectedElement = ref(null);\n\n    // 数据字段\n    const dataFields = ref([]);\n\n    // 获取数据字段定义\n    const fetchDataFields = async () => {\n      try {\n        const response = await profile.getData();\n        console.log('API完整响应:', response); // 添加完整响应日志\n        console.log('响应数据结构:', {\n          code: response.code,\n          message: response.message,\n          data: response.data\n        }); // 添加结构化日志\n\n        // 确保使用正确的数据路径\n        const profileData = response.data?.data || response.data;\n        console.log('用户资料数据:', profileData); // 添加用户资料数据日志\n\n        // 将API返回的数据转换为字段定义\n        const fields = [\n        // 基本信息\n        {\n          label: '头像',\n          field: 'avatar',\n          group: '基本信息',\n          type: 'image'\n        },\n        // 移除 basic_info 前缀\n        {\n          label: '姓名',\n          field: 'name',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '性别',\n          field: 'gender',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '出生日期',\n          field: 'birth_date',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '电话',\n          field: 'phone',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '邮箱',\n          field: 'email',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '所在地',\n          field: 'location',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '个人总结',\n          field: 'personal_summary',\n          group: '基本信息',\n          type: 'text'\n        },\n        // 求职意向\n        {\n          label: '工作类型',\n          field: 'job_type',\n          group: '求职意向',\n          type: 'text'\n        }, {\n          label: '求职状态',\n          field: 'job_status',\n          group: '求职意向',\n          type: 'text'\n        }, {\n          label: '期望薪资',\n          field: 'expected_salary',\n          group: '求职意向',\n          type: 'text'\n        }, {\n          label: '期望城市',\n          field: 'expected_city',\n          group: '求职意向',\n          type: 'text'\n        }, {\n          label: '期望行业',\n          field: 'industries',\n          group: '求职意向',\n          type: 'text'\n        },\n        // 教育经历\n        {\n          label: '学校',\n          field: 'education[0].school',\n          group: '教育经历',\n          type: 'text'\n        }, {\n          label: '专业',\n          field: 'education[0].major',\n          group: '教育经历',\n          type: 'text'\n        }, {\n          label: '学历',\n          field: 'education[0].degree',\n          group: '教育经历',\n          type: 'text'\n        }, {\n          label: '在校时间',\n          field: 'education[0].start_date',\n          group: '教育经历',\n          type: 'text'\n        },\n        // 工作经历\n        {\n          label: '公司名称',\n          field: 'work_experience[0].company',\n          group: '最近工作',\n          type: 'text'\n        }, {\n          label: '职位名称',\n          field: 'work_experience[0].position',\n          group: '最近工作',\n          type: 'text'\n        }, {\n          label: '部门',\n          field: 'work_experience[0].department',\n          group: '最近工作',\n          type: 'text'\n        }, {\n          label: '工作描述',\n          field: 'work_experience[0].description',\n          group: '最近工作',\n          type: 'text'\n        },\n        // 项目经历\n        {\n          label: '项目名称',\n          field: 'project[0].name',\n          group: '项目经历',\n          type: 'text'\n        }, {\n          label: '项目角色',\n          field: 'project[0].role',\n          group: '项目经历',\n          type: 'text'\n        }, {\n          label: '项目描述',\n          field: 'project[0].description',\n          group: '项目经历',\n          type: 'text'\n        },\n        // 技能特长\n        {\n          label: '技能名称',\n          field: 'skill[0].name',\n          group: '技能特长',\n          type: 'text'\n        }, {\n          label: '掌握程度',\n          field: 'skill[0].level',\n          group: '技能特长',\n          type: 'text'\n        }, {\n          label: '技能描述',\n          field: 'skill[0].description',\n          group: '技能特长',\n          type: 'text'\n        },\n        // 语言能力\n        {\n          label: '语言名称',\n          field: 'language[0].name',\n          group: '语言能力',\n          type: 'text'\n        }, {\n          label: '掌握程度',\n          field: 'language[0].proficiency_display',\n          group: '语言能力',\n          type: 'text'\n        }, {\n          label: '证书名称',\n          field: 'language[0].certification',\n          group: '语言能力',\n          type: 'text'\n        }, {\n          label: '证书分数',\n          field: 'language[0].score',\n          group: '语言能力',\n          type: 'text'\n        }];\n        dataFields.value = fields;\n        console.log('设置的字段:', dataFields.value);\n      } catch (error) {\n        console.error('获取数据字段失败:', error);\n        // 使用默认字段\n        dataFields.value = [{\n          label: '姓名',\n          field: 'name',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '电话',\n          field: 'phone',\n          group: '基本信息',\n          type: 'text'\n        }, {\n          label: '邮箱',\n          field: 'email',\n          group: '基本信息',\n          type: 'text'\n        }];\n      }\n    };\n\n    // 处理画布点击\n    const handleCanvasClick = e => {\n      if (e.target === e.currentTarget) {\n        selectedElement.value = null;\n        emit('element-select', null);\n      }\n    };\n\n    // 处理元素选择\n    const handleElementSelect = element => {\n      selectedElement.value = element;\n      emit('element-select', element);\n    };\n\n    // 处理元素更新\n    const handleElementUpdate = updatedElement => {\n      const index = elements.value.findIndex(el => el.id === updatedElement.id);\n      if (index > -1) {\n        elements.value[index] = _objectSpread({}, updatedElement);\n        if (selectedElement.value?.id === updatedElement.id) {\n          selectedElement.value = _objectSpread({}, updatedElement);\n        }\n      }\n    };\n\n    // 处理删除元素\n    const handleDeleteElement = () => {\n      if (selectedElement.value) {\n        const index = elements.value.findIndex(el => el.id === selectedElement.value.id);\n        if (index > -1) {\n          elements.value.splice(index, 1);\n          selectedElement.value = null;\n          emit('element-select', null);\n        }\n      }\n    };\n\n    // 处理键盘事件\n    const handleKeyDown = e => {\n      if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n        e.preventDefault();\n        handleDeleteElement();\n      }\n    };\n\n    // 添加和移除全局键盘事件监听\n    onMounted(() => {\n      document.addEventListener('keydown', handleKeyDown);\n      fetchDataFields();\n    });\n    onUnmounted(() => {\n      document.removeEventListener('keydown', handleKeyDown);\n    });\n\n    // 处理元素拖拽\n    const handleElementDrop = event => {\n      const elementType = event.dataTransfer.getData('element-type');\n      if (!elementType) return;\n      try {\n        const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'));\n        const rect = event.currentTarget.getBoundingClientRect();\n        const x = (event.clientX - rect.left) / props.scale;\n        const y = (event.clientY - rect.top) / props.scale;\n        const newElement = {\n          id: Date.now().toString(),\n          type: elementType,\n          x,\n          y,\n          width: elementConfig.width || 100,\n          height: elementConfig.height || 100,\n          rotation: 0,\n          content: elementConfig.content,\n          placeholder: elementConfig.placeholder,\n          styles: elementConfig.styles || {}\n        };\n        elements.value.push(newElement);\n        // 自动选中新添加的元素\n        selectedElement.value = newElement;\n        emit('element-select', newElement);\n        isDragOver.value = false;\n      } catch (error) {\n        console.error('处理元素拖放时出错:', error);\n      }\n    };\n\n    // 处理拖拽进入\n    const handleDragEnter = event => {\n      event.preventDefault();\n      isDragOver.value = true;\n    };\n\n    // 处理拖拽离开\n    const handleDragLeave = event => {\n      event.preventDefault();\n      isDragOver.value = false;\n    };\n\n    // 导出布局数据\n    const exportLayoutData = () => {\n      return {\n        elements: elements.value.map(element => _objectSpread(_objectSpread({}, element), {}, {\n          dataBinding: element.dataBinding\n        }))\n      };\n    };\n\n    // 加载模板\n    const loadTemplate = async template => {\n      try {\n        // 获取用户数据\n        const response = await profile.getData();\n        console.log('模板加载 - API响应:', response); // 添加日志\n\n        // 确保使用正确的数据路径\n        const profileData = response.data?.data || response.data;\n        console.log('模板加载 - 用户资料数据:', profileData); // 添加日志\n\n        // 加载设计元素\n        elements.value = (template.elements || []).map(element => {\n          const newElement = _objectSpread({}, element);\n\n          // 如果元素有数据绑定,注入实际数据\n          if (element.dataBinding?.field) {\n            console.log('处理数据绑定:', element.dataBinding);\n            const {\n              field\n            } = element.dataBinding;\n            let value = null;\n            try {\n              // 处理嵌套字段\n              value = field.split('.').reduce((obj, key) => {\n                console.log('当前字段:', key, '当前对象:', obj);\n                if (!obj) return null;\n\n                // 处理数组索引\n                const match = key.match(/(\\w+)\\[(\\d+)\\]/);\n                if (match) {\n                  const [_, arrayName, index] = match;\n                  return obj[arrayName]?.[parseInt(index)];\n                }\n                return obj[key];\n              }, profileData);\n              console.log('获取到的字段值:', field, value);\n            } catch (error) {\n              console.error('获取字段值失败:', field, error);\n            }\n\n            // 根据元素类型设置实际内容\n            switch (element.type) {\n              case 'image':\n                if (field.includes('avatar') && value) {\n                  newElement.content = `http://192.168.3.16:8000${value}`;\n                  console.log('设置图片内容:', newElement.content);\n                } else {\n                  newElement.content = value || '/images.jpeg';\n                  console.log('设置默认图片:', newElement.content);\n                }\n                break;\n              case 'text':\n                newElement.content = value !== null && value !== undefined ? String(value) : `{{${field}}}`;\n                console.log('设置文本内容:', newElement.content);\n                break;\n            }\n          }\n          return newElement;\n        });\n        console.log('更新后的元素:', elements.value);\n      } catch (error) {\n        console.error('加载模板数据失败:', error);\n      }\n    };\n\n    // 更新元素数据绑定\n    const updateElementDataBinding = (elementId, binding) => {\n      const element = elements.value.find(el => el.id === elementId);\n      if (element) {\n        element.dataBinding = binding;\n        // 更新选中元素的状态\n        if (selectedElement.value?.id === elementId) {\n          selectedElement.value = _objectSpread({}, element);\n        }\n      }\n    };\n\n    // 暴露方法给父组件\n    __expose({\n      loadTemplate,\n      exportLayoutData,\n      updateElementDataBinding,\n      handleElementUpdate\n    });\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      elements,\n      selectedElement,\n      dataFields,\n      fetchDataFields,\n      handleCanvasClick,\n      handleElementSelect,\n      handleElementUpdate,\n      handleDeleteElement,\n      handleKeyDown,\n      handleElementDrop,\n      handleDragEnter,\n      handleDragLeave,\n      exportLayoutData,\n      loadTemplate,\n      updateElementDataBinding,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      DesignElement,\n      get profile() {\n        return profile;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","DesignElement","profile","props","__props","emit","__emit","isDragOver","elements","selectedElement","dataFields","fetchDataFields","response","getData","console","log","code","message","data","profileData","fields","label","field","group","type","value","error","handleCanvasClick","e","target","currentTarget","handleElementSelect","element","handleElementUpdate","updatedElement","index","findIndex","el","id","_objectSpread","handleDeleteElement","splice","handleKeyDown","key","preventDefault","document","addEventListener","removeEventListener","handleElementDrop","event","elementType","dataTransfer","elementConfig","JSON","parse","rect","getBoundingClientRect","x","clientX","left","scale","y","clientY","top","newElement","Date","now","toString","width","height","rotation","content","placeholder","styles","push","handleDragEnter","handleDragLeave","exportLayoutData","map","dataBinding","loadTemplate","template","split","reduce","obj","match","_","arrayName","parseInt","includes","undefined","String","updateElementDataBinding","elementId","binding","find","__expose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/Canvas.vue"],"sourcesContent":["<template>\n  <div class=\"canvas-container\">\n    <div class=\"canvas-wrapper\">\n      <div \n        class=\"canvas-content\" \n        :style=\"{ transform: `scale(${scale})` }\"\n        @dragover.prevent\n        @drop.prevent=\"handleElementDrop\"\n        @dragenter.prevent=\"handleDragEnter\"\n        @dragleave.prevent=\"handleDragLeave\"\n        @click.self=\"handleCanvasClick\"\n        tabindex=\"0\"\n        @keydown.delete.prevent=\"handleDeleteElement\"\n        @keydown.backspace.prevent=\"handleDeleteElement\"\n      >\n        <!-- 设计元素列表 -->\n        <template v-for=\"element in elements\" :key=\"element.id\">\n          <DesignElement\n            :element=\"element\"\n            :is-selected=\"selectedElement?.id === element.id\"\n            :scale=\"scale\"\n            :data-fields=\"dataFields\"\n            @select=\"handleElementSelect\"\n            @update=\"handleElementUpdate\"\n          />\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport DesignElement from './DesignElement.vue'\nimport profile from '@/api/profile'\n\nconst props = defineProps({\n  scale: {\n    type: Number,\n    default: 1\n  }\n})\n\nconst emit = defineEmits(['element-select'])\n\n// 状态\nconst isDragOver = ref(false)\nconst elements = ref([])\nconst selectedElement = ref(null)\n\n// 数据字段\nconst dataFields = ref([])\n\n// 获取数据字段定义\nconst fetchDataFields = async () => {\n  try {\n    const response = await profile.getData()\n    console.log('API完整响应:', response) // 添加完整响应日志\n    console.log('响应数据结构:', {\n      code: response.code,\n      message: response.message,\n      data: response.data\n    }) // 添加结构化日志\n    \n    // 确保使用正确的数据路径\n    const profileData = response.data?.data || response.data\n    console.log('用户资料数据:', profileData) // 添加用户资料数据日志\n    \n    // 将API返回的数据转换为字段定义\n    const fields = [\n      // 基本信息\n      { label: '头像', field: 'avatar', group: '基本信息', type: 'image' }, // 移除 basic_info 前缀\n      { label: '姓名', field: 'name', group: '基本信息', type: 'text' },\n      { label: '性别', field: 'gender', group: '基本信息', type: 'text' },\n      { label: '出生日期', field: 'birth_date', group: '基本信息', type: 'text' },\n      { label: '电话', field: 'phone', group: '基本信息', type: 'text' },\n      { label: '邮箱', field: 'email', group: '基本信息', type: 'text' },\n      { label: '所在地', field: 'location', group: '基本信息', type: 'text' },\n      { label: '个人总结', field: 'personal_summary', group: '基本信息', type: 'text' },\n\n      // 求职意向\n      { label: '工作类型', field: 'job_type', group: '求职意向', type: 'text' },\n      { label: '求职状态', field: 'job_status', group: '求职意向', type: 'text' },\n      { label: '期望薪资', field: 'expected_salary', group: '求职意向', type: 'text' },\n      { label: '期望城市', field: 'expected_city', group: '求职意向', type: 'text' },\n      { label: '期望行业', field: 'industries', group: '求职意向', type: 'text' },\n\n      // 教育经历\n      { label: '学校', field: 'education[0].school', group: '教育经历', type: 'text' },\n      { label: '专业', field: 'education[0].major', group: '教育经历', type: 'text' },\n      { label: '学历', field: 'education[0].degree', group: '教育经历', type: 'text' },\n      { label: '在校时间', field: 'education[0].start_date', group: '教育经历', type: 'text' },\n\n      // 工作经历\n      { label: '公司名称', field: 'work_experience[0].company', group: '最近工作', type: 'text' },\n      { label: '职位名称', field: 'work_experience[0].position', group: '最近工作', type: 'text' },\n      { label: '部门', field: 'work_experience[0].department', group: '最近工作', type: 'text' },\n      { label: '工作描述', field: 'work_experience[0].description', group: '最近工作', type: 'text' },\n\n      // 项目经历\n      { label: '项目名称', field: 'project[0].name', group: '项目经历', type: 'text' },\n      { label: '项目角色', field: 'project[0].role', group: '项目经历', type: 'text' },\n      { label: '项目描述', field: 'project[0].description', group: '项目经历', type: 'text' },\n\n      // 技能特长\n      { label: '技能名称', field: 'skill[0].name', group: '技能特长', type: 'text' },\n      { label: '掌握程度', field: 'skill[0].level', group: '技能特长', type: 'text' },\n      { label: '技能描述', field: 'skill[0].description', group: '技能特长', type: 'text' },\n\n      // 语言能力\n      { label: '语言名称', field: 'language[0].name', group: '语言能力', type: 'text' },\n      { label: '掌握程度', field: 'language[0].proficiency_display', group: '语言能力', type: 'text' },\n      { label: '证书名称', field: 'language[0].certification', group: '语言能力', type: 'text' },\n      { label: '证书分数', field: 'language[0].score', group: '语言能力', type: 'text' }\n    ]\n\n    dataFields.value = fields\n    console.log('设置的字段:', dataFields.value)\n  } catch (error) {\n    console.error('获取数据字段失败:', error)\n    // 使用默认字段\n    dataFields.value = [\n      { label: '姓名', field: 'name', group: '基本信息', type: 'text' },\n      { label: '电话', field: 'phone', group: '基本信息', type: 'text' },\n      { label: '邮箱', field: 'email', group: '基本信息', type: 'text' }\n    ]\n  }\n}\n\n// 处理画布点击\nconst handleCanvasClick = (e) => {\n  if (e.target === e.currentTarget) {\n    selectedElement.value = null\n    emit('element-select', null)\n  }\n}\n\n// 处理元素选择\nconst handleElementSelect = (element) => {\n  selectedElement.value = element\n  emit('element-select', element)\n}\n\n// 处理元素更新\nconst handleElementUpdate = (updatedElement) => {\n  const index = elements.value.findIndex(el => el.id === updatedElement.id)\n  if (index > -1) {\n    elements.value[index] = { ...updatedElement }\n    if (selectedElement.value?.id === updatedElement.id) {\n      selectedElement.value = { ...updatedElement }\n    }\n  }\n}\n\n// 处理删除元素\nconst handleDeleteElement = () => {\n  if (selectedElement.value) {\n    const index = elements.value.findIndex(el => el.id === selectedElement.value.id)\n    if (index > -1) {\n      elements.value.splice(index, 1)\n      selectedElement.value = null\n      emit('element-select', null)\n    }\n  }\n}\n\n// 处理键盘事件\nconst handleKeyDown = (e) => {\n  if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n    e.preventDefault()\n    handleDeleteElement()\n  }\n}\n\n// 添加和移除全局键盘事件监听\nonMounted(() => {\n  document.addEventListener('keydown', handleKeyDown)\n  fetchDataFields()\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeyDown)\n})\n\n// 处理元素拖拽\nconst handleElementDrop = (event) => {\n  const elementType = event.dataTransfer.getData('element-type')\n  if (!elementType) return\n\n  try {\n    const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'))\n    const rect = event.currentTarget.getBoundingClientRect()\n    const x = (event.clientX - rect.left) / props.scale\n    const y = (event.clientY - rect.top) / props.scale\n    \n    const newElement = {\n      id: Date.now().toString(),\n      type: elementType,\n      x,\n      y,\n      width: elementConfig.width || 100,\n      height: elementConfig.height || 100,\n      rotation: 0,\n      content: elementConfig.content,\n      placeholder: elementConfig.placeholder,\n      styles: elementConfig.styles || {}\n    }\n    \n    elements.value.push(newElement)\n    // 自动选中新添加的元素\n    selectedElement.value = newElement\n    emit('element-select', newElement)\n    isDragOver.value = false\n  } catch (error) {\n    console.error('处理元素拖放时出错:', error)\n  }\n}\n\n// 处理拖拽进入\nconst handleDragEnter = (event) => {\n  event.preventDefault()\n  isDragOver.value = true\n}\n\n// 处理拖拽离开\nconst handleDragLeave = (event) => {\n  event.preventDefault()\n  isDragOver.value = false\n}\n\n// 导出布局数据\nconst exportLayoutData = () => {\n  return {\n    elements: elements.value.map(element => ({\n      ...element,\n      dataBinding: element.dataBinding\n    }))\n  }\n}\n\n// 加载模板\nconst loadTemplate = async (template) => {\n  try {\n    // 获取用户数据\n    const response = await profile.getData()\n    console.log('模板加载 - API响应:', response) // 添加日志\n    \n    // 确保使用正确的数据路径\n    const profileData = response.data?.data || response.data\n    console.log('模板加载 - 用户资料数据:', profileData) // 添加日志\n    \n    // 加载设计元素\n    elements.value = (template.elements || []).map(element => {\n      const newElement = { ...element }\n      \n      // 如果元素有数据绑定,注入实际数据\n      if (element.dataBinding?.field) {\n        console.log('处理数据绑定:', element.dataBinding)\n        const { field } = element.dataBinding\n        let value = null\n        \n        try {\n          // 处理嵌套字段\n          value = field.split('.').reduce((obj, key) => {\n            console.log('当前字段:', key, '当前对象:', obj)\n            if (!obj) return null\n            \n            // 处理数组索引\n            const match = key.match(/(\\w+)\\[(\\d+)\\]/)\n            if (match) {\n              const [_, arrayName, index] = match\n              return obj[arrayName]?.[parseInt(index)]\n            }\n            return obj[key]\n          }, profileData)\n          \n          console.log('获取到的字段值:', field, value)\n        } catch (error) {\n          console.error('获取字段值失败:', field, error)\n        }\n\n        // 根据元素类型设置实际内容\n        switch (element.type) {\n          case 'image':\n            if (field.includes('avatar') && value) {\n              newElement.content = `http://192.168.3.16:8000${value}`\n              console.log('设置图片内容:', newElement.content)\n            } else {\n              newElement.content = value || '/images.jpeg'\n              console.log('设置默认图片:', newElement.content)\n            }\n            break\n          case 'text':\n            newElement.content = value !== null && value !== undefined \n              ? String(value)\n              : `{{${field}}}`\n            console.log('设置文本内容:', newElement.content)\n            break\n        }\n      }\n      \n      return newElement\n    })\n    \n    console.log('更新后的元素:', elements.value)\n  } catch (error) {\n    console.error('加载模板数据失败:', error)\n  }\n}\n\n// 更新元素数据绑定\nconst updateElementDataBinding = (elementId, binding) => {\n  const element = elements.value.find(el => el.id === elementId)\n  if (element) {\n    element.dataBinding = binding\n    // 更新选中元素的状态\n    if (selectedElement.value?.id === elementId) {\n      selectedElement.value = { ...element }\n    }\n  }\n}\n\n// 暴露方法给父组件\ndefineExpose({\n  loadTemplate,\n  exportLayoutData,\n  updateElementDataBinding,\n  handleElementUpdate\n})\n</script>\n\n<style scoped>\n.canvas-container {\n  flex: 1;\n  overflow: hidden;\n  background: #f5f5f5;\n  position: relative;\n}\n\n.canvas-wrapper {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 20px;\n}\n\n.canvas-content {\n  width: 794px; /* A4 纸宽度 */\n  min-height: 1123px; /* A4 纸高度 */\n  background: #ffffff;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n  position: relative;\n  transform-origin: top center;\n  outline: none; /* 移除焦点时的轮廓 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { ref, computed, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport MobileTabBar from '@/components/MobileTabBar.vue';\nimport PageBanner from '@/components/common/PageBanner.vue';\nimport CategoryMenu from '@/components/portfolio/CategoryMenu.vue';\nimport PortfolioNavigation from '@/components/portfolio/PortfolioNavigation.vue';\nimport { ChevronRightIcon, PlayIcon, EyeIcon, HeartIcon } from '@heroicons/vue/24/outline';\nimport { portfolioCategories } from '@/config/portfolioCategories';\nexport default {\n  __name: 'PortfolioList',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    description: {\n      type: String,\n      required: true\n    },\n    theme: {\n      type: String,\n      default: 'blue'\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    menuGroups: {\n      type: Array,\n      required: true\n    },\n    works: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const route = useRoute();\n\n    // 分类相关状态\n    const currentMainCategory = ref('all');\n    const currentSubCategory = ref('');\n    const currentThirdCategory = ref('');\n    const currentLevel = ref('main');\n    const showCategoryMenu = ref(false);\n\n    // 排序相关状态\n    const showSortMenu = ref(false);\n    const currentSort = ref('popular');\n\n    // 获取当前类型的分类数据\n    const currentTypeCategories = computed(() => {\n      const categoryConfig = portfolioCategories[props.type] || {};\n      return categoryConfig.categories || [];\n    });\n\n    // 计算当前显示的分类名称\n    const currentCategoryName = computed(() => {\n      if (currentMainCategory.value === 'all') return '全部';\n      const mainCategory = currentTypeCategories.value.find(c => c.id === currentMainCategory.value);\n      if (!currentSubCategory.value) return mainCategory?.name;\n      const subCategory = mainCategory?.children?.find(c => c.id === currentSubCategory.value);\n      return subCategory?.name;\n    });\n\n    // 获取当前分类的子分类\n    const currentSubCategories = computed(() => {\n      if (currentMainCategory.value === 'all') return [];\n      const mainCategory = currentTypeCategories.value.find(c => c.id === currentMainCategory.value);\n      return mainCategory?.children || [];\n    });\n\n    // 处理分类切换\n    const handleCategoryChange = (categoryId, level = 'main') => {\n      if (level === 'main') {\n        currentMainCategory.value = categoryId;\n        currentSubCategory.value = '';\n        currentThirdCategory.value = '';\n        if (categoryId !== 'all') {\n          currentLevel.value = 'sub';\n        }\n      } else if (level === 'sub') {\n        currentSubCategory.value = categoryId;\n        currentThirdCategory.value = '';\n        showCategoryMenu.value = false;\n      }\n    };\n\n    // 监听路由参数变化\n    watch(() => route.query.category, newCategory => {\n      if (newCategory) {\n        currentMainCategory.value = newCategory;\n      }\n    }, {\n      immediate: true\n    });\n\n    // 过滤作品列表\n    const filteredWorks = computed(() => {\n      let result = [...props.works];\n\n      // 应用分类过滤\n      if (currentMainCategory.value !== 'all') {\n        if (currentSubCategory.value) {\n          result = result.filter(work => work.subCategory === currentSubCategory.value);\n        } else {\n          result = result.filter(work => work.type === currentMainCategory.value);\n        }\n      }\n\n      // 应用排序\n      switch (currentSort.value) {\n        case 'popular':\n          result.sort((a, b) => b.views + b.likes - (a.views + a.likes));\n          break;\n        case 'newest':\n          result.sort((a, b) => new Date(b.date) - new Date(a.date));\n          break;\n        case 'views':\n          result.sort((a, b) => b.views - a.views);\n          break;\n        case 'likes':\n          result.sort((a, b) => b.likes - a.likes);\n          break;\n      }\n      return result;\n    });\n\n    // 判断是否在首页\n    const isHomePage = computed(() => {\n      return route.path === '/portfolio';\n    });\n\n    // 获取作品类型名称\n    const getWorkTypeName = type => {\n      const category = currentTypeCategories.value.find(c => c.id === type);\n      return category?.name || type;\n    };\n    const __returned__ = {\n      props,\n      route,\n      currentMainCategory,\n      currentSubCategory,\n      currentThirdCategory,\n      currentLevel,\n      showCategoryMenu,\n      showSortMenu,\n      currentSort,\n      currentTypeCategories,\n      currentCategoryName,\n      currentSubCategories,\n      handleCategoryChange,\n      filteredWorks,\n      isHomePage,\n      getWorkTypeName,\n      ref,\n      computed,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      MobileTabBar,\n      PageBanner,\n      CategoryMenu,\n      PortfolioNavigation,\n      get ChevronRightIcon() {\n        return ChevronRightIcon;\n      },\n      get PlayIcon() {\n        return PlayIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get HeartIcon() {\n        return HeartIcon;\n      },\n      get portfolioCategories() {\n        return portfolioCategories;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","useRoute","MobileTabBar","PageBanner","CategoryMenu","PortfolioNavigation","ChevronRightIcon","PlayIcon","EyeIcon","HeartIcon","portfolioCategories","props","__props","route","currentMainCategory","currentSubCategory","currentThirdCategory","currentLevel","showCategoryMenu","showSortMenu","currentSort","currentTypeCategories","categoryConfig","type","categories","currentCategoryName","value","mainCategory","find","c","id","name","subCategory","children","currentSubCategories","handleCategoryChange","categoryId","level","query","category","newCategory","immediate","filteredWorks","result","works","filter","work","sort","a","b","views","likes","Date","date","isHomePage","path","getWorkTypeName"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/portfolio/PortfolioList.vue"],"sourcesContent":["<template>\n  <div class=\"py-4 lg:py-6 mt-[72px]\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <!-- 顶部横幅 -->\n      <PageBanner :theme=\"theme\">\n        <h1 class=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">{{ title }}</h1>\n        <p class=\"text-gray-600 text-lg max-w-2xl\">{{ description }}</p>\n      </PageBanner>\n\n      <!-- 移动端当前分类显示 -->\n      <div class=\"flex items-center justify-between py-3 sm:hidden\">\n        <div class=\"flex items-center space-x-2\">\n          <span class=\"text-sm text-gray-500\">当前：</span>\n          <span class=\"text-sm font-medium text-gray-900\">\n            {{ currentCategoryName }}\n          </span>\n        </div>\n        <button \n          class=\"text-sm text-gray-500 hover:text-gray-900 flex items-center\"\n          @click=\"showCategoryMenu = true\"\n        >\n          切换分类\n          <ChevronRightIcon class=\"w-4 h-4 ml-1\" />\n        </button>\n      </div>\n\n      <!-- PC端导航 -->\n      <PortfolioNavigation \n        v-model:currentCategory=\"currentMainCategory\"\n        v-model:currentSort=\"currentSort\"\n        :type=\"type\"\n        class=\"hidden md:block\"\n      />\n\n      <!-- 作品列表 -->\n      <div class=\"max-w-7xl mx-auto mt-6\">\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6\">\n          <div v-for=\"work in filteredWorks\" :key=\"work.id\"\n            class=\"bg-white rounded-lg lg:rounded-xl border border-gray-100 overflow-hidden hover:shadow-lg transition-all duration-300\"\n          >\n            <!-- 作品封面 -->\n            <div class=\"aspect-w-16 aspect-h-9 sm:aspect-w-1 sm:aspect-h-1 bg-gray-100 relative group overflow-hidden\">\n              <img \n                :src=\"work.cover\" \n                class=\"w-full h-full object-cover transform group-hover:scale-110 transition-all duration-500\"\n                alt=\"\"\n              >\n              <!-- 视频时长标记 -->\n              <div v-if=\"work.isVideo\" \n                class=\"absolute bottom-2 right-2 px-2 py-1 bg-black/70 rounded-md text-white text-xs flex items-center\"\n              >\n                <PlayIcon class=\"w-3 h-3 mr-1\" />\n                {{ work.duration }}\n              </div>\n              <!-- 悬浮遮罩 -->\n              <div class=\"absolute inset-0 bg-black/60 invisible group-hover:visible opacity-0 group-hover:opacity-100 transition-all duration-300 flex flex-col items-center justify-center transform group-hover:scale-110\">\n                <span class=\"text-white font-medium mb-2\">{{ getWorkTypeName(work.type) }}</span>\n                <div class=\"flex items-center gap-3\">\n                  <span class=\"flex items-center text-gray-300 text-sm\">\n                    <EyeIcon class=\"w-4 h-4 mr-1\" />{{ work.views }}\n                  </span>\n                  <span class=\"flex items-center text-gray-300 text-sm\">\n                    <HeartIcon class=\"w-4 h-4 mr-1\" />{{ work.likes }}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <!-- 作品信息 -->\n            <div class=\"p-4 lg:p-4\">\n              <h3 class=\"text-sm font-medium text-gray-900 hover:text-blue-600 transition-colors line-clamp-1 mb-2\">\n                {{ work.title }}\n              </h3>\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-2\">\n                  <img :src=\"work.author.avatar\" class=\"w-5 h-5 rounded-full\">\n                  <span class=\"text-sm text-gray-600\">{{ work.author.name }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 分类切换菜单 -->\n    <CategoryMenu v-if=\"showCategoryMenu\" \n      v-model:show=\"showCategoryMenu\"\n      v-model:currentLevel=\"currentLevel\"\n      v-model:currentMainCategory=\"currentMainCategory\"\n      v-model:currentSubCategory=\"currentSubCategory\"\n      v-model:currentThirdCategory=\"currentThirdCategory\"\n      :type=\"type\"\n      :categories=\"currentTypeCategories\"\n      @category-change=\"handleCategoryChange\"\n    />\n\n    <!-- 使用移动端底部导航栏 -->\n    <MobileTabBar :menu-groups=\"menuGroups\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { useRoute } from 'vue-router'\nimport MobileTabBar from '@/components/MobileTabBar.vue'\nimport PageBanner from '@/components/common/PageBanner.vue'\nimport CategoryMenu from '@/components/portfolio/CategoryMenu.vue'\nimport PortfolioNavigation from '@/components/portfolio/PortfolioNavigation.vue'\nimport {\n  ChevronRightIcon,\n  PlayIcon,\n  EyeIcon,\n  HeartIcon\n} from '@heroicons/vue/24/outline'\nimport { portfolioCategories } from '@/config/portfolioCategories'\n\nconst props = defineProps({\n  title: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  theme: {\n    type: String,\n    default: 'blue'\n  },\n  type: {\n    type: String,\n    required: true\n  },\n  menuGroups: {\n    type: Array,\n    required: true\n  },\n  works: {\n    type: Array,\n    required: true\n  }\n})\n\nconst route = useRoute()\n\n// 分类相关状态\nconst currentMainCategory = ref('all')\nconst currentSubCategory = ref('')\nconst currentThirdCategory = ref('')\nconst currentLevel = ref('main')\nconst showCategoryMenu = ref(false)\n\n// 排序相关状态\nconst showSortMenu = ref(false)\nconst currentSort = ref('popular')\n\n// 获取当前类型的分类数据\nconst currentTypeCategories = computed(() => {\n  const categoryConfig = portfolioCategories[props.type] || {}\n  return categoryConfig.categories || []\n})\n\n// 计算当前显示的分类名称\nconst currentCategoryName = computed(() => {\n  if (currentMainCategory.value === 'all') return '全部'\n  const mainCategory = currentTypeCategories.value.find(c => c.id === currentMainCategory.value)\n  if (!currentSubCategory.value) return mainCategory?.name\n  const subCategory = mainCategory?.children?.find(c => c.id === currentSubCategory.value)\n  return subCategory?.name\n})\n\n// 获取当前分类的子分类\nconst currentSubCategories = computed(() => {\n  if (currentMainCategory.value === 'all') return []\n  const mainCategory = currentTypeCategories.value.find(c => c.id === currentMainCategory.value)\n  return mainCategory?.children || []\n})\n\n// 处理分类切换\nconst handleCategoryChange = (categoryId, level = 'main') => {\n  if (level === 'main') {\n    currentMainCategory.value = categoryId\n    currentSubCategory.value = ''\n    currentThirdCategory.value = ''\n    if (categoryId !== 'all') {\n      currentLevel.value = 'sub'\n    }\n  } else if (level === 'sub') {\n    currentSubCategory.value = categoryId\n    currentThirdCategory.value = ''\n    showCategoryMenu.value = false\n  }\n}\n\n// 监听路由参数变化\nwatch(() => route.query.category, (newCategory) => {\n  if (newCategory) {\n    currentMainCategory.value = newCategory\n  }\n}, { immediate: true })\n\n// 过滤作品列表\nconst filteredWorks = computed(() => {\n  let result = [...props.works]\n  \n  // 应用分类过滤\n  if (currentMainCategory.value !== 'all') {\n    if (currentSubCategory.value) {\n      result = result.filter(work => work.subCategory === currentSubCategory.value)\n    } else {\n      result = result.filter(work => work.type === currentMainCategory.value)\n    }\n  }\n  \n  // 应用排序\n  switch (currentSort.value) {\n    case 'popular':\n      result.sort((a, b) => (b.views + b.likes) - (a.views + a.likes))\n      break\n    case 'newest':\n      result.sort((a, b) => new Date(b.date) - new Date(a.date))\n      break\n    case 'views':\n      result.sort((a, b) => b.views - a.views)\n      break\n    case 'likes':\n      result.sort((a, b) => b.likes - a.likes)\n      break\n  }\n  \n  return result\n})\n\n// 判断是否在首页\nconst isHomePage = computed(() => {\n  return route.path === '/portfolio'\n})\n\n// 获取作品类型名称\nconst getWorkTypeName = (type) => {\n  const category = currentTypeCategories.value.find(c => c.id === type)\n  return category?.name || type\n}\n</script>\n\n<style scoped>\n.no-scrollbar {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n.no-scrollbar::-webkit-scrollbar {\n  display: none;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
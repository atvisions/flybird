{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen flex flex-col\"\n};\nconst _hoisted_2 = {\n  class: \"flex-1 flex flex-col\"\n};\nconst _hoisted_3 = {\n  class: \"flex-1 py-4 lg:py-6 mt-[60px] md:mt-[72px] md:overflow-visible overflow-x-hidden\"\n};\nconst _hoisted_4 = {\n  class: \"mx-auto max-w-7xl px-2 sm:px-4 lg:px-8 mt-4 lg:mt-0 relative\"\n};\nconst _hoisted_5 = {\n  class: \"grid grid-cols-1 lg:grid-cols-12 gap-6 lg:gap-8\"\n};\nconst _hoisted_6 = {\n  class: \"hidden lg:block lg:col-span-3 relative\"\n};\nconst _hoisted_7 = {\n  class: \"bg-white rounded-lg shadow overflow-hidden sticky top-24\",\n  style: {\n    \"height\": \"fit-content\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"space-y-1\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"flex items-center flex-1 min-w-0\"\n};\nconst _hoisted_11 = {\n  class: \"ml-2 truncate\"\n};\nconst _hoisted_12 = {\n  class: \"lg:col-span-6 pb-20 lg:pb-0 w-full space-y-4\"\n};\nconst _hoisted_13 = {\n  class: \"hidden lg:block lg:col-span-3 relative\"\n};\nconst _hoisted_14 = {\n  class: \"bg-white rounded-lg shadow p-4 sticky top-24\",\n  style: {\n    \"height\": \"fit-content\"\n  }\n};\nconst _hoisted_15 = {\n  class: \"space-y-4\"\n};\nconst _hoisted_16 = {\n  class: \"flex-1 min-w-0\"\n};\nconst _hoisted_17 = {\n  class: \"text-sm font-medium text-gray-900 truncate\"\n};\nconst _hoisted_18 = {\n  class: \"text-sm text-gray-500\"\n};\nconst _hoisted_19 = {\n  class: \"flex-shrink-0\"\n};\nconst _hoisted_20 = {\n  class: \"text-sm font-medium text-indigo-600\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"HeadView\"]), _createCommentVNode(\" 主要内容区域 \"), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 左侧导航 - 仅桌面端显示 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"nav\", _hoisted_8, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.tabs, tab => {\n    return _createElementVNode(\"button\", {\n      key: tab.key,\n      onClick: $event => $setup.handleTabChange(tab.key),\n      class: _normalizeClass([\"w-full flex items-center px-4 py-3 text-sm font-medium group\", [$setup.currentTab === tab.key ? 'bg-gray-100 text-[#1A56DB]' : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900']])\n    }, [_createElementVNode(\"div\", _hoisted_10, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.getTabIcon(tab)), {\n      class: _normalizeClass([$setup.currentTab === tab.key ? 'text-[#1A56DB]' : 'text-gray-400 group-hover:text-gray-500', 'h-5 w-5 flex-shrink-0'])\n    }, null, 8 /* PROPS */, [\"class\"])), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(tab.name), 1 /* TEXT */)]), $setup.getTabMetric(tab.key) ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      class: _normalizeClass([$setup.currentTab === tab.key ? 'bg-blue-100 text-[#1A56DB]' : 'bg-gray-100 text-gray-900', 'ml-3 inline-block py-0.5 px-2 text-xs rounded-full'])\n    }, _toDisplayString($setup.getTabMetric(tab.key)), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_9);\n  }), 64 /* STABLE_FRAGMENT */))])])]), _createCommentVNode(\" 中间内容区 \"), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(), _createBlock(_resolveDynamicComponent($setup.currentComponent)))]), _createCommentVNode(\" 右侧广告位 - 仅桌面端显示 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", {\n    class: \"text-lg font-medium text-gray-900 mb-4\"\n  }, \"推荐职位\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.recommendedJobs, job => {\n    return _createElementVNode(\"div\", {\n      key: job.id,\n      class: \"flex space-x-3\"\n    }, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", _hoisted_17, _toDisplayString(job.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_18, _toDisplayString(job.company), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", _hoisted_20, _toDisplayString(job.salary), 1 /* TEXT */)])]);\n  }), 64 /* STABLE_FRAGMENT */))])])])])]), _createCommentVNode(\" 移动端底部导航 \"), _createVNode(_Transition, {\n    name: \"fade\"\n  }, {\n    default: _withCtx(() => [$setup.showMobileTabBar ? (_openBlock(), _createBlock($setup[\"MobileTabBar\"], {\n      key: 0,\n      class: \"md:hidden\",\n      \"current-tab\": $setup.currentTab,\n      actions: $setup.mobileActions,\n      menuGroups: $setup.profileMenuGroups,\n      onTabChange: $setup.handleTabChange\n    }, null, 8 /* PROPS */, [\"current-tab\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })])]), _createCommentVNode(\" 仅在桌面端显示页脚 \"), _createVNode($setup[\"FootView\"], {\n    class: \"hidden lg:block\"\n  })]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","$setup","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","tabs","tab","key","onClick","$event","handleTabChange","_normalizeClass","currentTab","_hoisted_10","_createBlock","_resolveDynamicComponent","getTabIcon","_hoisted_11","_toDisplayString","name","getTabMetric","_hoisted_9","_hoisted_12","currentComponent","_hoisted_13","_hoisted_14","_hoisted_15","recommendedJobs","job","id","_hoisted_16","_hoisted_17","title","_hoisted_18","company","_hoisted_19","_hoisted_20","salary","_Transition","default","_withCtx","showMobileTabBar","actions","mobileActions","menuGroups","profileMenuGroups","onTabChange","_"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/UserCenter.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col\">\n    <HeadView />\n    <!-- 主要内容区域 -->\n    <main class=\"flex-1 flex flex-col\">\n      <div class=\"flex-1 py-4 lg:py-6 mt-[60px] md:mt-[72px] md:overflow-visible overflow-x-hidden\">\n        <div class=\"mx-auto max-w-7xl px-2 sm:px-4 lg:px-8 mt-4 lg:mt-0 relative\">\n          <div class=\"grid grid-cols-1 lg:grid-cols-12 gap-6 lg:gap-8\">\n            <!-- 左侧导航 - 仅桌面端显示 -->\n            <div class=\"hidden lg:block lg:col-span-3 relative\">\n              <div class=\"bg-white rounded-lg shadow overflow-hidden sticky top-24\" style=\"height: fit-content;\">\n                <nav class=\"space-y-1\">\n                  <button\n                      v-for=\"tab in tabs\"\n                      :key=\"tab.key\"\n                      @click=\"handleTabChange(tab.key)\" \n                      class=\"w-full flex items-center px-4 py-3 text-sm font-medium group\"\n                      :class=\"[\n                      currentTab === tab.key\n                          ? 'bg-gray-100 text-[#1A56DB]'\n                          : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                      ]\"\n                  >\n                  <div class=\"flex items-center flex-1 min-w-0\">\n                    <component\n                      :is=\"getTabIcon(tab)\"\n                      :class=\"[\n                        currentTab === tab.key ? 'text-[#1A56DB]' : 'text-gray-400 group-hover:text-gray-500',\n                        'h-5 w-5 flex-shrink-0'\n                      ]\"\n                    />\n                    <span class=\"ml-2 truncate\">{{ tab.name }}</span>\n                  </div>\n                  <span \n                    v-if=\"getTabMetric(tab.key)\"\n                    :class=\"[\n                      currentTab === tab.key ? 'bg-blue-100 text-[#1A56DB]' : 'bg-gray-100 text-gray-900',\n                      'ml-3 inline-block py-0.5 px-2 text-xs rounded-full'\n                    ]\"\n                  >\n                    {{ getTabMetric(tab.key) }}\n                  </span>\n                </button>\n              </nav>\n              </div>\n            </div>\n  \n            <!-- 中间内容区 -->\n            <div class=\"lg:col-span-6 pb-20 lg:pb-0 w-full space-y-4\">\n              <component :is=\"currentComponent\" />\n            </div>\n  \n            <!-- 右侧广告位 - 仅桌面端显示 -->\n            <div class=\"hidden lg:block lg:col-span-3 relative\">\n              <div class=\"bg-white rounded-lg shadow p-4 sticky top-24\" style=\"height: fit-content;\">\n                <h3 class=\"text-lg font-medium text-gray-900 mb-4\">推荐职位</h3>\n                <div class=\"space-y-4\">\n                  <div v-for=\"job in recommendedJobs\" :key=\"job.id\" class=\"flex space-x-3\">\n                    <div class=\"flex-1 min-w-0\">\n                      <p class=\"text-sm font-medium text-gray-900 truncate\">{{ job.title }}</p>\n                      <p class=\"text-sm text-gray-500\">{{ job.company }}</p>\n                    </div>\n                    <div class=\"flex-shrink-0\">\n                      <span class=\"text-sm font-medium text-indigo-600\">{{ job.salary }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n        <!-- 移动端底部导航 -->\n        <Transition name=\"fade\">\n          <MobileTabBar\n            v-if=\"showMobileTabBar\"\n            class=\"md:hidden\"\n            :current-tab=\"currentTab\"\n            :actions=\"mobileActions\"\n            :menuGroups=\"profileMenuGroups\"\n            @tab-change=\"handleTabChange\"\n          />\n        </Transition>\n      </div>\n    </main>\n\n    <!-- 仅在桌面端显示页脚 -->\n    <FootView class=\"hidden lg:block\" />\n  </div>\n</template>\n<script setup>\nimport { ref, computed, watch, onMounted, onUnmounted, defineAsyncComponent, nextTick } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport profile from '@/api/profile'\nimport HeadView from '../../components/HeadView.vue'\nimport FootView from '../../components/FootView.vue'\nimport {\nUserIcon,\nDocumentIcon,\nCog6ToothIcon,\nSquares2X2Icon,\nBellIcon,\nBars3Icon,\nSparklesIcon,\n} from '@heroicons/vue/24/outline'\nimport {\nUserIcon as UserIconSolid,\nDocumentIcon as DocumentIconSolid,\nCog6ToothIcon as Cog6ToothIconSolid,\nSquares2X2Icon as Squares2X2IconSolid,\nBellIcon as BellIconSolid,\n} from '@heroicons/vue/24/solid'\nimport MobileTabBar from '@/components/MobileTabBar.vue'\n\n// 创建加载组件\nconst LoadingComponent = {\nname: 'LoadingComponent',\ntemplate: `\n  <div class=\"p-4 text-center\">\n    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n    <p class=\"mt-2 text-gray-600\">加载中...</p>\n  </div>\n`\n}\n\n// 异步组件\nconst MyProfile = defineAsyncComponent({\nloader: () => import('@/views/user/MyProfile/index.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000,  // 10秒超时\ndelay: 0,        // 立即显示加载组件\nsuspensible: false  // 禁用 suspense\n})\n\nconst MyResumes = defineAsyncComponent({\nloader: () => import('@/views/user/MyResumes.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000\n})\n\n\nconst AccountSettings = defineAsyncComponent({\nloader: () => import('@/views/user/AccountSettings.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000\n})\n\n\nconst UserHome = defineAsyncComponent({\nloader: () => import('@/views/user/MyProfile/components/UserHome.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000,\ndelay: 0,\nsuspensible: false\n})\n\nconst MyMessages = defineAsyncComponent({\nloader: () => import('@/views/user/MyProfile/components/MyMessages.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000\n})\n\n// 导入会员中心组件\nconst Membership = defineAsyncComponent({\nloader: () => import('@/views/user/Membership/index.vue'),\nloadingComponent: LoadingComponent,\ntimeout: 10000\n})\n\nconst route = useRoute()\nconst router = useRouter()\n\n// 统一的 currentTab 声明，使用 URL 参数或 localStorage\nconst currentTab = ref(route.query.tab || localStorage.getItem('userCenterTab') || 'profile')\n\n// 监听标签变化\nwatch(currentTab, (newTab) => {\n// 更新 localStorage\nlocalStorage.setItem('userCenterTab', newTab)\n// 更新 URL 参数\nrouter.replace({\n  query: { ...route.query, tab: newTab }\n})\n})\n\n// 监听 URL 参数变化\nwatch(\n() => route.query.tab,\n(newTab) => {\n  if (newTab && newTab !== currentTab.value) {\n    currentTab.value = newTab\n  }\n}\n)\n\n// 处理标签切换\nconst handleTabChange = (key) => {\nif (showMobileTabBar.value) {\n  currentTab.value = key\n}\n}\n\n// 将原有的tabs拆分为主要和次要标签\nconst tabs = [\n{ \n  key: 'home', \n  name: '用户中心',\n  icon: Squares2X2Icon\n},\n{ \n  key: 'profile', \n  name: '我的档案',\n  icon: UserIcon\n},\n{ \n  key: 'resumes', \n  name: '我的简历',\n  icon: DocumentIcon\n},\n{ \n  key: 'membership', \n  name: '会员中心',\n  icon: SparklesIcon\n},\n{ \n  key: 'messages', \n  name: '系统消息',\n  icon: BellIcon\n},\n{ \n  key: 'account', \n  name: '账户设置',\n  icon: Cog6ToothIcon\n}\n]\n\n// 模拟数据\nconst portfolioCount = ref(4) // 假设有4个作品\nconst creationsCount = ref(5) // 假设有5个创作\nconst favoritesCount = ref(10) // 假设有10个收藏\nconst unreadMessagesCount = ref(3) // 假设有3条未读消息\n\nconst messageBadge = computed(() => unreadMessagesCount.value)\n\n// 移动端底部导航按钮\nconst mobileActions = [\n{\n  key: 'home',\n  label: '用户中心',\n  icon: Squares2X2Icon,\n},\n{\n  key: 'profile',\n  label: '档案',\n  icon: UserIcon,\n},\n{\n  key: 'resumes',\n  label: '简历',\n  icon: DocumentIcon,\n},\n{\n  key: 'messages',\n  label: '消息',\n  icon: BellIcon,\n  badge: unreadMessagesCount\n},\n{\n  key: 'account',\n  label: '设置',\n  icon: Cog6ToothIcon,\n}\n]\n\n// 移动端菜单状态\nconst isMobileMenuOpen = ref(false)\n\n// 处理移动端标签切换\nconst handleMobileTabChange = (key) => {\ncurrentTab.value = key\nisMobileMenuOpen.value = false\n}\n\n// 动态组件\nconst currentComponent = computed(() => {\nswitch (currentTab.value) {\n  case 'home':\n    return UserHome\n  case 'membership':\n    return Membership\n  case 'profile':\n    return MyProfile\n  case 'resumes':\n    return MyResumes\n  case 'messages':\n    return MyMessages\n  case 'account':\n    return AccountSettings\n  default:\n    return UserHome\n}\n})\n\n// 从 store 或者 API 获取完整度数据\nconst completionData = ref({\ntotal_score: 0\n})\n\n// 获取完整度数据\nconst fetchCompleteness = async () => {\ntry {\n  const response = await profile.getCompleteness()\n  if (response.data?.code === 200 && response.data?.data) {\n    completionData.value = response.data.data\n  }\n} catch (error) {\n  console.error('获取简历完整度失败:', error)\n}\n}\n\n// 获取标签指标\nconst getTabMetric = (key) => {\nswitch (key) {\n  case 'profile':\n    const score = Math.round(completionData.value.total_score || 0)\n    return score + '分'\n  case 'resumes':\n    return '2'\n  case 'creations':\n    return creationsCount.value\n  case 'portfolio':\n    return portfolioCount.value\n  case 'favorites':\n    return favoritesCount.value\n  case 'messages':\n    return unreadMessagesCount.value || 0\n  default:\n    return ''\n}\n}\n\n// 修改状态管理\nconst showMobileTabBar = ref(false)\n\n// 修改生命周期钩子\nonMounted(() => {\n// 延迟显示 MobileTabBar，确保 DOM 完全加载\nnextTick(() => {\n  showMobileTabBar.value = true\n})\nwindow.addEventListener('resize', handleResize)\nfetchCompleteness()\n})\n\nonUnmounted(() => {\nshowMobileTabBar.value = false\nwindow.removeEventListener('resize', handleResize)\n})\n\n// 修改 handleResize\nconst handleResize = () => {\nif (showMobileTabBar.value) {\n  window.dispatchEvent(new Event('resize'))\n}\n}\n\n// 监听路由变化，在进入个人资料页时刷新数据\nwatch(() => route.path, async (newPath) => {\nif (showMobileTabBar.value && newPath.includes('/user/profile')) {\n  await fetchCompleteness()\n}\n})\n\n// 推荐职位数据\nconst recommendedJobs = [\n{\n  id: 1,\n  title: '高级前端工程师',\n  company: '字节跳动',\n  salary: '25-35K'\n},\n{\n  id: 2,\n  title: '资深产品经理',\n  company: '腾讯',\n  salary: '30-45K'\n},\n{\n  id: 3,\n  title: 'UI设计师',\n  company: '阿里巴巴',\n  salary: '20-30K'\n}\n]\n\n// 判断标签是否激活\nconst isActiveTab = (key) => {\nif (key === 'more') {\n  return false // \"更多\"按钮永远不会处于激活状态\n}\nreturn currentTab.value === key\n}\n\n// 定义菜单组\nconst menuGroups = ref([\n{\n  title: '内容管理',\n  items: [\n    {\n      label: '作品集',\n      icon: 'portfolio',\n      route: '/user/center?tab=portfolio'\n    },\n    {\n      label: '文章',\n      icon: 'article',\n      route: '/user/center?tab=articles'\n    },\n    {\n      label: '话题',\n      icon: 'topic',\n      route: '/user/center?tab=topics'\n    },\n    {\n      label: '问答',\n      icon: 'qa',\n      route: '/user/center?tab=qa'\n    }\n  ]\n},\n{\n  title: '互动管理',\n  items: [\n    {\n      label: '评论',\n      icon: 'comment',\n      route: '/user/center?tab=comments'\n    },\n    {\n      label: '收藏',\n      icon: 'favorite',\n      route: '/user/center?tab=favorites'\n    },\n    {\n      label: '关注',\n      icon: 'follow',\n      route: '/user/center?tab=following'\n    }\n  ]\n}\n])\n\n// 获取当前标签对应的图标\nconst getTabIcon = (tab) => {\nif (currentTab.value === tab.key) {\n  // 选中状态使用实心图标\n  switch (tab.key) {\n    case 'home':\n      return Squares2X2IconSolid\n    case 'profile':\n      return UserIconSolid\n    case 'resumes':\n      return DocumentIconSolid\n    case 'messages':\n      return BellIconSolid\n    case 'account':\n      return Cog6ToothIconSolid\n    default:\n      return tab.icon\n  }\n}\n// 未选中状态使用描边图标\nreturn tab.icon\n}\n\n// 添加移动端视图判断\nconst isMobileView = computed(() => {\nreturn window.innerWidth < 768\n})\n\n// 添加 profileMenuGroups 数据\nconst profileMenuGroups = [\n{\n  title: '内容管理',\n  items: [\n    { key: 'home', label: '用户中心', icon: Squares2X2Icon },\n    { key: 'profile', label: '我的档案', icon: UserIcon },\n    { key: 'resumes', label: '我的简历', icon: DocumentIcon }\n  ]\n},\n{\n  title: '账号管理',\n  items: [\n    { key: 'messages', label: '消息', icon: BellIcon },\n    { key: 'account', label: '设置', icon: Cog6ToothIcon }\n  ]\n}\n]\n</script>\n\n<style scoped>\n/* 确保内容区域占满剩余空间 */\nmain {\n min-height: calc(100vh - 60px);\n}\n\n.footer-container {\n margin-top: auto;\n}\n\n/* 添加过渡动画样式 */\n.fade-enter-active,\n.fade-leave-active {\n transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n opacity: 0;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
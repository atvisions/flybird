{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport ContentCardSkeleton from '@/components/skeletons/ContentCardSkeleton.vue';\nimport ArticleCard from '@/components/community/ArticleCard.vue';\nexport default {\n  __name: 'ArticlesView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(true);\n    const articles = ref([]);\n\n    // 获取文章列表\n    const fetchArticles = async () => {\n      try {\n        // 模拟获取数据\n        articles.value = [{\n          id: 1,\n          title: '深入理解 Vue3 Composition API',\n          content: 'Vue3 的 Composition API 是一个革命性的特性，它让我们能够更好地组织和复用组件逻辑。本文将深入探讨它的使用方法和最佳实践...',\n          createTime: new Date(Date.now() - 3600000).toISOString(),\n          author: {\n            name: '张小明',\n            avatar: 'https://picsum.photos/200'\n          },\n          category: '前端开发',\n          tags: ['Vue3', 'JavaScript', '前端框架'],\n          views: 1234,\n          comments: 56,\n          likes: 789\n        }, {\n          id: 2,\n          title: 'TypeScript 高级类型实战',\n          content: 'TypeScript 的类型系统非常强大，本文将介绍一些高级类型的使用技巧，包括映射类型、条件类型、类型推导等内容...',\n          createTime: new Date(Date.now() - 86400000).toISOString(),\n          author: {\n            name: '李大山',\n            avatar: 'https://picsum.photos/201'\n          },\n          category: '前端开发',\n          tags: ['TypeScript', '前端'],\n          views: 2345,\n          comments: 78,\n          likes: 456\n        }, {\n          id: 3,\n          title: 'Node.js 性能优化实践',\n          content: '本文将分享一些 Node.js 应用性能优化的实践经验，包括内存管理、异步操作优化、数据库查询优化等方面的内容...',\n          createTime: new Date(Date.now() - 172800000).toISOString(),\n          author: {\n            name: '王大力',\n            avatar: 'https://picsum.photos/202'\n          },\n          category: '后端开发',\n          tags: ['Node.js', '性能优化', '后端'],\n          views: 3456,\n          comments: 90,\n          likes: 567\n        }];\n        await new Promise(resolve => setTimeout(resolve, 1000)); // 模拟加载延迟\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      fetchArticles();\n    });\n    const __returned__ = {\n      loading,\n      articles,\n      fetchArticles,\n      ref,\n      onMounted,\n      ContentCardSkeleton,\n      ArticleCard\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ContentCardSkeleton","ArticleCard","loading","articles","fetchArticles","value","id","title","content","createTime","Date","now","toISOString","author","name","avatar","category","tags","views","comments","likes","Promise","resolve","setTimeout"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/ArticlesView.vue"],"sourcesContent":["<template>\n  <div class=\"articles-view\">\n    <div class=\"space-y-4\">\n      <ContentCardSkeleton v-if=\"loading\" v-for=\"n in 3\" :key=\"n\" />\n      \n      <ArticleCard v-else\n        v-for=\"article in articles\"\n        :key=\"article.id\"\n        :article=\"article\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport ContentCardSkeleton from '@/components/skeletons/ContentCardSkeleton.vue'\nimport ArticleCard from '@/components/community/ArticleCard.vue'\n\nconst loading = ref(true)\nconst articles = ref([])\n\n// 获取文章列表\nconst fetchArticles = async () => {\n  try {\n    // 模拟获取数据\n    articles.value = [\n      {\n        id: 1,\n        title: '深入理解 Vue3 Composition API',\n        content: 'Vue3 的 Composition API 是一个革命性的特性，它让我们能够更好地组织和复用组件逻辑。本文将深入探讨它的使用方法和最佳实践...',\n        createTime: new Date(Date.now() - 3600000).toISOString(),\n        author: {\n          name: '张小明',\n          avatar: 'https://picsum.photos/200'\n        },\n        category: '前端开发',\n        tags: ['Vue3', 'JavaScript', '前端框架'],\n        views: 1234,\n        comments: 56,\n        likes: 789\n      },\n      {\n        id: 2,\n        title: 'TypeScript 高级类型实战',\n        content: 'TypeScript 的类型系统非常强大，本文将介绍一些高级类型的使用技巧，包括映射类型、条件类型、类型推导等内容...',\n        createTime: new Date(Date.now() - 86400000).toISOString(),\n        author: {\n          name: '李大山',\n          avatar: 'https://picsum.photos/201'\n        },\n        category: '前端开发',\n        tags: ['TypeScript', '前端'],\n        views: 2345,\n        comments: 78,\n        likes: 456\n      },\n      {\n        id: 3,\n        title: 'Node.js 性能优化实践',\n        content: '本文将分享一些 Node.js 应用性能优化的实践经验，包括内存管理、异步操作优化、数据库查询优化等方面的内容...',\n        createTime: new Date(Date.now() - 172800000).toISOString(),\n        author: {\n          name: '王大力',\n          avatar: 'https://picsum.photos/202'\n        },\n        category: '后端开发',\n        tags: ['Node.js', '性能优化', '后端'],\n        views: 3456,\n        comments: 90,\n        likes: 567\n      }\n    ]\n    await new Promise(resolve => setTimeout(resolve, 1000)) // 模拟加载延迟\n  } finally {\n    loading.value = false\n  }\n}\n\nonMounted(() => {\n  fetchArticles()\n})\n</script> "],"mappings":"AAeA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,OAAOC,mBAAmB,MAAM,gDAA+C;AAC/E,OAAOC,WAAW,MAAM,wCAAuC;;;;;;;IAE/D,MAAMC,OAAO,GAAGJ,GAAG,CAAC,IAAI;IACxB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,EAAE;;IAEvB;IACA,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACAD,QAAQ,CAACE,KAAK,GAAG,CACf;UACEC,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,2BAA2B;UAClCC,OAAO,EAAE,2EAA2E;UACpFC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,WAAW,CAAC,CAAC;UACxDC,MAAM,EAAE;YACNC,IAAI,EAAE,KAAK;YACXC,MAAM,EAAE;UACV,CAAC;UACDC,QAAQ,EAAE,MAAM;UAChBC,IAAI,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;UACpCC,KAAK,EAAE,IAAI;UACXC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAC,EACD;UACEd,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,mBAAmB;UAC1BC,OAAO,EAAE,8DAA8D;UACvEC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,WAAW,CAAC,CAAC;UACzDC,MAAM,EAAE;YACNC,IAAI,EAAE,KAAK;YACXC,MAAM,EAAE;UACV,CAAC;UACDC,QAAQ,EAAE,MAAM;UAChBC,IAAI,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC;UAC1BC,KAAK,EAAE,IAAI;UACXC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAC,EACD;UACEd,EAAE,EAAE,CAAC;UACLC,KAAK,EAAE,gBAAgB;UACvBC,OAAO,EAAE,4DAA4D;UACrEC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAACC,WAAW,CAAC,CAAC;UAC1DC,MAAM,EAAE;YACNC,IAAI,EAAE,KAAK;YACXC,MAAM,EAAE;UACV,CAAC;UACDC,QAAQ,EAAE,MAAM;UAChBC,IAAI,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC;UAC/BC,KAAK,EAAE,IAAI;UACXC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,EACF;QACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,EAAC;MAC1D,CAAC,SAAS;QACRpB,OAAO,CAACG,KAAK,GAAG,KAAI;MACtB;IACF;IAEAN,SAAS,CAAC,MAAM;MACdK,aAAa,CAAC;IAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
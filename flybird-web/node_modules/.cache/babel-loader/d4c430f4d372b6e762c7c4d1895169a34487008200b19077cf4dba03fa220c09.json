{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"toast\"\n  }, {\n    default: _withCtx(() => [$setup.visible ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: _normalizeClass(['toast-container', $props.type])\n    }, _toDisplayString($props.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_Transition","name","default","_withCtx","$setup","visible","_createElementBlock","key","class","_normalizeClass","$props","type","message","_createCommentVNode","_"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/ToastMessage.vue"],"sourcesContent":["<template>\n    <transition name=\"toast\">\n        <div v-if=\"visible\" :class=\"['toast-container', type]\">\n            {{ message }}\n        </div>\n    </transition>\n</template>\n\n<script setup>\nimport { ref, onMounted, defineProps } from 'vue'\n\nconst props = defineProps({\n    message: {\n        type: String,\n        required: true\n    },\n    type: {\n        type: String,\n        default: 'info'\n    },\n    duration: {\n        type: Number,\n        default: 2000\n    },\n    onDestroy: {\n        type: Function,\n        required: true\n    }\n})\n\nconst visible = ref(false)\n\nonMounted(() => {\n    visible.value = true\n    setTimeout(() => {\n        visible.value = false\n        setTimeout(() => {\n            props.onDestroy()\n        }, 200) // 等待过渡动画结束\n    }, props.duration)\n})\n</script>\n\n<style scoped>\n.toast-container {\n    position: fixed;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    padding: 10px 20px;\n    border-radius: 4px;\n    color: white;\n    font-size: 14px;\n    z-index: 9999;\n}\n\n.success {\n    background-color: #67c23a;\n}\n\n.warning {\n    background-color: #e6a23c;\n}\n\n.error {\n    background-color: #f56c6c;\n}\n\n.info {\n    background-color: #909399;\n}\n\n.toast-enter-active,\n.toast-leave-active {\n    transition: opacity 0.2s, transform 0.2s;\n}\n\n.toast-enter-from,\n.toast-leave-to {\n    opacity: 0;\n    transform: translate(-50%, -20px);\n}\n</style>\n\n"],"mappings":";;uBACIA,YAAA,CAIaC,WAAA;IAJDC,IAAI,EAAC;EAAO;IAD5BC,OAAA,EAAAC,QAAA,CACsC,MAGP,CAFZC,MAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAEM;MAJdC,GAAA;MAE6BC,KAAK,EAFlCC,eAAA,qBAEwDC,MAAA,CAAAC,IAAI;wBAC7CD,MAAA,CAAAE,OAAO,2BAHtBC,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
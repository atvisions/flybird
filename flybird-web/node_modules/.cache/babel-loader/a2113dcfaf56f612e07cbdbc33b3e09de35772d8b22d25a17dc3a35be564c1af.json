{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, onMounted } from 'vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'ToolbarPanel',\n  emits: ['template-select', 'element-dragstart'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const templateStore = useTemplateStore();\n    const templates = ref([]);\n    const activeTab = ref('template');\n\n    // 标签页配置\n    const tabs = [{\n      label: '模板',\n      value: 'template',\n      icon: 'mdi-file-document-outline'\n    }, {\n      label: '元素',\n      value: 'element',\n      icon: 'mdi-shape-outline'\n    }, {\n      label: '文本',\n      value: 'text',\n      icon: 'mdi-format-text'\n    }];\n\n    // 元素配置\n    const elements = [{\n      type: 'circle',\n      name: '圆形',\n      icon: 'mdi-circle-outline'\n    }, {\n      type: 'rectangle',\n      name: '矩形',\n      icon: 'mdi-rectangle-outline'\n    }, {\n      type: 'triangle',\n      name: '三角形',\n      icon: 'mdi-triangle-outline'\n    }, {\n      type: 'image',\n      name: '图片',\n      icon: 'mdi-image-outline'\n    }];\n\n    // 文本样式配置\n    const textStyles = [{\n      name: '标题',\n      styles: {\n        fontSize: '24px',\n        fontWeight: 'bold'\n      }\n    }, {\n      name: '副标题',\n      styles: {\n        fontSize: '18px',\n        fontWeight: '500'\n      }\n    }, {\n      name: '正文',\n      styles: {\n        fontSize: '14px'\n      }\n    }, {\n      name: '说明文本',\n      styles: {\n        fontSize: '12px',\n        color: '#666'\n      }\n    }];\n\n    // 获取模板列表\n    const refreshTemplates = async () => {\n      try {\n        const response = await templateStore.getTemplates();\n        templates.value = response;\n      } catch (error) {\n        console.error('获取模板列表失败:', error);\n      }\n    };\n\n    // 处理模板选择\n    const handleTemplateSelect = template => {\n      emit('template-select', template);\n    };\n\n    // 处理元素拖拽开始\n    const handleElementDragStart = (event, element) => {\n      const elementConfig = {\n        width: 100,\n        height: 100,\n        styles: _objectSpread(_objectSpread({}, element.styles), {}, {\n          borderRadius: element.type === 'circle' ? '50%' : '0'\n        })\n      };\n      event.dataTransfer.setData('element-type', element.type);\n      event.dataTransfer.setData('element-config', JSON.stringify(elementConfig));\n      emit('element-dragstart', {\n        type: element.type,\n        config: elementConfig\n      });\n    };\n    const emit = __emit;\n    __expose({\n      refreshTemplates\n    });\n    onMounted(() => {\n      refreshTemplates();\n    });\n    const __returned__ = {\n      templateStore,\n      templates,\n      activeTab,\n      tabs,\n      elements,\n      textStyles,\n      refreshTemplates,\n      handleTemplateSelect,\n      handleElementDragStart,\n      emit,\n      ref,\n      onMounted,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useTemplateStore","templateStore","templates","activeTab","tabs","label","value","icon","elements","type","name","textStyles","styles","fontSize","fontWeight","color","refreshTemplates","response","getTemplates","error","console","handleTemplateSelect","template","emit","handleElementDragStart","event","element","elementConfig","width","height","_objectSpread","borderRadius","dataTransfer","setData","JSON","stringify","config","__emit","__expose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <!-- 左侧垂直选项卡 -->\n    <div class=\"toolbar-tabs\">\n      <div\n        v-for=\"tab in tabs\"\n        :key=\"tab.value\"\n        class=\"toolbar-tab\"\n        :class=\"{ active: activeTab === tab.value }\"\n        @click=\"activeTab = tab.value\"\n      >\n        <v-icon :icon=\"tab.icon\" size=\"24\" class=\"mb-1\"></v-icon>\n        <span class=\"tab-text\">{{ tab.label }}</span>\n      </div>\n    </div>\n\n    <!-- 右侧内容区域 -->\n    <div class=\"toolbar-content\">\n      <!-- 模板列表 -->\n      <div v-if=\"activeTab === 'template'\" class=\"template-list\">\n        <div\n          v-for=\"template in templates\"\n          :key=\"template.id\"\n          class=\"template-item\"\n          @click=\"handleTemplateSelect(template)\"\n        >\n          <div class=\"template-preview\">\n            <img :src=\"template.thumbnail || '/template-default.png'\" alt=\"模板预览\">\n          </div>\n          <div class=\"template-info\">\n            <div class=\"template-name\">{{ template.name }}</div>\n            <div class=\"template-desc\">{{ template.description }}</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 元素列表 -->\n      <div v-else-if=\"activeTab === 'element'\" class=\"element-list\">\n        <div\n          v-for=\"element in elements\"\n          :key=\"element.type\"\n          class=\"element-item\"\n          draggable=\"true\"\n          @dragstart=\"handleElementDragStart($event, element)\"\n        >\n          <v-icon :icon=\"element.icon\" size=\"24\" class=\"element-icon\"></v-icon>\n          <span class=\"element-name\">{{ element.name }}</span>\n        </div>\n      </div>\n\n      <!-- 文本列表 -->\n      <div v-else-if=\"activeTab === 'text'\" class=\"text-list\">\n        <div\n          v-for=\"text in textStyles\"\n          :key=\"text.type\"\n          class=\"text-item\"\n          draggable=\"true\"\n          @dragstart=\"handleElementDragStart($event, { type: 'text', ...text })\"\n        >\n          <div class=\"text-preview\" :style=\"text.styles\">{{ text.name }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst templateStore = useTemplateStore()\nconst templates = ref([])\nconst activeTab = ref('template')\n\n// 标签页配置\nconst tabs = [\n  { label: '模板', value: 'template', icon: 'mdi-file-document-outline' },\n  { label: '元素', value: 'element', icon: 'mdi-shape-outline' },\n  { label: '文本', value: 'text', icon: 'mdi-format-text' }\n]\n\n// 元素配置\nconst elements = [\n  { type: 'circle', name: '圆形', icon: 'mdi-circle-outline' },\n  { type: 'rectangle', name: '矩形', icon: 'mdi-rectangle-outline' },\n  { type: 'triangle', name: '三角形', icon: 'mdi-triangle-outline' },\n  { type: 'image', name: '图片', icon: 'mdi-image-outline' }\n]\n\n// 文本样式配置\nconst textStyles = [\n  { \n    name: '标题', \n    styles: { \n      fontSize: '24px',\n      fontWeight: 'bold'\n    }\n  },\n  { \n    name: '副标题', \n    styles: { \n      fontSize: '18px',\n      fontWeight: '500'\n    }\n  },\n  { \n    name: '正文', \n    styles: { \n      fontSize: '14px'\n    }\n  },\n  { \n    name: '说明文本', \n    styles: { \n      fontSize: '12px',\n      color: '#666'\n    }\n  }\n]\n\n// 获取模板列表\nconst refreshTemplates = async () => {\n  try {\n    const response = await templateStore.getTemplates()\n    templates.value = response\n  } catch (error) {\n    console.error('获取模板列表失败:', error)\n  }\n}\n\n// 处理模板选择\nconst handleTemplateSelect = (template) => {\n  emit('template-select', template)\n}\n\n// 处理元素拖拽开始\nconst handleElementDragStart = (event, element) => {\n  const elementConfig = {\n    width: 100,\n    height: 100,\n    styles: {\n      ...element.styles,\n      borderRadius: element.type === 'circle' ? '50%' : '0'\n    }\n  }\n\n  event.dataTransfer.setData('element-type', element.type)\n  event.dataTransfer.setData('element-config', JSON.stringify(elementConfig))\n  emit('element-dragstart', { type: element.type, config: elementConfig })\n}\n\nconst emit = defineEmits(['template-select', 'element-dragstart'])\n\ndefineExpose({\n  refreshTemplates\n})\n\nonMounted(() => {\n  refreshTemplates()\n})\n</script>\n\n<style scoped>\n.toolbar-panel {\n  width: 320px;\n  height: 100%;\n  display: flex;\n  background: #fff;\n  border-right: 1px solid #e0e0e0;\n}\n\n.toolbar-tabs {\n  width: 80px;\n  height: 100%;\n  background: #f8f9fa;\n  border-right: 1px solid #e0e0e0;\n  display: flex;\n  flex-direction: column;\n  padding: 12px 0;\n}\n\n.toolbar-tab {\n  height: 64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: #606266;\n  transition: all 0.3s;\n  position: relative;\n}\n\n.toolbar-tab.active {\n  color: var(--v-theme-primary);\n  background: #fff;\n}\n\n.toolbar-tab.active::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 3px;\n  background: var(--v-theme-primary);\n}\n\n.tab-text {\n  font-size: 12px;\n  margin-top: 4px;\n}\n\n.toolbar-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.template-item {\n  margin-bottom: 16px;\n  border-radius: 8px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.3s;\n  border: 1px solid #e0e0e0;\n}\n\n.template-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\n.template-preview {\n  height: 160px;\n  overflow: hidden;\n  background: #f5f5f5;\n}\n\n.template-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.template-info {\n  padding: 12px;\n}\n\n.template-name {\n  font-size: 14px;\n  font-weight: 500;\n  color: #333;\n  margin-bottom: 4px;\n}\n\n.template-desc {\n  font-size: 12px;\n  color: #666;\n  line-height: 1.4;\n}\n\n.element-list {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n}\n\n.element-item {\n  height: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.element-item:hover {\n  border-color: var(--v-theme-primary);\n  background: #f8f9fa;\n}\n\n.element-icon {\n  margin-bottom: 8px;\n}\n\n.element-name {\n  font-size: 12px;\n  color: #606266;\n}\n\n.text-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.text-item {\n  padding: 12px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.text-item:hover {\n  border-color: var(--v-theme-primary);\n  background: #f8f9fa;\n}\n\n.text-preview {\n  text-align: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gray-50\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 头部导航 \"), $setup.showHeaderAndFooter ? (_openBlock(), _createBlock($setup[\"HeadView\"], {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 主要内容区域 \"), _createElementVNode(\"main\", null, [_createVNode(_component_router_view)]), _createCommentVNode(\" 底部 \"), $setup.showHeaderAndFooter ? (_openBlock(), _createBlock($setup[\"FootView\"], {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Toast 消息组件 \"), _createVNode($setup[\"ToastMessage\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","showHeaderAndFooter","_createBlock","key","_createElementVNode","_createVNode","_component_router_view"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- 头部导航 -->\n    <HeadView v-if=\"showHeaderAndFooter\" />\n    \n    <!-- 主要内容区域 -->\n    <main>\n      <router-view></router-view>\n    </main>\n    \n    <!-- 底部 -->\n    <FootView v-if=\"showHeaderAndFooter\" />\n    \n    <!-- Toast 消息组件 -->\n    <ToastMessage />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport HeadView from '@/components/HeadView.vue'\nimport FootView from '@/components/FootView.vue'\nimport ToastMessage from '@/components/ToastMessage.vue'\nimport { useAuthStore } from '@/stores/auth'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\n\n// 计算是否显示头部和底部\nconst showHeaderAndFooter = computed(() => {\n  const path = router.currentRoute.value.path\n  return !path.includes('/login') && !path.includes('/register')\n})\n\n// 计算是否显示登录按钮\nconst showLoginButton = computed(() => !authStore.isAuthenticated)\n\nonMounted(() => {\n  // 检查认证状态\n  if (!authStore.isAuthenticated) {\n    const currentPath = router.currentRoute.value.path\n    if (currentPath !== '/login' && currentPath !== '/register') {\n      // 保存当前路径用于登录后重定向\n      const redirect = encodeURIComponent(currentPath)\n      router.push(`/login?redirect=${redirect}`)\n    }\n  }\n})\n</script>\n\n<style>\n.app-wrapper {\n  position: relative;\n  min-height: 100vh;\n}\n\n.bg-image {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 0;\n  pointer-events: none;\n}\n\n/* 可选：添加一个半透明遮罩让内容更易读 */\n.bg-image::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n/* 确保内容在背景之上 */\n.app-wrapper > *:not(.bg-image) {\n  position: relative;\n  z-index: 1;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;;uBAApCC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,UAAa,EACGC,MAAA,CAAAC,mBAAmB,I,cAAnCC,YAAA,CAAuCF,MAAA;IAH3CG,GAAA;EAAA,MAAAJ,mBAAA,gBAKIA,mBAAA,YAAe,EACfK,mBAAA,CAEO,eADLC,YAAA,CAA2BC,sBAAA,E,GAG7BP,mBAAA,QAAW,EACKC,MAAA,CAAAC,mBAAmB,I,cAAnCC,YAAA,CAAuCF,MAAA;IAX3CG,GAAA;EAAA,MAAAJ,mBAAA,gBAaIA,mBAAA,gBAAmB,EACnBM,YAAA,CAAgBL,MAAA,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
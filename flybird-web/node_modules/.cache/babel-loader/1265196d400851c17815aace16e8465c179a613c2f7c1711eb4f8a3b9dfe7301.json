{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VProgressCircular.css\";\n\n// Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useResizeObserver } from \"../../composables/resizeObserver.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVProgressCircularProps = propsFactory(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String],\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0\n  },\n  width: {\n    type: [Number, String],\n    default: 4\n  }\n}, makeComponentProps()), makeSizeProps()), makeTagProps({\n  tag: 'div'\n})), makeThemeProps()), 'VProgressCircular');\nexport const VProgressCircular = genericComponent()({\n  name: 'VProgressCircular',\n  props: makeVProgressCircularProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const MAGIC_RADIUS_CONSTANT = 20;\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;\n    const root = ref();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    const {\n      textColorClasses: underlayColorClasses,\n      textColorStyles: underlayColorStyles\n    } = useTextColor(toRef(props, 'bgColor'));\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const {\n      resizeRef,\n      contentRect\n    } = useResizeObserver();\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))));\n    const width = computed(() => Number(props.width));\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);\n    });\n    const diameter = computed(() => MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2);\n    const strokeWidth = computed(() => width.value / size.value * diameter.value);\n    const strokeDashOffset = computed(() => convertToUnit((100 - normalizedValue.value) / 100 * CIRCUMFERENCE));\n    watchEffect(() => {\n      intersectionRef.value = root.value;\n      resizeRef.value = root.value;\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": root,\n      \"class\": ['v-progress-circular', {\n        'v-progress-circular--indeterminate': !!props.indeterminate,\n        'v-progress-circular--visible': isIntersecting.value,\n        'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink'\n      }, themeClasses.value, sizeClasses.value, textColorClasses.value, props.class],\n      \"style\": [sizeStyles.value, textColorStyles.value, props.style],\n      \"role\": \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value\n    }, {\n      default: () => [_createVNode(\"svg\", {\n        \"style\": {\n          transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`\n        },\n        \"xmlns\": \"http://www.w3.org/2000/svg\",\n        \"viewBox\": `0 0 ${diameter.value} ${diameter.value}`\n      }, [_createVNode(\"circle\", {\n        \"class\": ['v-progress-circular__underlay', underlayColorClasses.value],\n        \"style\": underlayColorStyles.value,\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": 0\n      }, null), _createVNode(\"circle\", {\n        \"class\": \"v-progress-circular__overlay\",\n        \"fill\": \"transparent\",\n        \"cx\": \"50%\",\n        \"cy\": \"50%\",\n        \"r\": MAGIC_RADIUS_CONSTANT,\n        \"stroke-width\": strokeWidth.value,\n        \"stroke-dasharray\": CIRCUMFERENCE,\n        \"stroke-dashoffset\": strokeDashOffset.value\n      }, null)]), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-circular__content\"\n      }, [slots.default({\n        value: normalizedValue.value\n      })])]\n    }));\n    return {};\n  }\n});","map":{"version":3,"names":["useTextColor","makeComponentProps","useIntersectionObserver","useResizeObserver","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","computed","ref","toRef","watchEffect","convertToUnit","genericComponent","propsFactory","useRender","makeVProgressCircularProps","_objectSpread","bgColor","String","color","indeterminate","Boolean","modelValue","type","Number","default","rotate","width","tag","VProgressCircular","name","props","setup","_ref","slots","MAGIC_RADIUS_CONSTANT","CIRCUMFERENCE","Math","PI","root","themeClasses","sizeClasses","sizeStyles","textColorClasses","textColorStyles","underlayColorClasses","underlayColorStyles","intersectionRef","isIntersecting","resizeRef","contentRect","normalizedValue","max","min","parseFloat","size","value","diameter","strokeWidth","strokeDashOffset","_createVNode","class","style","undefined","transform"],"sources":["../../../src/components/VProgressCircular/VProgressCircular.tsx"],"sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, watchEffect } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVProgressCircularProps = propsFactory({\n  bgColor: String,\n  color: String,\n  indeterminate: [Boolean, String] as PropType<boolean | 'disable-shrink'>,\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  rotate: {\n    type: [Number, String],\n    default: 0,\n  },\n  width: {\n    type: [Number, String],\n    default: 4,\n  },\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'div' }),\n  ...makeThemeProps(),\n}, 'VProgressCircular')\n\ntype VProgressCircularSlots = {\n  default: { value: number }\n}\n\nexport const VProgressCircular = genericComponent<VProgressCircularSlots>()({\n  name: 'VProgressCircular',\n\n  props: makeVProgressCircularProps(),\n\n  setup (props, { slots }) {\n    const MAGIC_RADIUS_CONSTANT = 20\n    const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT\n\n    const root = ref<HTMLElement>()\n\n    const { themeClasses } = provideTheme(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n    const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = useTextColor(toRef(props, 'bgColor'))\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n\n    const normalizedValue = computed(() => Math.max(0, Math.min(100, parseFloat(props.modelValue))))\n    const width = computed(() => Number(props.width))\n    const size = computed(() => {\n      // Get size from element if size prop value is small, large etc\n      return sizeStyles.value\n        ? Number(props.size)\n        : contentRect.value\n          ? contentRect.value.width\n          : Math.max(width.value, 32)\n    })\n    const diameter = computed(() => (MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value)) * 2)\n    const strokeWidth = computed(() => width.value / size.value * diameter.value)\n    const strokeDashOffset = computed(() => convertToUnit(((100 - normalizedValue.value) / 100) * CIRCUMFERENCE))\n\n    watchEffect(() => {\n      intersectionRef.value = root.value\n      resizeRef.value = root.value\n    })\n\n    useRender(() => (\n      <props.tag\n        ref={ root }\n        class={[\n          'v-progress-circular',\n          {\n            'v-progress-circular--indeterminate': !!props.indeterminate,\n            'v-progress-circular--visible': isIntersecting.value,\n            'v-progress-circular--disable-shrink': props.indeterminate === 'disable-shrink',\n          },\n          themeClasses.value,\n          sizeClasses.value,\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          sizeStyles.value,\n          textColorStyles.value,\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n      >\n        <svg\n          style={{\n            transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`,\n          }}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox={ `0 0 ${diameter.value} ${diameter.value}` }\n        >\n          <circle\n            class={[\n              'v-progress-circular__underlay',\n              underlayColorClasses.value,\n            ]}\n            style={ underlayColorStyles.value }\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ 0 }\n          />\n\n          <circle\n            class=\"v-progress-circular__overlay\"\n            fill=\"transparent\"\n            cx=\"50%\"\n            cy=\"50%\"\n            r={ MAGIC_RADIUS_CONSTANT }\n            stroke-width={ strokeWidth.value }\n            stroke-dasharray={ CIRCUMFERENCE }\n            stroke-dashoffset={ strokeDashOffset.value }\n          />\n        </svg>\n\n        { slots.default && (\n          <div class=\"v-progress-circular__content\">\n            { slots.default({ value: normalizedValue.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressCircular = InstanceType<typeof VProgressCircular>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
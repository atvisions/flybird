{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { auth } from '@/api/auth';\nimport request from '@/utils/request';\nexport const useAuthStore = defineStore('auth', {\n  state: () => {\n    // 从 localStorage 获取初始状态\n    const token = localStorage.getItem('token');\n    return {\n      isLoggedIn: !!token,\n      // 根据 token 是否存在来设置初始登录状态\n      token: token,\n      refreshToken: localStorage.getItem('refresh_token')\n    };\n  },\n  getters: {\n    // 检查是否已登录\n    isAuthenticated: state => {\n      return state.isLoggedIn && !!state.token;\n    }\n  },\n  actions: {\n    // 设置登录状态\n    setLoginState(token, refreshToken = null) {\n      this.isLoggedIn = true;\n      this.token = token;\n      this.refreshToken = refreshToken;\n\n      // 保存到 localStorage\n      localStorage.setItem('token', token);\n      if (refreshToken) {\n        localStorage.setItem('refresh_token', refreshToken);\n      }\n\n      // 设置请求头\n      request.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    },\n    // 清除登录状态\n    clearLoginState() {\n      this.isLoggedIn = false;\n      this.token = null;\n      this.refreshToken = null;\n\n      // 清除 localStorage\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n\n      // 清除请求头\n      delete request.defaults.headers.common['Authorization'];\n    },\n    // 登出\n    async logout() {\n      try {\n        if (this.token) {\n          await auth.logout();\n        }\n      } catch (error) {\n        console.error('Logout API error:', error);\n      } finally {\n        this.clearLoginState();\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","auth","request","useAuthStore","state","token","localStorage","getItem","isLoggedIn","refreshToken","getters","isAuthenticated","actions","setLoginState","setItem","defaults","headers","common","clearLoginState","removeItem","logout","error","console"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { auth } from '@/api/auth'\nimport request from '@/utils/request'\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => {\n    // 从 localStorage 获取初始状态\n    const token = localStorage.getItem('token')\n    return {\n      isLoggedIn: !!token,  // 根据 token 是否存在来设置初始登录状态\n      token: token,\n      refreshToken: localStorage.getItem('refresh_token')\n    }\n  },\n\n  getters: {\n    // 检查是否已登录\n    isAuthenticated: (state) => {\n      return state.isLoggedIn && !!state.token\n    }\n  },\n\n  actions: {\n    // 设置登录状态\n    setLoginState(token, refreshToken = null) {\n      this.isLoggedIn = true\n      this.token = token\n      this.refreshToken = refreshToken\n      \n      // 保存到 localStorage\n      localStorage.setItem('token', token)\n      if (refreshToken) {\n        localStorage.setItem('refresh_token', refreshToken)\n      }\n      \n      // 设置请求头\n      request.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    },\n\n    // 清除登录状态\n    clearLoginState() {\n      this.isLoggedIn = false\n      this.token = null\n      this.refreshToken = null\n      \n      // 清除 localStorage\n      localStorage.removeItem('token')\n      localStorage.removeItem('refresh_token')\n      \n      // 清除请求头\n      delete request.defaults.headers.common['Authorization']\n    },\n\n    // 登出\n    async logout() {\n      try {\n        if (this.token) {\n          await auth.logout()\n        }\n      } catch (error) {\n        console.error('Logout API error:', error)\n      } finally {\n        this.clearLoginState()\n      }\n    }\n  }\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,IAAI,QAAQ,YAAY;AACjC,OAAOC,OAAO,MAAM,iBAAiB;AAErC,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC,MAAM,EAAE;EAC9CI,KAAK,EAAEA,CAAA,KAAM;IACX;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO;MACLC,UAAU,EAAE,CAAC,CAACH,KAAK;MAAG;MACtBA,KAAK,EAAEA,KAAK;MACZI,YAAY,EAAEH,YAAY,CAACC,OAAO,CAAC,eAAe;IACpD,CAAC;EACH,CAAC;EAEDG,OAAO,EAAE;IACP;IACAC,eAAe,EAAGP,KAAK,IAAK;MAC1B,OAAOA,KAAK,CAACI,UAAU,IAAI,CAAC,CAACJ,KAAK,CAACC,KAAK;IAC1C;EACF,CAAC;EAEDO,OAAO,EAAE;IACP;IACAC,aAAaA,CAACR,KAAK,EAAEI,YAAY,GAAG,IAAI,EAAE;MACxC,IAAI,CAACD,UAAU,GAAG,IAAI;MACtB,IAAI,CAACH,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACI,YAAY,GAAGA,YAAY;;MAEhC;MACAH,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;MACpC,IAAII,YAAY,EAAE;QAChBH,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEL,YAAY,CAAC;MACrD;;MAEA;MACAP,OAAO,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUZ,KAAK,EAAE;IACtE,CAAC;IAED;IACAa,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACV,UAAU,GAAG,KAAK;MACvB,IAAI,CAACH,KAAK,GAAG,IAAI;MACjB,IAAI,CAACI,YAAY,GAAG,IAAI;;MAExB;MACAH,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;MAChCb,YAAY,CAACa,UAAU,CAAC,eAAe,CAAC;;MAExC;MACA,OAAOjB,OAAO,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACzD,CAAC;IAED;IACA,MAAMG,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,IAAI,IAAI,CAACf,KAAK,EAAE;UACd,MAAMJ,IAAI,CAACmB,MAAM,CAAC,CAAC;QACrB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C,CAAC,SAAS;QACR,IAAI,CAACH,eAAe,CAAC,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
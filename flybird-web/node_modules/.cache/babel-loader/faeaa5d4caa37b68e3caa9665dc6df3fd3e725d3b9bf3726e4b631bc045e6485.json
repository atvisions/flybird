{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, openBlock as _openBlock, createBlock as _createBlock, mergeProps as _mergeProps, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  key: 1,\n  class: \"component-error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"component-renderer\", {\n      preview: $props.isPreview\n    }])\n  }, [$setup.renderedComponent ? (_openBlock(), _createBlock(_resolveDynamicComponent($setup.renderedComponent), _normalizeProps(_mergeProps({\n    key: 0\n  }, $setup.componentProps)), null, 16 /* FULL_PROPS */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" 组件加载失败 \"))], 2 /* CLASS */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_normalizeClass","preview","$props","isPreview","$setup","renderedComponent","_createBlock","_resolveDynamicComponent","_normalizeProps","_mergeProps","componentProps","_hoisted_1"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/widgets/ComponentRenderer.vue"],"sourcesContent":["<template>\n  <div \n    class=\"component-renderer\"\n    :class=\"{ preview: isPreview }\"\n  >\n    <component\n      :is=\"renderedComponent\"\n      v-if=\"renderedComponent\"\n      v-bind=\"componentProps\"\n    />\n    <div v-else class=\"component-error\">\n      组件加载失败\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineAsyncComponent } from 'vue'\nimport { useComponentStore } from '../../store/component'\n\nconst props = defineProps({\n  component: {\n    type: Object,\n    required: true\n  },\n  data: {\n    type: Object,\n    default: () => ({})\n  },\n  styles: {\n    type: Object,\n    default: () => ({})\n  },\n  isPreview: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst componentStore = useComponentStore()\n\n// 获取组件模板\nconst template = computed(() => {\n  return componentStore.getComponentTemplate(props.component.type)\n})\n\n// 编译模板\nconst compileTemplate = (template, data) => {\n  try {\n    // 简单的模板变量替换\n    return template.replace(/\\{\\{\\s*([^}]+)\\s*\\}\\}/g, (_, key) => {\n      return data[key.trim()] || ''\n    })\n  } catch (error) {\n    console.error('Template compilation error:', error)\n    return ''\n  }\n}\n\n// 渲染的组件\nconst renderedComponent = computed(() => {\n  if (!template.value) return null\n  \n  // 创建组件定义\n  const componentDef = {\n    template: compileTemplate(template.value, props.data),\n    props: ['data', 'styles'],\n    setup() {\n      return {\n        componentData: props.data,\n        componentStyles: props.styles\n      }\n    }\n  }\n  \n  // 返回异步组件\n  return defineAsyncComponent({\n    loader: () => Promise.resolve(componentDef),\n    // 加载失败时显示错误组件\n    error: () => ({\n      template: '<div class=\"error\">组件加载失败</div>'\n    }),\n    // 加载中显示加载组件\n    loading: () => ({\n      template: '<div class=\"loading\">加载中...</div>'\n    }),\n    delay: 200,\n    timeout: 3000\n  })\n})\n\n// 组件属性\nconst componentProps = computed(() => ({\n  data: props.data,\n  styles: props.styles\n}))\n</script>\n\n<style lang=\"scss\" scoped>\n.component-renderer {\n  @apply w-full h-full relative;\n  \n  &.preview {\n    @apply pointer-events-none;\n  }\n  \n  .component-error {\n    @apply w-full h-full flex items-center justify-center text-red-500;\n  }\n  \n  .loading {\n    @apply w-full h-full flex items-center justify-center text-gray-500;\n  }\n}\n</style> "],"mappings":";;EAAAA,GAAA;EAUgBC,KAAK,EAAC;;;uBATpBC,mBAAA,CAYM;IAXJD,KAAK,EAFTE,eAAA,EAEU,oBAAoB;MAAAC,OAAA,EACPC,MAAA,CAAAC;IAAS;MAIpBC,MAAA,CAAAC,iBAAiB,I,cAFzBC,YAAA,CAIEC,wBATN,CAMWH,MAAA,CAAAC,iBAAiB,GAN5BG,eAAA,CAAAC,WAAA;IAAAZ,GAAA;EAAA,GAQcO,MAAA,CAAAM,cAAc,mC,cAExBX,mBAAA,CAEM,OAFNY,UAEM,EAF8B,UAEpC,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
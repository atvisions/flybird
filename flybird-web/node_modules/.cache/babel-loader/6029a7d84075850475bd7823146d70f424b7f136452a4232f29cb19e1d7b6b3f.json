{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nimport { STORAGE_KEYS } from '@/utils/storage';\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || 'http://192.168.3.16:8000',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('Request config:', {\n    url: config.url,\n    method: config.method,\n    data: config.data,\n    headers: config.headers\n  });\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, async error => {\n  console.error('Response error:', error);\n  if (error.response?.status === 401) {\n    // 清除本地存储的认证信息\n    localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN);\n\n    // 如果不是登录页面，则重定向到登录页\n    if (!window.location.pathname.includes('/login')) {\n      router.push('/login');\n    }\n  }\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","STORAGE_KEYS","request","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","headers","interceptors","use","config","token","localStorage","getItem","console","log","url","method","data","error","Promise","reject","response","status","removeItem","TOKEN","REFRESH_TOKEN","window","location","pathname","includes","push"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport router from '@/router'\nimport { STORAGE_KEYS } from '@/utils/storage'\n\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL || 'http://192.168.3.16:8000',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    console.log('Request config:', {\n      url: config.url,\n      method: config.method,\n      data: config.data,\n      headers: config.headers\n    })\n    return config\n  },\n  error => {\n    console.error('Request error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nrequest.interceptors.response.use(\n  response => {\n    console.log('Response:', response)\n    return response\n  },\n  async error => {\n    console.error('Response error:', error)\n    if (error.response?.status === 401) {\n      // 清除本地存储的认证信息\n      localStorage.removeItem(STORAGE_KEYS.TOKEN)\n      localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN)\n      \n      // 如果不是登录页面，则重定向到登录页\n      if (!window.location.pathname.includes('/login')) {\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default request"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,0BAA0B;EACvEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,OAAO,CAACQ,YAAY,CAACR,OAAO,CAACS,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACH,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUI,KAAK,EAAE;EACrD;EACAG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;IAC7BC,GAAG,EAAEN,MAAM,CAACM,GAAG;IACfC,MAAM,EAAEP,MAAM,CAACO,MAAM;IACrBC,IAAI,EAAER,MAAM,CAACQ,IAAI;IACjBX,OAAO,EAAEG,MAAM,CAACH;EAClB,CAAC,CAAC;EACF,OAAOG,MAAM;AACf,CAAC,EACDS,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,OAAO,CAACQ,YAAY,CAACc,QAAQ,CAACb,GAAG,CAC/Ba,QAAQ,IAAI;EACVR,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEO,QAAQ,CAAC;EAClC,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAMH,KAAK,IAAI;EACbL,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,IAAIA,KAAK,CAACG,QAAQ,EAAEC,MAAM,KAAK,GAAG,EAAE;IAClC;IACAX,YAAY,CAACY,UAAU,CAACzB,YAAY,CAAC0B,KAAK,CAAC;IAC3Cb,YAAY,CAACY,UAAU,CAACzB,YAAY,CAAC2B,aAAa,CAAC;;IAEnD;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChDhC,MAAM,CAACiC,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EACA,OAAOX,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAenB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted, watch } from 'vue';\nimport draggable from 'vuedraggable';\nimport axios from 'axios';\nexport default {\n  __name: 'ToolbarPanel',\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 布局组件列表\n    const layoutComponents = ref([]);\n    const isLoading = ref(false);\n\n    // 克隆布局组件\n    const cloneLayout = layout => {\n      return _objectSpread(_objectSpread({}, layout), {}, {\n        id: `${layout.id}_${Date.now()}` // 确保克隆的组件有唯一ID\n      });\n    };\n\n    // 获取布局组件\n    const fetchLayoutComponents = async () => {\n      isLoading.value = true;\n      try {\n        // 先获取布局分类\n        const categoryResponse = await axios.get('/api/v1/resume/component-categories/main_categories/');\n        const layoutCategory = categoryResponse.data.find(category => category.code === 'layout');\n        if (layoutCategory) {\n          // 获取布局分类下的组件\n          const componentsResponse = await axios.get(`/api/v1/resume/component-categories/${layoutCategory.id}/components/`);\n          layoutComponents.value = componentsResponse.data.map(component => _objectSpread(_objectSpread({}, component), {}, {\n            config: {\n              layout: component.type,\n              columns: component.type === 'single' ? 1 : 2,\n              columnWidth: component.type === 'single' ? ['100%'] : ['50%', '50%']\n            }\n          }));\n        }\n      } catch (error) {\n        console.error('获取布局组件失败:', error);\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // 监听 modelValue 变化，当切换到布局面板时加载数据\n    watch(() => props.modelValue, newValue => {\n      if (newValue === 'layout' && layoutComponents.value.length === 0) {\n        fetchLayoutComponents();\n      }\n    });\n    onMounted(() => {\n      if (props.modelValue === 'layout') {\n        fetchLayoutComponents();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      layoutComponents,\n      isLoading,\n      cloneLayout,\n      fetchLayoutComponents,\n      ref,\n      computed,\n      onMounted,\n      watch,\n      get draggable() {\n        return draggable;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","draggable","axios","props","__props","emit","__emit","layoutComponents","isLoading","cloneLayout","layout","_objectSpread","id","Date","now","fetchLayoutComponents","value","categoryResponse","get","layoutCategory","data","find","category","code","componentsResponse","map","component","config","type","columns","columnWidth","error","console","modelValue","newValue","length"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <!-- 内容面板 -->\n    <div class=\"panel-content\">\n      <!-- 布局面板 -->\n      <div v-show=\"modelValue === 'layout'\" class=\"panel-section\">\n        <div v-if=\"isLoading\" class=\"loading-indicator\">\n          <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n        </div>\n        <draggable \n          v-else\n          :list=\"layoutComponents\"\n          :group=\"{ name: 'layouts', pull: 'clone', put: false }\"\n          :sort=\"false\"\n          :clone=\"cloneLayout\"\n          item-key=\"id\"\n          class=\"component-blocks\">\n          <template #item=\"{ element }\">\n            <div class=\"component-block\">\n              <v-icon size=\"18\">{{ element.icon }}</v-icon>\n              <div class=\"block-content\">\n                <div class=\"block-title\">{{ element.name }}</div>\n              </div>\n            </div>\n          </template>\n        </draggable>\n      </div>\n\n      <!-- 组件面板 -->\n      <div v-show=\"modelValue === 'components'\" class=\"panel-section\">\n        组件列表\n      </div>\n\n      <!-- 档案面板 -->\n      <div v-show=\"modelValue === 'files'\" class=\"panel-section\">\n        档案列表\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport draggable from 'vuedraggable'\nimport axios from 'axios'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\n// 布局组件列表\nconst layoutComponents = ref([])\nconst isLoading = ref(false)\n\n// 克隆布局组件\nconst cloneLayout = (layout) => {\n  return {\n    ...layout,\n    id: `${layout.id}_${Date.now()}`  // 确保克隆的组件有唯一ID\n  }\n}\n\n// 获取布局组件\nconst fetchLayoutComponents = async () => {\n  isLoading.value = true\n  try {\n    // 先获取布局分类\n    const categoryResponse = await axios.get('/api/v1/resume/component-categories/main_categories/')\n    const layoutCategory = categoryResponse.data.find(category => category.code === 'layout')\n    \n    if (layoutCategory) {\n      // 获取布局分类下的组件\n      const componentsResponse = await axios.get(`/api/v1/resume/component-categories/${layoutCategory.id}/components/`)\n      layoutComponents.value = componentsResponse.data.map(component => ({\n        ...component,\n        config: {\n          layout: component.type,\n          columns: component.type === 'single' ? 1 : 2,\n          columnWidth: component.type === 'single' ? ['100%'] : ['50%', '50%']\n        }\n      }))\n    }\n  } catch (error) {\n    console.error('获取布局组件失败:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// 监听 modelValue 变化，当切换到布局面板时加载数据\nwatch(() => props.modelValue, (newValue) => {\n  if (newValue === 'layout' && layoutComponents.value.length === 0) {\n    fetchLayoutComponents()\n  }\n})\n\nonMounted(() => {\n  if (props.modelValue === 'layout') {\n    fetchLayoutComponents()\n  }\n})\n</script>\n\n<style scoped>\n.toolbar-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 4px;\n}\n\n.panel-content {\n  flex: 1;\n  min-height: 0;\n  overflow-y: auto;\n  padding: 8px;\n}\n\n.panel-section {\n  height: 100%;\n}\n\n.loading-indicator {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n}\n\n.component-blocks {\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 6px;\n  padding: 0 6px;\n}\n\n.component-block {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  background-color: #f5f7fa;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  cursor: move;\n  user-select: none;\n}\n\n.component-block:hover {\n  background-color: #ecf5ff;\n  border-color: #409eff;\n}\n\n.block-content {\n  flex: 1;\n  min-width: 0;\n}\n\n.block-title {\n  font-size: 14px;\n  font-weight: 500;\n  color: #606266;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n:deep(.v-icon) {\n  color: #409eff;\n  font-size: 20px !important;\n}\n\n.sortable-ghost {\n  opacity: 0.5;\n  background: #ecf5ff;\n  border: 2px dashed #409eff;\n}\n\n.sortable-chosen {\n  background: #ecf5ff;\n}\n</style> "],"mappings":";;;;AA0CA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAI;AACpD,OAAOC,SAAS,MAAM,cAAa;AACnC,OAAOC,KAAK,MAAM,OAAM;;;;;;;;;;;;;;;IAExB,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,gBAAgB,GAAGV,GAAG,CAAC,EAAE;IAC/B,MAAMW,SAAS,GAAGX,GAAG,CAAC,KAAK;;IAE3B;IACA,MAAMY,WAAW,GAAIC,MAAM,IAAK;MAC9B,OAAAC,aAAA,CAAAA,aAAA,KACKD,MAAM;QACTE,EAAE,EAAE,GAAGF,MAAM,CAACE,EAAE,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAE;MAAA;IAEtC;;IAEA;IACA,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxCP,SAAS,CAACQ,KAAK,GAAG,IAAG;MACrB,IAAI;QACF;QACA,MAAMC,gBAAgB,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,sDAAsD;QAC/F,MAAMC,cAAc,GAAGF,gBAAgB,CAACG,IAAI,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAK,QAAQ;QAExF,IAAIJ,cAAc,EAAE;UAClB;UACA,MAAMK,kBAAkB,GAAG,MAAMtB,KAAK,CAACgB,GAAG,CAAC,uCAAuCC,cAAc,CAACP,EAAE,cAAc;UACjHL,gBAAgB,CAACS,KAAK,GAAGQ,kBAAkB,CAACJ,IAAI,CAACK,GAAG,CAACC,SAAS,IAAAf,aAAA,CAAAA,aAAA,KACzDe,SAAS;YACZC,MAAM,EAAE;cACNjB,MAAM,EAAEgB,SAAS,CAACE,IAAI;cACtBC,OAAO,EAAEH,SAAS,CAACE,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAG,CAAC;cAC5CE,WAAW,EAAEJ,SAAS,CAACE,IAAI,KAAK,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK;YACrE;UAAA,EACA;QACJ;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC,CAAC,SAAS;QACRvB,SAAS,CAACQ,KAAK,GAAG,KAAI;MACxB;IACF;;IAEA;IACAhB,KAAK,CAAC,MAAMG,KAAK,CAAC8B,UAAU,EAAGC,QAAQ,IAAK;MAC1C,IAAIA,QAAQ,KAAK,QAAQ,IAAI3B,gBAAgB,CAACS,KAAK,CAACmB,MAAM,KAAK,CAAC,EAAE;QAChEpB,qBAAqB,CAAC;MACxB;IACF,CAAC;IAEDhB,SAAS,CAAC,MAAM;MACd,IAAII,KAAK,CAAC8B,UAAU,KAAK,QAAQ,EAAE;QACjClB,qBAAqB,CAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
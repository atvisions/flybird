{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"max-w-4xl mx-auto\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n    class: \"space-y-6\"\n  }, [_createCommentVNode(\" 账户安全 \"), _createCommentVNode(\" ... 其他模板内容 ... \")], -1 /* HOISTED */)]));\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_createCommentVNode"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/AccountSettings.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <div class=\"space-y-6\">\n      <!-- 账户安全 -->\n      <!-- ... 其他模板内容 ... -->\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { showToast } from '@/components/ToastMessage'\nimport { useDeleteAccount } from '@/composables/useDeleteAccount'\nimport { usePhone } from '@/composables/usePhone'\nimport { useEmail } from '@/composables/useEmail'\nimport { useChangePassword } from '@/composables/useChangePassword'\nimport { ElMessageBox } from 'element-plus'\nimport { account } from '@/api/account'\nimport { useAuthStore } from '@/stores/auth'\nimport { useUserStore } from '@/stores/user'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\nconst userStore = useUserStore()\n\n// 修改手机号表单验证\nconst isPhoneFormValid = computed(() => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  const isValidPhone = phoneRegex.test(phoneManager.state.value)\n  const isValidCode = phoneManager.state.code?.length === 6\n\n  // 添加调试日志\n  console.log('Phone validation:', {\n    phone: phoneManager.state.value,\n    code: phoneManager.state.code,\n    isValidPhone,\n    isValidCode,\n    loading: phoneManager.state.loading,\n    finalResult: isValidPhone && isValidCode\n  })\n\n  // 修改验证逻辑，参考邮箱验证的写法\n  const isValid = phoneManager.state.value && \n         phoneManager.state.code && \n         isValidPhone && \n         isValidCode\n\n  return isValid  // 移除 loading 状态检查\n})\n\n// ... 其他脚本内容 ...\n\n</script>\n\n<style scoped>\n/* ... 样式内容 ... */\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;uBAA9BC,mBAAA,CAKM,OALNC,UAKM,EAAAC,MAAA,QAAAA,MAAA,OAJJC,mBAAA,CAGM;IAHDJ,KAAK,EAAC;EAAW,IACpBK,mBAAA,UAAa,EACbA,mBAAA,oBAAuB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
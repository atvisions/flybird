{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"toolbar-panel\"\n};\nconst _hoisted_2 = {\n  class: \"components-grid\"\n};\nconst _hoisted_3 = [\"onDragstart\"];\nconst _hoisted_4 = {\n  class: \"component-name\"\n};\nconst _hoisted_5 = {\n  class: \"components-grid\"\n};\nconst _hoisted_6 = [\"onDragstart\"];\nconst _hoisted_7 = {\n  class: \"component-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_expansion_panels, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 布局组件面板 \"), _createVNode(_component_v_expansion_panel, null, {\n      default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n        default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"布局组件\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_expansion_panel_text, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.layoutComponents, component => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: component.id,\n            class: \"component-item\",\n            draggable: \"true\",\n            onDragstart: $event => $setup.handleDragStart($event, component)\n          }, [_createVNode(_component_v_icon, {\n            icon: component.icon,\n            size: \"24\",\n            class: \"mb-1\"\n          }, null, 8 /* PROPS */, [\"icon\"]), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(component.name), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_3);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 设计元素面板 \"), _createVNode(_component_v_expansion_panel, null, {\n      default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"设计元素\")])),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_expansion_panel_text, null, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.designElements, element => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: element.id,\n            class: \"component-item\",\n            draggable: \"true\",\n            onDragstart: $event => $setup.handleElementDragStart($event, element)\n          }, [_createVNode(_component_v_icon, {\n            icon: element.icon,\n            size: \"24\",\n            class: \"mb-1\"\n          }, null, 8 /* PROPS */, [\"icon\"]), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(element.name), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_expansion_panels","default","_withCtx","_createCommentVNode","_component_v_expansion_panel","_component_v_expansion_panel_title","_cache","_createTextVNode","_","_component_v_expansion_panel_text","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","layoutComponents","component","key","id","draggable","onDragstart","$event","handleDragStart","_component_v_icon","icon","size","_hoisted_4","_toDisplayString","name","_hoisted_3","_hoisted_5","designElements","element","handleElementDragStart","_hoisted_7","_hoisted_6"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <v-expansion-panels>\n      <!-- 布局组件面板 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>布局组件</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"components-grid\">\n            <div\n              v-for=\"component in layoutComponents\"\n              :key=\"component.id\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\"\n            >\n              <v-icon :icon=\"component.icon\" size=\"24\" class=\"mb-1\"></v-icon>\n              <span class=\"component-name\">{{ component.name }}</span>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n\n      <!-- 设计元素面板 -->\n      <v-expansion-panel>\n        <v-expansion-panel-title>设计元素</v-expansion-panel-title>\n        <v-expansion-panel-text>\n          <div class=\"components-grid\">\n            <div\n              v-for=\"element in designElements\"\n              :key=\"element.id\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleElementDragStart($event, element)\"\n            >\n              <v-icon :icon=\"element.icon\" size=\"24\" class=\"mb-1\"></v-icon>\n              <span class=\"component-name\">{{ element.name }}</span>\n            </div>\n          </div>\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\n// 布局组件列表\nconst layoutComponents = ref([\n  {\n    id: 1,\n    type: 'layout',\n    name: '单栏布局',\n    icon: 'mdi-view-stream',\n    config: {\n      type: 'single',\n      columns: 1\n    }\n  },\n  // ... 其他布局组件\n])\n\n// 设计元素列表\nconst designElements = ref([\n  {\n    id: 'image',\n    type: 'element',\n    elementType: 'image',\n    name: '图片',\n    icon: 'mdi-image',\n    config: {\n      width: 100,\n      height: 100,\n      placeholder: '/placeholder-image.png'\n    }\n  },\n  {\n    id: 'text',\n    type: 'element',\n    elementType: 'text',\n    name: '文本',\n    icon: 'mdi-text',\n    config: {\n      content: '点击编辑文本'\n    }\n  },\n  {\n    id: 'shape',\n    type: 'element',\n    elementType: 'shape',\n    name: '形状',\n    icon: 'mdi-shape',\n    config: {\n      type: 'rectangle'\n    }\n  }\n])\n\n// 处理布局组件拖拽开始\nconst handleDragStart = (event, component) => {\n  event.dataTransfer.setData('component', JSON.stringify(component))\n  event.dataTransfer.effectAllowed = 'move'\n}\n\n// 处理设计元素拖拽开始\nconst handleElementDragStart = (event, element) => {\n  event.dataTransfer.setData('element-type', element.elementType)\n  event.dataTransfer.setData('element-config', JSON.stringify(element.config))\n  event.dataTransfer.effectAllowed = 'copy'\n}\n</script>\n\n<style scoped>\n.toolbar-panel {\n  width: 280px;\n  height: 100%;\n  border-right: 1px solid #e0e0e0;\n  background: #ffffff;\n  overflow-y: auto;\n}\n\n.components-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  padding: 12px;\n}\n\n.component-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  cursor: move;\n  transition: all 0.3s;\n}\n\n.component-item:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.component-name {\n  font-size: 12px;\n  color: #606266;\n  margin-top: 4px;\n  text-align: center;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAMbA,KAAK,EAAC;AAAiB;mBAPtC;;EAgBoBA,KAAK,EAAC;AAAgB;;EAU3BA,KAAK,EAAC;AAAiB;mBA1BtC;;EAmCoBA,KAAK,EAAC;AAAgB;;;;;;;uBAlCxCC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJC,YAAA,CAsCqBC,6BAAA;IAxCzBC,OAAA,EAAAC,QAAA,CAGM,MAAe,CAAfC,mBAAA,YAAe,EACfJ,YAAA,CAgBoBK,4BAAA;MApB1BH,OAAA,EAAAC,QAAA,CAKQ,MAAuD,CAAvDH,YAAA,CAAuDM,kCAAA;QAL/DJ,OAAA,EAAAC,QAAA,CAKiC,MAAII,MAAA,QAAAA,MAAA,OALrCC,gBAAA,CAKiC,MAAI,E;QALrCC,CAAA;UAMQT,YAAA,CAayBU,iCAAA;QAnBjCR,OAAA,EAAAC,QAAA,CAOU,MAWM,CAXNQ,mBAAA,CAWM,OAXNC,UAWM,I,kBAVJd,mBAAA,CASMe,SAAA,QAjBlBC,WAAA,CASkCC,MAAA,CAAAC,gBAAgB,EAA7BC,SAAS;+BADlBnB,mBAAA,CASM;YAPHoB,GAAG,EAAED,SAAS,CAACE,EAAE;YAClBtB,KAAK,EAAC,gBAAgB;YACtBuB,SAAS,EAAC,MAAM;YACfC,WAAS,EAAAC,MAAA,IAAEP,MAAA,CAAAQ,eAAe,CAACD,MAAM,EAAEL,SAAS;cAE7CjB,YAAA,CAA+DwB,iBAAA;YAAtDC,IAAI,EAAER,SAAS,CAACQ,IAAI;YAAEC,IAAI,EAAC,IAAI;YAAC7B,KAAK,EAAC;6CAC/Cc,mBAAA,CAAwD,QAAxDgB,UAAwD,EAAAC,gBAAA,CAAxBX,SAAS,CAACY,IAAI,iB,kCAhB5DC,UAAA;;QAAArB,CAAA;;MAAAA,CAAA;QAsBML,mBAAA,YAAe,EACfJ,YAAA,CAgBoBK,4BAAA;MAvC1BH,OAAA,EAAAC,QAAA,CAwBQ,MAAuD,CAAvDH,YAAA,CAAuDM,kCAAA;QAxB/DJ,OAAA,EAAAC,QAAA,CAwBiC,MAAII,MAAA,QAAAA,MAAA,OAxBrCC,gBAAA,CAwBiC,MAAI,E;QAxBrCC,CAAA;UAyBQT,YAAA,CAayBU,iCAAA;QAtCjCR,OAAA,EAAAC,QAAA,CA0BU,MAWM,CAXNQ,mBAAA,CAWM,OAXNoB,UAWM,I,kBAVJjC,mBAAA,CASMe,SAAA,QApClBC,WAAA,CA4BgCC,MAAA,CAAAiB,cAAc,EAAzBC,OAAO;+BADhBnC,mBAAA,CASM;YAPHoB,GAAG,EAAEe,OAAO,CAACd,EAAE;YAChBtB,KAAK,EAAC,gBAAgB;YACtBuB,SAAS,EAAC,MAAM;YACfC,WAAS,EAAAC,MAAA,IAAEP,MAAA,CAAAmB,sBAAsB,CAACZ,MAAM,EAAEW,OAAO;cAElDjC,YAAA,CAA6DwB,iBAAA;YAApDC,IAAI,EAAEQ,OAAO,CAACR,IAAI;YAAEC,IAAI,EAAC,IAAI;YAAC7B,KAAK,EAAC;6CAC7Cc,mBAAA,CAAsD,QAAtDwB,UAAsD,EAAAP,gBAAA,CAAtBK,OAAO,CAACJ,IAAI,iB,kCAnC1DO,UAAA;;QAAA3B,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
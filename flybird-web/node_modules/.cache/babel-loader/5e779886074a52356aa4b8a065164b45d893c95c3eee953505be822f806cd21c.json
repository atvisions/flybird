{"ast":null,"code":"import { ref, onMounted, computed, watch, nextTick, onUnmounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useAccountStore } from '@/stores/account';\nimport config from '@/config';\nimport defaultAvatarImage from '@/assets/images/default-avatar.png';\nimport defaultBackground from '@/assets/images/default-background.jpg';\nimport { showToast } from '@/components/ToastMessage';\nimport { CameraIcon,\n// 用于头像和背景上传\nPhotoIcon,\n// 作品集图标\nPencilSquareIcon,\n// 编辑图标\nTrophyIcon,\n// 会员图标\nSparklesIcon,\n// 升级会员图标\nPencilIcon,\n// 编辑昵称图标\nChevronRightIcon,\n// 箭头图标\nPlusIcon,\n// 添加图标\nTrashIcon,\n// 删除图标\nChatBubbleLeftRightIcon,\n// 话题图标\nQuestionMarkCircleIcon,\n// 问答图标\nInboxArrowDownIcon,\n// 草稿箱图标\nEyeIcon,\n// 查看图标\nBookmarkIcon,\n// 收藏图标\nArrowTopRightOnSquareIcon,\n// 外链图标\nGlobeAltIcon,\n// 个人主页图标\nXMarkIcon // 关闭图标\n} from '@heroicons/vue/24/outline';\nimport { user } from '@/api/user';\nimport { eventBus } from '@/utils/eventBus';\nexport default {\n  __name: 'UserHome',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const accountStore = useAccountStore();\n    const showEditModal = ref(false);\n    const editForm = ref({\n      username: '',\n      position: '',\n      bio: '',\n      avatar: null\n    });\n    const avatarInput = ref(null);\n    const usernameError = ref('');\n    const creationSection = ref(null);\n\n    // 使用 getters 获取用户信息\n    const userInfo = computed(() => ({\n      uid: accountStore.uid,\n      username: accountStore.username,\n      avatar: accountStore.avatar,\n      background: accountStore.background,\n      bio: accountStore.bio || null,\n      position: accountStore.position || null\n    }));\n\n    // 添加背景图 URL 的计算属性\n    const backgroundUrl = computed(() => {\n      const bgImage = userInfo.value?.background;\n      return bgImage ? formatImageUrl(bgImage) : defaultBackground;\n    });\n\n    // 格式化图片 URL\n    const formatImageUrl = url => {\n      if (!url || url === 'null') return defaultAvatarImage;\n      return url.startsWith('http') ? url : `${process.env.VUE_APP_API_BASE_URL}${url}`;\n    };\n\n    // 计算头像 URL\n    const userAvatar = computed(() => {\n      const avatarUrl = userInfo.value?.avatar;\n      if (!avatarUrl) return defaultAvatarImage;\n      return avatarUrl.startsWith('http') ? avatarUrl : `${import.meta.env.VITE_API_URL}${avatarUrl}`;\n    });\n\n    // 编辑头像 URL 的计算属性\n    const editAvatarUrl = computed(() => {\n      const avatarUrl = editForm.value.avatar || userInfo.value?.avatar;\n      if (!avatarUrl) return defaultAvatarImage;\n      return avatarUrl.startsWith('http') ? avatarUrl : `${import.meta.env.VITE_API_URL}${avatarUrl}`;\n    });\n\n    // 获取用户信息\n    const fetchUserInfo = async () => {\n      try {\n        // 只在 store 中没有数据时获取\n        if (!accountStore.userInfo) {\n          await accountStore.fetchUserInfo();\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    };\n\n    // 滚动到创作区域\n    const scrollToCreation = () => {\n      if (creationSection.value) {\n        const offset = 100; // 可以根据需要调整这个值\n        const elementPosition = creationSection.value.getBoundingClientRect().top;\n        const offsetPosition = elementPosition + window.pageYOffset - offset;\n        window.scrollTo({\n          top: offsetPosition,\n          behavior: 'smooth'\n        });\n      }\n    };\n\n    // 监听路由参数变化\n    watch(() => route.query.currentTab, newTab => {\n      if (newTab === 'articles' || newTab === 'drafts') {\n        // 等待 DOM 更新后滚动\n        nextTick(() => {\n          scrollToCreation();\n        });\n      }\n    }, {\n      immediate: true\n    });\n\n    // 组件挂载时获取数据\n    onMounted(async () => {\n      // 只在 store 中没有数据时获取\n      if (!accountStore.userInfo) {\n        await fetchUserInfo();\n      }\n\n      // 如果当前是文章或草稿标签，滚动到创作区域\n      if (route.query.currentTab === 'articles' || route.query.currentTab === 'drafts') {\n        scrollToCreation();\n      }\n    });\n\n    // 头像上传相关\n    const showAvatarUpload = ref(false);\n    const loading = ref(false);\n\n    // 处理头像错误\n    const handleImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n\n    // 处理背景图错误\n    const handleBackgroundError = e => {\n      e.target.src = defaultBackground;\n    };\n\n    // 处理个人资料更新\n    const handleProfileUpdate = async () => {\n      if (!validateUsername()) return;\n      try {\n        loading.value = true;\n        // 准备更新数据\n        const updateData = {\n          username: editForm.value.username.trim(),\n          position: editForm.value.position?.trim() || '',\n          bio: editForm.value.bio?.trim() || '',\n          phone: accountStore.phone,\n          email: accountStore.email\n        };\n        console.log('Submitting update:', updateData);\n        const response = await accountStore.updateUserInfo(updateData);\n\n        // 使用后端返回的数据更新表单\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          editForm.value = {\n            username: userData.username,\n            position: userData.position || '',\n            bio: userData.bio || '',\n            avatar: userData.avatar\n          };\n        }\n        showToast('更新成功', 'success');\n        closeEditModal();\n      } catch (error) {\n        console.error('更新失败:', error);\n        showToast(error.message || '更新失败，请稍后重试', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 实时验证用户名\n    const validateUsername = () => {\n      const value = editForm.value.username;\n      if (!value) {\n        usernameError.value = '用户名不能为空';\n      } else if (value.length < 4 || value.length > 11) {\n        usernameError.value = '用户名长度必须在4-11个字符之间';\n      } else if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9]+$/.test(value)) {\n        usernameError.value = '用户名只能包含中文、英文字母和数字';\n      } else {\n        usernameError.value = '';\n      }\n      return !usernameError.value;\n    };\n\n    // 打开编辑弹窗时初始化表单数据\n    const openEditModal = () => {\n      editForm.value = {\n        username: userInfo.value.username || '',\n        position: userInfo.value.position || '',\n        bio: userInfo.value.bio || '',\n        avatar: userInfo.value.avatar || null\n      };\n      showEditModal.value = true;\n    };\n\n    // 关闭编辑弹窗\n    const closeEditModal = () => {\n      showEditModal.value = false;\n      editForm.value = {\n        username: '',\n        position: '',\n        bio: '',\n        avatar: null\n      };\n      usernameError.value = '';\n    };\n    const handleAvatarChange = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n      const maxSize = 2 * 1024 * 1024; // 2MB\n      if (file.size > maxSize) {\n        showToast('图片大小不能超过2MB', 'error');\n        return;\n      }\n      try {\n        loading.value = true;\n\n        // 直接使用 user API 上传头像\n        const response = await user.updateAvatar(file);\n        if (response.data.code === 200) {\n          // 更新 accountStore 中的头像\n          await accountStore.fetchUserInfo();\n          // 更新编辑表单中的头像\n          editForm.value.avatar = response.data.data.avatar;\n          showToast('头像上传成功', 'success');\n\n          // 触发全局事件，通知其他组件（如 HeadView）更新头像\n          eventBus.emit('user-avatar-updated');\n        }\n      } catch (error) {\n        console.error('头像上传失败:', error);\n        showToast(error.message || '头像上传失败，请稍后重试', 'error');\n      } finally {\n        loading.value = false;\n        // 清空文件选择器\n        event.target.value = '';\n      }\n    };\n\n    // 格式化存储空间大小\n    const formatStorage = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n    };\n\n    // 存储空间使用数据\n    const storageUsed = ref(0); // 字节数\n    const storageUsedPercent = computed(() => {\n      const maxStorage = 10 * 1024 * 1024 * 1024; // 10GB in bytes\n      return Math.round(storageUsed.value / maxStorage * 100);\n    });\n\n    // 统计数据\n    const statistics = ref([{\n      label: '关注',\n      value: '0'\n    }, {\n      label: '粉丝',\n      value: '0'\n    }, {\n      label: '点赞',\n      value: '0'\n    }, {\n      label: '访问',\n      value: '0'\n    }]);\n\n    // 内容相关数据\n    const currentTab = ref(route.query.currentTab || 'articles');\n    const articles = ref([]);\n    const portfolios = ref([]);\n\n    // 收藏相关数据\n    const currentFavTab = ref('portfolios');\n    const favoritesTabs = [{\n      key: 'portfolios',\n      label: '作品集'\n    }, {\n      key: 'articles',\n      label: '文章'\n    }, {\n      key: 'topics',\n      label: '话题'\n    }];\n\n    // 内容标签\n    const contentTabs = [{\n      key: 'articles',\n      label: '文章',\n      count: 0\n    }, {\n      key: 'topics',\n      label: '话题',\n      count: 0\n    }, {\n      key: 'qa',\n      label: '问答',\n      count: 0\n    }, {\n      key: 'drafts',\n      label: '草稿箱',\n      count: 0\n    }];\n\n    // 获取当前收藏标签的标签文本\n    const getCurrentFavTabLabel = () => {\n      const tab = favoritesTabs.find(tab => tab.key === currentFavTab.value);\n      return tab ? tab.label : '';\n    };\n\n    // 获取收藏探索路由\n    const getFavoritesExploreRoute = () => {\n      const routes = {\n        portfolios: '/explore/portfolios',\n        articles: '/explore/articles',\n        topics: '/explore/topics'\n      };\n      return routes[currentFavTab.value] || '/explore';\n    };\n\n    // 处理图片错误\n    const handlePortfolioImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n    const handleArticleImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n\n    // 格式化日期\n    const formatDate = date => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n\n    // 处理背景图上传\n    const handleBackgroundUpload = async () => {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.onchange = async e => {\n        const file = e.target.files[0];\n        if (!file) return;\n        try {\n          loading.value = true;\n          const formData = new FormData();\n          formData.append('background', file);\n          await accountStore.updateBackground(formData);\n          showToast('背景图上传成功', 'success');\n        } catch (error) {\n          console.error('背景图上传失败:', error);\n          showToast(error.message || '背景图上传失败，请稍后重试', 'error');\n        } finally {\n          loading.value = false;\n          input.value = '';\n        }\n      };\n      input.click();\n    };\n\n    // 用户主页链接\n    const userProfileUrl = computed(() => {\n      return `/u/${userInfo.value.uid}`;\n    });\n\n    // 监听路由参数变化，更新当前标签页\n    watch(() => route.query.currentTab, newTab => {\n      if (newTab) {\n        currentTab.value = newTab;\n      }\n    });\n\n    // 处理头像选择\n    const handleAvatarSelect = () => {\n      avatarInput.value?.click();\n    };\n\n    // 监听头像更新事件\n    onMounted(() => {\n      eventBus.on('user-avatar-updated', async () => {\n        await accountStore.fetchUserInfo();\n      });\n    });\n    onUnmounted(() => {\n      eventBus.off('user-avatar-updated');\n    });\n    const __returned__ = {\n      router,\n      route,\n      accountStore,\n      showEditModal,\n      editForm,\n      avatarInput,\n      usernameError,\n      creationSection,\n      userInfo,\n      backgroundUrl,\n      formatImageUrl,\n      userAvatar,\n      editAvatarUrl,\n      fetchUserInfo,\n      scrollToCreation,\n      showAvatarUpload,\n      loading,\n      handleImageError,\n      handleBackgroundError,\n      handleProfileUpdate,\n      validateUsername,\n      openEditModal,\n      closeEditModal,\n      handleAvatarChange,\n      formatStorage,\n      storageUsed,\n      storageUsedPercent,\n      statistics,\n      currentTab,\n      articles,\n      portfolios,\n      currentFavTab,\n      favoritesTabs,\n      contentTabs,\n      getCurrentFavTabLabel,\n      getFavoritesExploreRoute,\n      handlePortfolioImageError,\n      handleArticleImageError,\n      formatDate,\n      handleBackgroundUpload,\n      userProfileUrl,\n      handleAvatarSelect,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      nextTick,\n      onUnmounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useAccountStore() {\n        return useAccountStore;\n      },\n      get config() {\n        return config;\n      },\n      get defaultAvatarImage() {\n        return defaultAvatarImage;\n      },\n      get defaultBackground() {\n        return defaultBackground;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get CameraIcon() {\n        return CameraIcon;\n      },\n      get PhotoIcon() {\n        return PhotoIcon;\n      },\n      get PencilSquareIcon() {\n        return PencilSquareIcon;\n      },\n      get TrophyIcon() {\n        return TrophyIcon;\n      },\n      get SparklesIcon() {\n        return SparklesIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get ChevronRightIcon() {\n        return ChevronRightIcon;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get TrashIcon() {\n        return TrashIcon;\n      },\n      get ChatBubbleLeftRightIcon() {\n        return ChatBubbleLeftRightIcon;\n      },\n      get QuestionMarkCircleIcon() {\n        return QuestionMarkCircleIcon;\n      },\n      get InboxArrowDownIcon() {\n        return InboxArrowDownIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get BookmarkIcon() {\n        return BookmarkIcon;\n      },\n      get ArrowTopRightOnSquareIcon() {\n        return ArrowTopRightOnSquareIcon;\n      },\n      get GlobeAltIcon() {\n        return GlobeAltIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get user() {\n        return user;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","nextTick","onUnmounted","useRouter","useRoute","ElMessage","useAccountStore","config","defaultAvatarImage","defaultBackground","showToast","CameraIcon","PhotoIcon","PencilSquareIcon","TrophyIcon","SparklesIcon","PencilIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChatBubbleLeftRightIcon","QuestionMarkCircleIcon","InboxArrowDownIcon","EyeIcon","BookmarkIcon","ArrowTopRightOnSquareIcon","GlobeAltIcon","XMarkIcon","user","eventBus","router","route","accountStore","showEditModal","editForm","username","position","bio","avatar","avatarInput","usernameError","creationSection","userInfo","uid","background","backgroundUrl","bgImage","value","formatImageUrl","url","startsWith","process","env","VUE_APP_API_BASE_URL","userAvatar","avatarUrl","import","meta","VITE_API_URL","editAvatarUrl","fetchUserInfo","error","console","scrollToCreation","offset","elementPosition","getBoundingClientRect","top","offsetPosition","window","pageYOffset","scrollTo","behavior","query","currentTab","newTab","immediate","showAvatarUpload","loading","handleImageError","e","target","src","handleBackgroundError","handleProfileUpdate","validateUsername","updateData","trim","phone","email","log","response","updateUserInfo","data","code","userData","closeEditModal","message","length","test","openEditModal","handleAvatarChange","event","file","files","type","maxSize","size","updateAvatar","emit","formatStorage","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","storageUsed","storageUsedPercent","maxStorage","round","statistics","label","articles","portfolios","currentFavTab","favoritesTabs","key","contentTabs","count","getCurrentFavTabLabel","tab","find","getFavoritesExploreRoute","routes","topics","handlePortfolioImageError","handleArticleImageError","formatDate","date","Date","toLocaleDateString","year","month","day","handleBackgroundUpload","input","document","createElement","accept","onchange","formData","FormData","append","updateBackground","click","userProfileUrl","handleAvatarSelect","on","off"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/UserHome.vue"],"sourcesContent":["<template>\n  <div class=\"user-home w-full\">\n    <!-- 顶部背景和用户信息 -->\n    <div class=\"relative\">\n      <!-- 背景图 -->\n      <div class=\"h-48 bg-gradient-to-r from-gray-900 to-gray-800 relative group rounded-t-lg overflow-hidden\">\n        <div class=\"absolute inset-0 rounded-t-lg overflow-hidden\">\n          <img\n            :src=\"backgroundUrl\"\n            class=\"w-full h-full object-cover opacity-70\"\n            alt=\"背景图\"\n            @error=\"handleBackgroundError\"\n          />\n        </div>\n        <!-- 背景图上传按钮 -->\n        <div \n          class=\"absolute top-4 right-4 p-2 rounded-full bg-black/30 opacity-0 group-hover:opacity-100 transition-opacity cursor-pointer\"\n          @click=\"handleBackgroundUpload\"\n        >\n          <CameraIcon class=\"w-5 h-5 text-white\" />\n        </div>\n      </div>\n      \n      <!-- 用户信息卡片 -->\n      <div class=\"-mt-10 relative z-10\">\n        <!-- 头像和基本身份信息区块 -->\n        <div \n          class=\"relative group w-20 h-20 mx-auto -mb-10 z-20 cursor-pointer\"\n          @click=\"openEditModal\"\n        >\n          <img\n            :src=\"userAvatar\"\n            class=\"w-20 h-20 rounded-full border-4 border-white object-cover shadow-lg\"\n            alt=\"头像\"\n            @error=\"handleImageError\"\n          />\n          <!-- 添加悬停效果 -->\n          <div class=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\">\n            <PencilIcon class=\"w-6 h-6 text-white\" />\n          </div>\n        </div>\n\n        <div class=\"bg-white rounded-b-lg border border-gray-100 p-4 pb-6 transition-shadow hover:shadow-lg relative\">\n          <!-- 头像和基本身份信息区块 -->\n          <div class=\"flex flex-col items-center relative z-10\">\n            <!-- 编辑资料按钮 -->\n            <button \n              @click=\"openEditModal\"\n              class=\"absolute right-[-10px] top-[-30px] px-3 py-1 text-xs text-gray-500 hover:text-gray-900 border border-gray-200 rounded-full hover:bg-gray-50 transition-all flex items-center bg-white\"\n            >\n              <PencilIcon class=\"w-3.5 h-3.5 mr-1\" />\n              编辑资料\n            </button>\n\n            <!-- 用户基本信息 -->\n            <div class=\"flex flex-col items-center min-h-[5rem] pt-8\">\n              <div class=\"flex flex-col items-center space-y-3\">\n                <!-- 用户名 -->\n                <div class=\"text-center\">\n                  <div class=\"inline-flex items-center group relative\">\n                    <h2 class=\"text-xl font-bold text-gray-900\">{{ userInfo.username }}</h2>\n                  </div>\n                </div>\n                <!-- 当前岗位 -->\n                <div class=\"mt-1 flex items-center justify-center group\">\n                  <span v-if=\"userInfo.position\" class=\"text-sm text-gray-600\">{{ userInfo.position }}</span>\n                  <span v-else class=\"text-sm text-gray-400\">未设置职位</span>\n                </div>\n                <!-- 个人简介 -->\n                <div class=\"mt-2 group relative\">\n                  <div class=\"relative\">\n                    <!-- 左引号装饰 -->\n                    <span class=\"absolute -left-4 -top-2 text-gray-300 text-xl font-serif\">\"</span>\n                    <p v-if=\"userInfo.bio\" \n                      class=\"text-sm text-gray-500 max-w-xl px-6 py-3 bg-gray-50/80 rounded-lg\"\n                    >\n                      {{ userInfo.bio }}\n                    </p>\n                    <p v-else \n                      class=\"text-sm text-gray-400 italic px-6 py-3 bg-gray-50/80 rounded-lg\"\n                    >\n                      这个人还没有填写个人简介\n                    </p>\n                    <!-- 右引号装饰 -->\n                    <span class=\"absolute -right-4 -bottom-2 text-gray-300 text-xl font-serif\">\"</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bg-white rounded-b-lg border border-gray-100 p-4 pb-6 transition-shadow hover:shadow-lg relative\">\n            <!-- 统计数据 -->\n            <div class=\"grid grid-cols-4 gap-4 mt-6 pt-6 border-t border-gray-100 relative z-10\">\n              <div \n                v-for=\"stat in statistics\" \n                :key=\"stat.label\"\n                class=\"text-center\"\n              >\n                <div class=\"text-base font-semibold text-gray-900\">{{ stat.value }}</div>\n                <div class=\"text-xs text-gray-500\">{{ stat.label }}</div>\n              </div>\n              <!-- 个人主页链接 -->\n              <div class=\"col-span-4 flex justify-center mt-4 relative z-10\">\n                <a\n                  :href=\"userProfileUrl\"\n                  target=\"_blank\"\n                  class=\"inline-flex items-center text-xs text-gray-500 hover:text-gray-900 transition-colors group\"\n                >\n                  <GlobeAltIcon class=\"w-4 h-4 mr-1.5 text-gray-400 group-hover:text-gray-900\" />\n                  查看个人主页\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 功能入口区域 -->\n    <div class=\"mt-6 space-y-6 relative z-0\">\n      <!-- 作品集 -->\n      <div class=\"bg-white rounded-lg border border-gray-100 p-6 transition-shadow hover:shadow-lg\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-base font-medium text-gray-900 flex items-center\">\n            <PhotoIcon class=\"w-5 h-5 mr-2 text-gray-900\" />\n            作品集\n          </h3>\n          <button\n            @click=\"router.push('/portfolio/create')\"\n            class=\"flex items-center text-xs font-medium text-gray-900 hover:text-gray-700 transition-colors\"\n          >\n            <PlusIcon class=\"w-4 h-4 mr-1\" />\n            发布\n            <ChevronRightIcon class=\"w-4 h-4 ml-1\" />\n          </button>\n        </div>\n\n        <!-- 存储空间使用情况 -->\n        <div class=\"flex items-center mb-6 px-1\">\n          <div class=\"flex items-center justify-between w-full\">\n            <div class=\"flex items-center\">\n              <span class=\"text-xs text-gray-500\">存储空间：</span>\n              <span class=\"text-sm font-medium text-gray-900\">{{ formatStorage(storageUsed) }}</span>\n              <span class=\"text-xs text-gray-400 ml-1\">/</span>\n              <span class=\"text-xs text-gray-400 ml-1\">10GB</span>\n            </div>\n            <!-- 进度条 -->\n            <div class=\"flex-1 h-1.5 bg-gray-100 rounded-full overflow-hidden mx-6\">\n              <div \n                class=\"h-full rounded-full transition-all duration-300\"\n                :class=\"storageUsedPercent > 80 ? 'bg-red-500' : 'bg-blue-500'\"\n                :style=\"{ width: `${storageUsedPercent}%` }\"\n              ></div>\n            </div>\n            <span class=\"text-xs text-gray-500\">{{ storageUsedPercent }}%</span>\n          </div>\n        </div>\n\n        <!-- 作品卡片网格 -->\n        <div v-if=\"portfolios.length > 0\" class=\"grid grid-cols-2 gap-6\">\n          <!-- 作品卡片 -->\n          <div\n            v-for=\"portfolio in portfolios\"\n            :key=\"portfolio.id\"\n            class=\"group relative bg-white rounded-xl border border-gray-100 overflow-hidden hover:shadow-lg transition-all duration-300\"\n          >\n            <!-- 操作按钮 -->\n            <div class=\"absolute top-3 right-3 flex items-center space-x-2 z-10\">\n              <button\n                @click.stop=\"handleEditPortfolio(portfolio)\"\n                class=\"p-1.5 rounded-full bg-white/90 hover:bg-white shadow-sm transition-colors\"\n              >\n                <PencilSquareIcon class=\"w-4 h-4 text-gray-700\" />\n              </button>\n              <button\n                @click.stop=\"handleDeletePortfolio(portfolio)\"\n                class=\"p-1.5 rounded-full bg-white/90 hover:bg-white shadow-sm transition-colors\"\n              >\n                <TrashIcon class=\"w-4 h-4 text-gray-700\" />\n              </button>\n            </div>\n\n            <div class=\"relative aspect-w-1 aspect-h-1 overflow-hidden\">\n              <img \n                :src=\"portfolio.cover\" \n                class=\"w-full h-full object-cover transition-transform group-hover:scale-105\"\n                @error=\"handlePortfolioImageError\"\n                @click=\"router.push(`/portfolio/${portfolio.id}`)\"\n              />\n            </div>\n            <div class=\"p-4\">\n              <h4 class=\"text-sm font-medium text-gray-900 mb-1\">{{ portfolio.title }}</h4>\n              <div class=\"flex items-center justify-between text-xs text-gray-500\">\n                <span>{{ portfolio.category }}</span>\n                <div class=\"flex items-center space-x-2\">\n                  <EyeIcon class=\"w-4 h-4\" />\n                  <span>{{ portfolio.views }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- 空状态展示 -->\n        <div \n          v-else \n          class=\"flex flex-col items-center justify-center py-12 px-4 border border-gray-100 rounded-xl\"\n        >\n          <img \n            src=\"https://api.iconify.design/solar:gallery-minimalistic-linear.svg\" \n            class=\"w-16 h-16 text-gray-300 mb-4\"\n          />\n          <p class=\"text-sm text-gray-500 mb-2\">还没有作品集展示</p>\n          <p class=\"text-xs text-gray-400\">去作品集管理页面创建你的第一个作品集吧</p>\n        </div>\n      </div>\n\n      <!-- 创作内容模块 -->\n      <div \n        ref=\"creationSection\"\n        class=\"bg-white rounded-lg border border-gray-100 p-6 transition-shadow hover:shadow-lg\"\n      >\n        <div class=\"flex items-center justify-between mb-6\">\n          <h3 class=\"text-base font-medium text-gray-900 flex items-center\">\n            <PencilSquareIcon class=\"w-5 h-5 mr-2 text-gray-900\" />\n            我的创作\n          </h3>\n          <button\n            @click=\"router.push('/article/create')\"\n            class=\"flex items-center text-xs font-medium text-gray-900 hover:text-gray-700 transition-colors\"\n          >\n            <PlusIcon class=\"w-4 h-4 mr-1\" />\n            发布\n            <ChevronRightIcon class=\"w-4 h-4 ml-1\" />\n          </button>\n        </div>\n        \n        <!-- 创作类型切换 -->\n        <div class=\"flex items-center space-x-6 mb-6 border-b border-gray-100\">\n          <button\n            v-for=\"tab in contentTabs\"\n            :key=\"tab.key\"\n            class=\"pb-3 px-1 text-sm font-medium transition-colors relative\"\n            :class=\"currentTab === tab.key ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700'\"\n            @click=\"currentTab = tab.key\"\n          >\n            {{ tab.label }}\n            <span \n              v-if=\"tab.count\" \n              class=\"ml-1 text-xs text-gray-400\"\n            >({{ tab.count }})</span>\n            <div \n              v-if=\"currentTab === tab.key\"\n              class=\"absolute bottom-0 left-0 right-0 h-0.5 bg-gray-900\"\n            ></div>\n          </button>\n        </div>\n\n        <!-- 文章列表 -->\n        <div v-if=\"currentTab === 'articles'\" class=\"space-y-4\">\n          <div\n            v-for=\"article in articles\"\n            :key=\"article.id\"\n            class=\"group flex items-start space-x-4 p-4 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            <img\n              v-if=\"article.cover\"\n              :src=\"article.cover\"\n              class=\"w-24 h-16 object-cover rounded cursor-pointer\"\n              @error=\"handleArticleImageError\"\n              @click=\"router.push(`/article/${article.id}`)\"\n            />\n            <div class=\"flex-1 min-w-0 cursor-pointer\" @click=\"router.push(`/article/${article.id}`)\">\n              <h4 class=\"text-sm font-medium text-gray-900 mb-1 line-clamp-1 group-hover:text-indigo-600 transition-colors\">{{ article.title }}</h4>\n              <p class=\"text-xs text-gray-500 line-clamp-2\">{{ article.summary }}</p>\n              <div class=\"flex items-center justify-between mt-2\">\n                <div class=\"flex items-center space-x-4\">\n                  <span class=\"text-xs text-gray-400\">{{ formatDate(article.created_at) }}</span>\n                  <div class=\"flex items-center space-x-2 text-xs text-gray-400\">\n                    <EyeIcon class=\"w-3.5 h-3.5\" />\n                    <span>{{ article.views }}</span>\n                  </div>\n                </div>\n                <!-- 操作按钮 -->\n                <div class=\"flex items-center space-x-2\">\n                  <button\n                    @click.stop=\"handleEditArticle(article)\"\n                    class=\"p-1.5 rounded-full text-gray-400 hover:text-gray-900 transition-colors\"\n                  >\n                    <PencilSquareIcon class=\"w-4 h-4\" />\n                  </button>\n                  <button\n                    @click.stop=\"handleDeleteArticle(article)\"\n                    class=\"p-1.5 rounded-full text-gray-400 hover:text-red-600 transition-colors\"\n                  >\n                    <TrashIcon class=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 话题列表 -->\n        <div v-else-if=\"currentTab === 'topics'\" class=\"flex flex-col items-center justify-center py-12\">\n          <div class=\"w-16 h-16 mb-4 text-gray-200\">\n            <ChatBubbleLeftRightIcon />\n          </div>\n          <p class=\"text-sm text-gray-500 mb-2\">还没有发布过话题</p>\n          <button\n            @click=\"router.push('/topic/create')\"\n            class=\"mt-2 text-xs text-gray-900 hover:text-gray-700 transition-colors flex items-center\"\n          >\n            <PlusIcon class=\"w-4 h-4 mr-1\" />\n            发起新话题\n          </button>\n        </div>\n        \n        <!-- 问答列表 -->\n        <div v-else-if=\"currentTab === 'qa'\" class=\"flex flex-col items-center justify-center py-12\">\n          <div class=\"w-16 h-16 mb-4 text-gray-200\">\n            <QuestionMarkCircleIcon />\n          </div>\n          <p class=\"text-sm text-gray-500 mb-2\">还没有参与问答</p>\n          <button\n            @click=\"router.push('/qa/ask')\"\n            class=\"mt-2 text-xs text-gray-900 hover:text-gray-700 transition-colors flex items-center\"\n          >\n            <PlusIcon class=\"w-4 h-4 mr-1\" />\n            提出问题\n          </button>\n        </div>\n        \n        <!-- 草稿箱 -->\n        <div v-else-if=\"currentTab === 'drafts'\" class=\"flex flex-col items-center justify-center py-12\">\n          <div class=\"w-16 h-16 mb-4 text-gray-200\">\n            <InboxArrowDownIcon />\n          </div>\n          <p class=\"text-sm text-gray-500 mb-2\">草稿箱是空的</p>\n          <p class=\"text-xs text-gray-400\">未完成的创作会自动保存在这里</p>\n        </div>\n      </div>\n\n      <!-- 我的收藏模块 -->\n      <div class=\"bg-white rounded-lg border border-gray-100 p-6 transition-shadow hover:shadow-lg\">\n        <div class=\"flex items-center justify-between mb-6\">\n          <h3 class=\"text-base font-medium text-gray-900 flex items-center\">\n            <BookmarkIcon class=\"w-5 h-5 mr-2 text-gray-900\" />\n            我的收藏\n          </h3>\n        </div>\n        \n        <!-- 收藏类型切换 -->\n        <div class=\"flex items-center space-x-6 mb-6 border-b border-gray-100\">\n          <button\n            v-for=\"tab in favoritesTabs\"\n            :key=\"tab.key\"\n            class=\"pb-3 px-1 text-sm font-medium transition-colors relative\"\n            :class=\"currentFavTab === tab.key ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700'\"\n            @click=\"currentFavTab = tab.key\"\n          >\n            {{ tab.label }}\n            <span \n              v-if=\"tab.count\" \n              class=\"ml-1 text-xs text-gray-400\"\n            >({{ tab.count }})</span>\n            <div \n              v-if=\"currentFavTab === tab.key\"\n              class=\"absolute bottom-0 left-0 right-0 h-0.5 bg-gray-900\"\n            ></div>\n          </button>\n        </div>\n        \n        <!-- 空状态展示 -->\n        <div class=\"flex flex-col items-center justify-center py-12\">\n          <div class=\"w-16 h-16 mb-4 text-gray-200\">\n            <BookmarkIcon />\n          </div>\n          <p class=\"text-sm text-gray-500 mb-2\">还没有收藏任何{{ getCurrentFavTabLabel() }}</p>\n          <button\n            @click=\"router.push(getFavoritesExploreRoute())\"\n            class=\"mt-2 text-xs text-gray-900 hover:text-gray-700 transition-colors flex items-center\"\n          >\n            <ArrowTopRightOnSquareIcon class=\"w-4 h-4 mr-1\" />\n            去发现{{ getCurrentFavTabLabel() }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- 编辑资料弹窗 -->\n    <Transition\n      enter-active-class=\"transition duration-200 ease-out\"\n      enter-from-class=\"opacity-0 scale-95\"\n      enter-to-class=\"opacity-100 scale-100\"\n      leave-active-class=\"transition duration-150 ease-in\"\n      leave-from-class=\"opacity-100 scale-100\"\n      leave-to-class=\"opacity-0 scale-95\"\n    >\n      <div v-if=\"showEditModal\" class=\"modal-overlay\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h3>编辑个人资料</h3>\n            <button class=\"close-btn\" @click=\"closeEditModal\">\n              <XMarkIcon class=\"w-5 h-5\" />\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <!-- 头像上传 -->\n            <div class=\"form-group\">\n              <label class=\"form-label\">头像</label>\n              <div class=\"flex items-center space-x-4\">\n                <div class=\"relative group\">\n                  <img\n                    :src=\"editAvatarUrl\"\n                    class=\"w-20 h-20 rounded-full object-cover border-2 border-gray-200\"\n                    alt=\"头像\"\n                    @error=\"handleImageError\"\n                  />\n                  <div \n                    @click=\"handleAvatarSelect\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 rounded-full opacity-0 group-hover:opacity-100 transition-opacity cursor-pointer\"\n                  >\n                    <CameraIcon class=\"w-6 h-6 text-white\" />\n                  </div>\n                </div>\n                <input\n                  ref=\"avatarInput\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  class=\"hidden\"\n                  @change=\"handleAvatarChange\"\n                />\n                <div class=\"text-sm text-gray-500\">\n                  <p>点击头像更换</p>\n                  <p class=\"text-xs mt-1\">建议使用正面免冠证件照</p>\n                </div>\n              </div>\n            </div>\n            \n            <!-- 用户名 -->\n            <div class=\"form-group\">\n              <label class=\"form-label\">用户名</label>\n              <input \n                type=\"text\"\n                v-model=\"editForm.username\"\n                placeholder=\"请输入用户名\"\n                :class=\"{ 'error': usernameError }\"\n                :disabled=\"loading\"\n                @input=\"validateUsername\"\n              />\n              <div v-if=\"usernameError\" class=\"text-xs text-red-500 mt-1\">\n                {{ usernameError }}\n              </div>\n              <!-- 提示文字 -->\n              <div class=\"text-gray-400 text-xs mt-1\">\n                用户名长度4-11个字符，可使用中文、英文字母、数字\n              </div>\n            </div>\n            \n            <!-- 职位 -->\n            <div class=\"form-group\">\n              <label class=\"form-label\">当前职位</label>\n              <input \n                type=\"text\"\n                v-model=\"editForm.position\"\n                placeholder=\"请输入您的职位\"\n                :disabled=\"loading\"\n              />\n            </div>\n            \n            <!-- 个人简介 -->\n            <div class=\"form-group\">\n              <label class=\"form-label\">个人简介</label>\n              <textarea\n                v-model=\"editForm.bio\"\n                placeholder=\"请输入个人简介\"\n                :disabled=\"loading\"\n                rows=\"4\"\n                class=\"form-textarea\"\n              ></textarea>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button \n              class=\"btn btn-default\" \n              @click=\"closeEditModal\"\n              :disabled=\"loading\"\n            >\n              取消\n            </button>\n            <button \n              class=\"btn btn-primary\" \n              @click=\"handleProfileUpdate\"\n              :disabled=\"loading\"\n            >\n              {{ loading ? '更新中...' : '确认' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch, nextTick, onUnmounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useAccountStore } from '@/stores/account'\nimport config from '@/config'\nimport defaultAvatarImage from '@/assets/images/default-avatar.png'\nimport defaultBackground from '@/assets/images/default-background.jpg'\nimport { showToast } from '@/components/ToastMessage'\nimport {\n  CameraIcon,        // 用于头像和背景上传\n  PhotoIcon,         // 作品集图标\n  PencilSquareIcon,  // 编辑图标\n  TrophyIcon,        // 会员图标\n  SparklesIcon,      // 升级会员图标\n  PencilIcon,        // 编辑昵称图标\n  ChevronRightIcon,  // 箭头图标\n  PlusIcon,          // 添加图标\n  TrashIcon,         // 删除图标\n  ChatBubbleLeftRightIcon,  // 话题图标\n  QuestionMarkCircleIcon,   // 问答图标\n  InboxArrowDownIcon,       // 草稿箱图标\n  EyeIcon,                  // 查看图标\n  BookmarkIcon,            // 收藏图标\n  ArrowTopRightOnSquareIcon, // 外链图标\n  GlobeAltIcon,            // 个人主页图标\n  XMarkIcon               // 关闭图标\n} from '@heroicons/vue/24/outline'\nimport { user } from '@/api/user'\nimport { eventBus } from '@/utils/eventBus'\n\nconst router = useRouter()\nconst route = useRoute()\nconst accountStore = useAccountStore()\nconst showEditModal = ref(false)\nconst editForm = ref({\n  username: '',\n  position: '',\n  bio: '',\n  avatar: null\n})\nconst avatarInput = ref(null)\nconst usernameError = ref('')\nconst creationSection = ref(null)\n\n// 使用 getters 获取用户信息\nconst userInfo = computed(() => ({\n  uid: accountStore.uid,\n  username: accountStore.username,\n  avatar: accountStore.avatar,\n  background: accountStore.background,\n  bio: accountStore.bio || null,\n  position: accountStore.position || null\n}))\n\n// 添加背景图 URL 的计算属性\nconst backgroundUrl = computed(() => {\n  const bgImage = userInfo.value?.background\n  return bgImage ? formatImageUrl(bgImage) : defaultBackground\n})\n\n// 格式化图片 URL\nconst formatImageUrl = (url) => {\n  if (!url || url === 'null') return defaultAvatarImage\n  return url.startsWith('http') ? url : `${process.env.VUE_APP_API_BASE_URL}${url}`\n}\n\n// 计算头像 URL\nconst userAvatar = computed(() => {\n  const avatarUrl = userInfo.value?.avatar\n  if (!avatarUrl) return defaultAvatarImage\n  return avatarUrl.startsWith('http') ? avatarUrl : `${import.meta.env.VITE_API_URL}${avatarUrl}`\n})\n\n// 编辑头像 URL 的计算属性\nconst editAvatarUrl = computed(() => {\n  const avatarUrl = editForm.value.avatar || userInfo.value?.avatar\n  if (!avatarUrl) return defaultAvatarImage\n  return avatarUrl.startsWith('http') ? avatarUrl : `${import.meta.env.VITE_API_URL}${avatarUrl}`\n})\n\n// 获取用户信息\nconst fetchUserInfo = async () => {\n  try {\n    // 只在 store 中没有数据时获取\n    if (!accountStore.userInfo) {\n      await accountStore.fetchUserInfo()\n    }\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n  }\n}\n\n// 滚动到创作区域\nconst scrollToCreation = () => {\n  if (creationSection.value) {\n    const offset = 100 // 可以根据需要调整这个值\n    const elementPosition = creationSection.value.getBoundingClientRect().top\n    const offsetPosition = elementPosition + window.pageYOffset - offset\n    \n    window.scrollTo({\n      top: offsetPosition,\n      behavior: 'smooth'\n    })\n  }\n}\n\n// 监听路由参数变化\nwatch(\n  () => route.query.currentTab,\n  (newTab) => {\n    if (newTab === 'articles' || newTab === 'drafts') {\n      // 等待 DOM 更新后滚动\n      nextTick(() => {\n        scrollToCreation()\n      })\n    }\n  },\n  { immediate: true }\n)\n\n// 组件挂载时获取数据\nonMounted(async () => {\n  // 只在 store 中没有数据时获取\n  if (!accountStore.userInfo) {\n    await fetchUserInfo()\n  }\n  \n  // 如果当前是文章或草稿标签，滚动到创作区域\n  if (route.query.currentTab === 'articles' || route.query.currentTab === 'drafts') {\n    scrollToCreation()\n  }\n})\n\n// 头像上传相关\nconst showAvatarUpload = ref(false)\nconst loading = ref(false)\n\n// 处理头像错误\nconst handleImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\n// 处理背景图错误\nconst handleBackgroundError = (e) => {\n  e.target.src = defaultBackground\n}\n\n// 处理个人资料更新\nconst handleProfileUpdate = async () => {\n  if (!validateUsername()) return\n  \n  try {\n    loading.value = true\n    // 准备更新数据\n    const updateData = {\n      username: editForm.value.username.trim(),\n      position: editForm.value.position?.trim() || '',\n      bio: editForm.value.bio?.trim() || '',\n      phone: accountStore.phone,\n      email: accountStore.email\n    }\n    \n    console.log('Submitting update:', updateData)\n      \n    const response = await accountStore.updateUserInfo(updateData)\n      \n    // 使用后端返回的数据更新表单\n    if (response?.data?.code === 200) {\n      const userData = response.data.data\n      editForm.value = {\n        username: userData.username,\n        position: userData.position || '',\n        bio: userData.bio || '',\n        avatar: userData.avatar\n      }\n    }\n      \n    showToast('更新成功', 'success')\n    closeEditModal()\n  } catch (error) {\n    console.error('更新失败:', error)\n    showToast(error.message || '更新失败，请稍后重试', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 实时验证用户名\nconst validateUsername = () => {\n  const value = editForm.value.username\n  if (!value) {\n    usernameError.value = '用户名不能为空'\n  } else if (value.length < 4 || value.length > 11) {\n    usernameError.value = '用户名长度必须在4-11个字符之间'\n  } else if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9]+$/.test(value)) {\n    usernameError.value = '用户名只能包含中文、英文字母和数字'\n  } else {\n    usernameError.value = ''\n  }\n  return !usernameError.value\n}\n\n// 打开编辑弹窗时初始化表单数据\nconst openEditModal = () => {\n  editForm.value = {\n    username: userInfo.value.username || '',\n    position: userInfo.value.position || '',\n    bio: userInfo.value.bio || '',\n    avatar: userInfo.value.avatar || null\n  }\n  showEditModal.value = true\n}\n\n// 关闭编辑弹窗\nconst closeEditModal = () => {\n  showEditModal.value = false\n  editForm.value = {\n    username: '',\n    position: '',\n    bio: '',\n    avatar: null\n  }\n  usernameError.value = ''\n}\n\nconst handleAvatarChange = async (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  // 验证文件\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n  \n  const maxSize = 2 * 1024 * 1024 // 2MB\n  if (file.size > maxSize) {\n    showToast('图片大小不能超过2MB', 'error')\n    return\n  }\n  \n  try {\n    loading.value = true\n    \n    // 直接使用 user API 上传头像\n    const response = await user.updateAvatar(file)\n    \n    if (response.data.code === 200) {\n      // 更新 accountStore 中的头像\n      await accountStore.fetchUserInfo()\n      // 更新编辑表单中的头像\n      editForm.value.avatar = response.data.data.avatar\n      showToast('头像上传成功', 'success')\n      \n      // 触发全局事件，通知其他组件（如 HeadView）更新头像\n      eventBus.emit('user-avatar-updated')\n    }\n  } catch (error) {\n    console.error('头像上传失败:', error)\n    showToast(error.message || '头像上传失败，请稍后重试', 'error')\n  } finally {\n    loading.value = false\n    // 清空文件选择器\n    event.target.value = ''\n  }\n}\n\n// 格式化存储空间大小\nconst formatStorage = (bytes) => {\n  if (!bytes) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`\n}\n\n// 存储空间使用数据\nconst storageUsed = ref(0)  // 字节数\nconst storageUsedPercent = computed(() => {\n  const maxStorage = 10 * 1024 * 1024 * 1024 // 10GB in bytes\n  return Math.round((storageUsed.value / maxStorage) * 100)\n})\n\n// 统计数据\nconst statistics = ref([\n  { label: '关注', value: '0' },\n  { label: '粉丝', value: '0' },\n  { label: '点赞', value: '0' },\n  { label: '访问', value: '0' }\n])\n\n// 内容相关数据\nconst currentTab = ref(route.query.currentTab || 'articles')\nconst articles = ref([])\nconst portfolios = ref([])\n\n// 收藏相关数据\nconst currentFavTab = ref('portfolios')\nconst favoritesTabs = [\n  { key: 'portfolios', label: '作品集' },\n  { key: 'articles', label: '文章' },\n  { key: 'topics', label: '话题' }\n]\n\n// 内容标签\nconst contentTabs = [\n  { key: 'articles', label: '文章', count: 0 },\n  { key: 'topics', label: '话题', count: 0 },\n  { key: 'qa', label: '问答', count: 0 },\n  { key: 'drafts', label: '草稿箱', count: 0 }\n]\n\n// 获取当前收藏标签的标签文本\nconst getCurrentFavTabLabel = () => {\n  const tab = favoritesTabs.find(tab => tab.key === currentFavTab.value)\n  return tab ? tab.label : ''\n}\n\n// 获取收藏探索路由\nconst getFavoritesExploreRoute = () => {\n  const routes = {\n    portfolios: '/explore/portfolios',\n    articles: '/explore/articles',\n    topics: '/explore/topics'\n  }\n  return routes[currentFavTab.value] || '/explore'\n}\n\n// 处理图片错误\nconst handlePortfolioImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\nconst handleArticleImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\n// 格式化日期\nconst formatDate = (date) => {\n  if (!date) return ''\n  return new Date(date).toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n// 处理背景图上传\nconst handleBackgroundUpload = async () => {\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.accept = 'image/*'\n  \n  input.onchange = async (e) => {\n    const file = e.target.files[0]\n    if (!file) return\n    \n    try {\n      loading.value = true\n      const formData = new FormData()\n      formData.append('background', file)\n      \n      await accountStore.updateBackground(formData)\n      showToast('背景图上传成功', 'success')\n    } catch (error) {\n      console.error('背景图上传失败:', error)\n      showToast(error.message || '背景图上传失败，请稍后重试', 'error')\n    } finally {\n      loading.value = false\n      input.value = ''\n    }\n  }\n  \n  input.click()\n}\n\n// 用户主页链接\nconst userProfileUrl = computed(() => {\n  return `/u/${userInfo.value.uid}`\n})\n\n// 监听路由参数变化，更新当前标签页\nwatch(\n  () => route.query.currentTab,\n  (newTab) => {\n    if (newTab) {\n      currentTab.value = newTab\n    }\n  }\n)\n\n// 处理头像选择\nconst handleAvatarSelect = () => {\n  avatarInput.value?.click()\n}\n\n// 监听头像更新事件\nonMounted(() => {\n  eventBus.on('user-avatar-updated', async () => {\n    await accountStore.fetchUserInfo()\n  })\n})\n\nonUnmounted(() => {\n  eventBus.off('user-avatar-updated')\n})\n</script>\n\n<style scoped>\n/* 弹窗样式 */\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 50;\n}\n\n.modal-content {\n  position: relative;\n  width: 91.666667%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-bottom: 1px solid #e5e7eb;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #111827;\n  font-size: 1.125rem;\n  font-weight: 500;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-top: 1px solid #e5e7eb;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: #111827;\n  background-color: white;\n  transition: border-color 0.15s ease-in-out;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #6366f1;\n  box-shadow: 0 0 0 1px #6366f1;\n}\n\n.form-group input:disabled {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.375rem;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-default {\n  color: #374151;\n  background-color: white;\n  border: 1px solid #d1d5db;\n}\n\n.btn-default:not(:disabled):hover {\n  background-color: #f9fafb;\n}\n\n.btn-primary {\n  color: white;\n  background-color: #6366f1;\n  border: 1px solid transparent;\n}\n\n.btn-primary:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 关闭按钮样式 */\n.close-btn {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.25rem;\n  color: #6b7280;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.15s ease-in-out;\n}\n\n.close-btn:hover {\n  color: #374151;\n}\n\n.form-group input.error {\n  border-color: #ef4444;\n}\n\n.form-group input.error:focus {\n  border-color: #ef4444;\n  box-shadow: 0 0 0 1px #ef4444;\n}\n\n/* 添加新的样式 */\n.form-label {\n  display: block;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 0.5rem;\n}\n\n.form-textarea {\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: #111827;\n  background-color: white;\n  transition: border-color 0.15s ease-in-out;\n  resize: vertical;\n  min-height: 5rem;\n}\n\n.form-textarea:focus {\n  outline: none;\n  border-color: #6366f1;\n  box-shadow: 0 0 0 1px #6366f1;\n}\n\n.form-textarea:disabled {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n\n/* 其他已有的样式保持不变 */\n</style> \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"label\"],\n  _excluded2 = [\"getValue\", \"getColor\"];\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VColorPickerEdit.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { modes, nullColor } from \"./util/index.mjs\";\nimport { defineComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nconst VColorPickerInput = _ref => {\n  let {\n      label\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return _createVNode(\"div\", {\n    \"class\": \"v-color-picker-edit__input\"\n  }, [_createVNode(\"input\", rest, null), _createVNode(\"span\", null, [label])]);\n};\nexport const makeVColorPickerEditProps = propsFactory(_objectSpread({\n  color: Object,\n  disabled: Boolean,\n  mode: {\n    type: String,\n    default: 'rgba',\n    validator: v => Object.keys(modes).includes(v)\n  },\n  modes: {\n    type: Array,\n    default: () => Object.keys(modes),\n    validator: v => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m))\n  }\n}, makeComponentProps()), 'VColorPickerEdit');\nexport const VColorPickerEdit = defineComponent({\n  name: 'VColorPickerEdit',\n  props: makeVColorPickerEditProps(),\n  emits: {\n    'update:color': color => true,\n    'update:mode': mode => true\n  },\n  setup(props, _ref2) {\n    let {\n      emit\n    } = _ref2;\n    const enabledModes = computed(() => {\n      return props.modes.map(key => _objectSpread(_objectSpread({}, modes[key]), {}, {\n        name: key\n      }));\n    });\n    const inputs = computed(() => {\n      const mode = enabledModes.value.find(m => m.name === props.mode);\n      if (!mode) return [];\n      const color = props.color ? mode.to(props.color) : null;\n      return mode.inputs?.map(_ref3 => {\n        let {\n            getValue,\n            getColor\n          } = _ref3,\n          inputProps = _objectWithoutProperties(_ref3, _excluded2);\n        return _objectSpread(_objectSpread(_objectSpread({}, mode.inputProps), inputProps), {}, {\n          disabled: props.disabled,\n          value: color && getValue(color),\n          onChange: e => {\n            const target = e.target;\n            if (!target) return;\n            emit('update:color', mode.from(getColor(color ?? mode.to(nullColor), target.value)));\n          }\n        });\n      });\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-color-picker-edit', props.class],\n      \"style\": props.style\n    }, [inputs.value?.map(props => _createVNode(VColorPickerInput, props, null)), enabledModes.value.length > 1 && _createVNode(VBtn, {\n      \"icon\": \"$unfold\",\n      \"size\": \"x-small\",\n      \"variant\": \"plain\",\n      \"onClick\": () => {\n        const mi = enabledModes.value.findIndex(m => m.name === props.mode);\n        emit('update:mode', enabledModes.value[(mi + 1) % enabledModes.value.length].name);\n      }\n    }, null)]));\n    return {};\n  }\n});","map":{"version":3,"names":["VBtn","makeComponentProps","computed","modes","nullColor","defineComponent","propsFactory","useRender","VColorPickerInput","_ref","label","rest","_objectWithoutProperties","_excluded","_createVNode","makeVColorPickerEditProps","_objectSpread","color","Object","disabled","Boolean","mode","type","String","default","validator","v","keys","includes","Array","isArray","every","m","VColorPickerEdit","name","props","emits","setup","_ref2","emit","enabledModes","map","key","inputs","value","find","to","_ref3","getValue","getColor","inputProps","_excluded2","onChange","e","target","from","class","style","length","onClick","mi","findIndex"],"sources":["../../../src/components/VColorPicker/VColorPickerEdit.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { computed } from 'vue'\nimport { modes, nullColor } from './util'\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSV } from '@/util/colorUtils'\n\nconst VColorPickerInput = ({ label, ...rest }: any) => {\n  return (\n    <div\n      class=\"v-color-picker-edit__input\"\n    >\n      <input { ...rest } />\n      <span>{ label }</span>\n    </div>\n  )\n}\n\nexport const makeVColorPickerEditProps = propsFactory({\n  color: Object as PropType<HSV | null>,\n  disabled: Boolean,\n  mode: {\n    type: String as PropType<keyof typeof modes>,\n    default: 'rgba',\n    validator: (v: string) => Object.keys(modes).includes(v),\n  },\n  modes: {\n    type: Array as PropType<readonly (keyof typeof modes)[]>,\n    default: () => Object.keys(modes),\n    validator: (v: any) => Array.isArray(v) && v.every(m => Object.keys(modes).includes(m)),\n  },\n\n  ...makeComponentProps(),\n}, 'VColorPickerEdit')\n\nexport const VColorPickerEdit = defineComponent({\n  name: 'VColorPickerEdit',\n\n  props: makeVColorPickerEditProps(),\n\n  emits: {\n    'update:color': (color: HSV) => true,\n    'update:mode': (mode: keyof typeof modes) => true,\n  },\n\n  setup (props, { emit }) {\n    const enabledModes = computed(() => {\n      return props.modes.map(key => ({ ...modes[key], name: key }))\n    })\n\n    const inputs = computed(() => {\n      const mode = enabledModes.value.find(m => m.name === props.mode)\n\n      if (!mode) return []\n\n      const color = props.color ? mode.to(props.color) : null\n\n      return mode.inputs?.map(({ getValue, getColor, ...inputProps }) => {\n        return {\n          ...mode.inputProps,\n          ...inputProps,\n          disabled: props.disabled,\n          value: color && getValue(color),\n          onChange: (e: InputEvent) => {\n            const target = e.target as HTMLInputElement | null\n\n            if (!target) return\n\n            emit('update:color', mode.from(getColor(color ?? mode.to(nullColor), target.value)))\n          },\n        }\n      })\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-edit',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { inputs.value?.map(props => (\n          <VColorPickerInput { ...props } />\n        ))}\n        { enabledModes.value.length > 1 && (\n          <VBtn\n            icon=\"$unfold\"\n            size=\"x-small\"\n            variant=\"plain\"\n            onClick={ () => {\n              const mi = enabledModes.value.findIndex(m => m.name === props.mode)\n\n              emit('update:mode', enabledModes.value[(mi + 1) % enabledModes.value.length].name)\n            }}\n          />\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VColorPickerEdit = InstanceType<typeof VColorPickerEdit>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
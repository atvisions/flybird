{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, watch } from 'vue';\nimport { Dialog, DialogPanel, DialogTitle, TransitionRoot, TransitionChild } from '@headlessui/vue';\nimport { XMarkIcon, ChevronUpDownIcon, CheckIcon } from '@heroicons/vue/24/outline';\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue';\nexport default {\n  __name: 'EditLanguageDialog',\n  props: {\n    modelValue: Boolean,\n    initialData: {\n      type: Object,\n      default: () => ({})\n    },\n    loading: Boolean\n  },\n  emits: ['update:modelValue', 'submit'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 表单数据\n    const formData = ref({\n      name: '',\n      // 语言名称\n      proficiency: '',\n      // 熟练程度\n      certification: '',\n      // 语言证书\n      score: '' // 证书分数\n    });\n\n    // 监听初始数据变化\n    watch(() => props.initialData, newVal => {\n      if (newVal) {\n        formData.value = {\n          id: newVal.id || null,\n          name: newVal.name || '',\n          proficiency: newVal.proficiency || '',\n          certification: newVal.certification || '',\n          score: newVal.score || ''\n        };\n      }\n    }, {\n      immediate: true\n    });\n    const handleClose = () => {\n      emit('update:modelValue', false);\n    };\n    const handleSubmit = () => {\n      const data = _objectSpread(_objectSpread({}, formData.value), {}, {\n        name: formData.value.name.trim(),\n        certification: formData.value.certification?.trim() || '',\n        score: formData.value.score?.trim() || ''\n      });\n\n      // 如果是新建，不传 id\n      if (!data.id) {\n        delete data.id;\n      }\n      emit('submit', data);\n    };\n\n    // 熟练程度映射\n    const proficiencyMap = {\n      'native': '母语',\n      'advanced': '高级',\n      'intermediate': '中级',\n      'basic': '初级'\n    };\n    const __returned__ = {\n      props,\n      emit,\n      formData,\n      handleClose,\n      handleSubmit,\n      proficiencyMap,\n      ref,\n      watch,\n      get Dialog() {\n        return Dialog;\n      },\n      get DialogPanel() {\n        return DialogPanel;\n      },\n      get DialogTitle() {\n        return DialogTitle;\n      },\n      get TransitionRoot() {\n        return TransitionRoot;\n      },\n      get TransitionChild() {\n        return TransitionChild;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get ChevronUpDownIcon() {\n        return ChevronUpDownIcon;\n      },\n      get CheckIcon() {\n        return CheckIcon;\n      },\n      get Listbox() {\n        return Listbox;\n      },\n      get ListboxButton() {\n        return ListboxButton;\n      },\n      get ListboxOptions() {\n        return ListboxOptions;\n      },\n      get ListboxOption() {\n        return ListboxOption;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","Dialog","DialogPanel","DialogTitle","TransitionRoot","TransitionChild","XMarkIcon","ChevronUpDownIcon","CheckIcon","Listbox","ListboxButton","ListboxOptions","ListboxOption","props","__props","emit","__emit","formData","name","proficiency","certification","score","initialData","newVal","value","id","immediate","handleClose","handleSubmit","data","_objectSpread","trim","proficiencyMap"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/dialogs/EditLanguageDialog.vue"],"sourcesContent":["<template>\n  <TransitionRoot appear :show=\"modelValue\" as=\"template\">\n    <Dialog as=\"div\" class=\"relative z-50\" @close=\"handleClose\">\n      <TransitionChild\n        as=\"template\"\n        enter=\"duration-300 ease-out\"\n        enter-from=\"opacity-0\"\n        enter-to=\"opacity-100\"\n        leave=\"duration-200 ease-in\"\n        leave-from=\"opacity-100\"\n        leave-to=\"opacity-0\"\n      >\n        <div class=\"fixed inset-0 bg-black/25\" />\n      </TransitionChild>\n\n      <div class=\"fixed inset-0 overflow-y-auto\">\n        <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n          <TransitionChild\n            as=\"template\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0 scale-95\"\n            enter-to=\"opacity-100 scale-100\"\n            leave=\"duration-200 ease-in\"\n            leave-from=\"opacity-100 scale-100\"\n            leave-to=\"opacity-0 scale-95\"\n          >\n            <DialogPanel class=\"w-full max-w-2xl transform overflow-hidden rounded-xl bg-white text-left align-middle shadow-xl transition-all\">\n              <!-- 头部 -->\n              <DialogTitle as=\"div\" class=\"flex items-center justify-between px-6 py-4 border-b border-gray-200\">\n                <h3 class=\"text-lg font-medium text-gray-900\">\n                  {{ initialData?.id ? '编辑语言能力' : '添加语言能力' }}\n                </h3>\n                <button\n                  @click=\"handleClose\"\n                  class=\"p-1 rounded-full hover:bg-gray-100 transition-colors\"\n                >\n                  <XMarkIcon class=\"w-5 h-5 text-gray-400\" />\n                </button>\n              </DialogTitle>\n\n              <!-- 表单内容 -->\n              <form @submit.prevent=\"handleSubmit\" class=\"p-6\">\n                <div class=\"space-y-4\">\n                  <!-- 语言名称 -->\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n                      语言名称 <span class=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      v-model=\"formData.name\"\n                      type=\"text\"\n                      class=\"w-full rounded-lg border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      placeholder=\"请输入语言名称\"\n                      required\n                    />\n                  </div>\n\n                  <!-- 熟练程度 -->\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n                      熟练程度 <span class=\"text-red-500\">*</span>\n                    </label>\n                    <Listbox v-model=\"formData.proficiency\" as=\"div\">\n                      <div class=\"relative\">\n                        <ListboxButton class=\"relative w-full cursor-pointer rounded-lg bg-white py-2 pl-3 pr-10 text-left border border-gray-300 hover:border-gray-400 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\">\n                          <span class=\"block truncate\">\n                            {{ proficiencyMap[formData.proficiency] || '请选择熟练程度' }}\n                          </span>\n                          <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                            <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                          </span>\n                        </ListboxButton>\n                        <ListboxOptions class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-lg bg-white py-1 text-sm shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                          <ListboxOption\n                            v-for=\"[value, label] in Object.entries(proficiencyMap)\"\n                            :key=\"value\"\n                            :value=\"value\"\n                            v-slot=\"{ active, selected }\"\n                            as=\"template\"\n                          >\n                            <li :class=\"[\n                              active ? 'bg-blue-50' : 'text-gray-900',\n                              'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                            ]\">\n                              <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                                {{ label }}\n                              </span>\n                              <span v-if=\"selected\" :class=\"[\n                                'text-blue-600',\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\n                              ]\">\n                                <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                              </span>\n                            </li>\n                          </ListboxOption>\n                        </ListboxOptions>\n                      </div>\n                    </Listbox>\n                  </div>\n\n                  <!-- 语言证书 -->\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n                      语言证书\n                    </label>\n                    <input\n                      v-model=\"formData.certification\"\n                      type=\"text\"\n                      class=\"w-full rounded-lg border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      placeholder=\"请输入语言证书，如：托福、雅思等\"\n                    />\n                  </div>\n\n                  <!-- 证书分数 -->\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-700 mb-1\">\n                      证书分数\n                    </label>\n                    <input\n                      v-model=\"formData.score\"\n                      type=\"text\"\n                      class=\"w-full rounded-lg border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                      placeholder=\"请输入证书分数\"\n                    />\n                  </div>\n                </div>\n\n                <!-- 底部按钮 -->\n                <div class=\"mt-6 flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    @click=\"handleClose\"\n                    class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50\"\n                  >\n                    取消\n                  </button>\n                  <button\n                    type=\"submit\"\n                    :disabled=\"loading\"\n                    class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {{ loading ? '保存中...' : '确认' }}\n                  </button>\n                </div>\n              </form>\n            </DialogPanel>\n          </TransitionChild>\n        </div>\n      </div>\n    </Dialog>\n  </TransitionRoot>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  TransitionRoot,\n  TransitionChild\n} from '@headlessui/vue'\nimport { XMarkIcon, ChevronUpDownIcon, CheckIcon } from '@heroicons/vue/24/outline'\nimport {\n  Listbox,\n  ListboxButton,\n  ListboxOptions,\n  ListboxOption\n} from '@headlessui/vue'\n\nconst props = defineProps({\n  modelValue: Boolean,\n  initialData: {\n    type: Object,\n    default: () => ({})\n  },\n  loading: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'submit'])\n\n// 表单数据\nconst formData = ref({\n  name: '',          // 语言名称\n  proficiency: '',   // 熟练程度\n  certification: '', // 语言证书\n  score: ''         // 证书分数\n})\n\n// 监听初始数据变化\nwatch(() => props.initialData, (newVal) => {\n  if (newVal) {\n    formData.value = {\n      id: newVal.id || null,\n      name: newVal.name || '',\n      proficiency: newVal.proficiency || '',\n      certification: newVal.certification || '',\n      score: newVal.score || ''\n    }\n  }\n}, { immediate: true })\n\nconst handleClose = () => {\n  emit('update:modelValue', false)\n}\n\nconst handleSubmit = () => {\n  const data = {\n    ...formData.value,\n    name: formData.value.name.trim(),\n    certification: formData.value.certification?.trim() || '',\n    score: formData.value.score?.trim() || ''\n  }\n\n  // 如果是新建，不传 id\n  if (!data.id) {\n    delete data.id\n  }\n\n  emit('submit', data)\n}\n\n// 熟练程度映射\nconst proficiencyMap = {\n  'native': '母语',\n  'advanced': '高级',\n  'intermediate': '中级',\n  'basic': '初级'\n}\n</script> "],"mappings":";AA0JA,SAASA,GAAG,EAAEC,KAAK,QAAQ,KAAI;AAC/B,SACEC,MAAM,EACNC,WAAW,EACXC,WAAW,EACXC,cAAc,EACdC,eAAc,QACT,iBAAgB;AACvB,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,SAAS,QAAQ,2BAA0B;AAClF,SACEC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,aAAY,QACP,iBAAgB;;;;;;;;;;;;;;;;;IAEvB,MAAMC,KAAK,GAAGC,OAAA;IASd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,QAAQ,GAAGlB,GAAG,CAAC;MACnBmB,IAAI,EAAE,EAAE;MAAW;MACnBC,WAAW,EAAE,EAAE;MAAI;MACnBC,aAAa,EAAE,EAAE;MAAE;MACnBC,KAAK,EAAE,EAAE,CAAS;IACpB,CAAC;;IAED;IACArB,KAAK,CAAC,MAAMa,KAAK,CAACS,WAAW,EAAGC,MAAM,IAAK;MACzC,IAAIA,MAAM,EAAE;QACVN,QAAQ,CAACO,KAAK,GAAG;UACfC,EAAE,EAAEF,MAAM,CAACE,EAAE,IAAI,IAAI;UACrBP,IAAI,EAAEK,MAAM,CAACL,IAAI,IAAI,EAAE;UACvBC,WAAW,EAAEI,MAAM,CAACJ,WAAW,IAAI,EAAE;UACrCC,aAAa,EAAEG,MAAM,CAACH,aAAa,IAAI,EAAE;UACzCC,KAAK,EAAEE,MAAM,CAACF,KAAK,IAAI;QACzB;MACF;IACF,CAAC,EAAE;MAAEK,SAAS,EAAE;IAAK,CAAC;IAEtB,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBZ,IAAI,CAAC,mBAAmB,EAAE,KAAK;IACjC;IAEA,MAAMa,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,IAAI,GAAAC,aAAA,CAAAA,aAAA,KACLb,QAAQ,CAACO,KAAK;QACjBN,IAAI,EAAED,QAAQ,CAACO,KAAK,CAACN,IAAI,CAACa,IAAI,CAAC,CAAC;QAChCX,aAAa,EAAEH,QAAQ,CAACO,KAAK,CAACJ,aAAa,EAAEW,IAAI,CAAC,CAAC,IAAI,EAAE;QACzDV,KAAK,EAAEJ,QAAQ,CAACO,KAAK,CAACH,KAAK,EAAEU,IAAI,CAAC,CAAC,IAAI;MAAC,EAC1C;;MAEA;MACA,IAAI,CAACF,IAAI,CAACJ,EAAE,EAAE;QACZ,OAAOI,IAAI,CAACJ,EAAC;MACf;MAEAV,IAAI,CAAC,QAAQ,EAAEc,IAAI;IACrB;;IAEA;IACA,MAAMG,cAAc,GAAG;MACrB,QAAQ,EAAE,IAAI;MACd,UAAU,EAAE,IAAI;MAChB,cAAc,EAAE,IAAI;MACpB,OAAO,EAAE;IACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
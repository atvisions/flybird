{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { useList } from \"./list.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useNestedGroupActivator, useNestedItem } from \"../../composables/nested/nested.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { defineComponent, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n  setup(_, _ref) {\n    let {\n      slots\n    } = _ref;\n    useNestedGroupActivator();\n    return () => slots.default?.();\n  }\n});\nexport const makeVListGroupProps = propsFactory(_objectSpread(_objectSpread({\n  /* @deprecated */\n  activeColor: String,\n  baseColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse'\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand'\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  title: String,\n  value: null\n}, makeComponentProps()), makeTagProps()), 'VListGroup');\nexport const VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: makeVListGroupProps(),\n  setup(props, _ref2) {\n    let {\n      slots\n    } = _ref2;\n    const {\n      isOpen,\n      open,\n      id: _id\n    } = useNestedItem(toRef(props, 'value'), true);\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`);\n    const list = useList();\n    const {\n      isBooted\n    } = useSsrBoot();\n    function onClick(e) {\n      e.stopPropagation();\n      open(!isOpen.value, e);\n    }\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value\n    }));\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon);\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        baseColor: props.baseColor,\n        color: props.color,\n        prependIcon: props.prependIcon || props.subgroup && toggleIcon.value,\n        appendIcon: props.appendIcon || !props.subgroup && toggleIcon.value,\n        title: props.title,\n        value: props.value\n      }\n    }));\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-list-group', {\n        'v-list-group--prepend': list?.hasPrepend.value,\n        'v-list-group--fluid': props.fluid,\n        'v-list-group--subgroup': props.subgroup,\n        'v-list-group--open': isOpen.value\n      }, props.class],\n      \"style\": props.style\n    }, {\n      default: () => [slots.activator && _createVNode(VDefaultsProvider, {\n        \"defaults\": activatorDefaults.value\n      }, {\n        default: () => [_createVNode(VListGroupActivator, null, {\n          default: () => [slots.activator({\n            props: activatorProps.value,\n            isOpen: isOpen.value\n          })]\n        })]\n      }), _createVNode(MaybeTransition, {\n        \"transition\": {\n          component: VExpandTransition\n        },\n        \"disabled\": !isBooted.value\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-list-group__items\",\n          \"role\": \"group\",\n          \"aria-labelledby\": id.value\n        }, [slots.default?.()]), [[_vShow, isOpen.value]])]\n      })]\n    }));\n    return {\n      isOpen\n    };\n  }\n});","map":{"version":3,"names":["VExpandTransition","VDefaultsProvider","useList","makeComponentProps","IconValue","useNestedGroupActivator","useNestedItem","useSsrBoot","makeTagProps","MaybeTransition","computed","toRef","defineComponent","genericComponent","propsFactory","useRender","VListGroupActivator","name","setup","_","_ref","slots","default","makeVListGroupProps","_objectSpread","activeColor","String","baseColor","color","collapseIcon","type","expandIcon","prependIcon","appendIcon","fluid","Boolean","subgroup","title","value","VListGroup","props","_ref2","isOpen","open","id","_id","list","isBooted","onClick","e","stopPropagation","activatorProps","class","toggleIcon","activatorDefaults","VListItem","active","_createVNode","tag","hasPrepend","style","activator","component","_withDirectives","_vShow"],"sources":["../../../src/components/VList/VListGroup.tsx"],"sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\n\n// Composables\nimport { useList } from './list'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue } from '@/composables/icons'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { makeTagProps } from '@/composables/tag'\nimport { MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VListGroupSlots = {\n  default: never\n  activator: { isOpen: boolean, props: Record<string, unknown> }\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const makeVListGroupProps = propsFactory({\n  /* @deprecated */\n  activeColor: String,\n  baseColor: String,\n  color: String,\n  collapseIcon: {\n    type: IconValue,\n    default: '$collapse',\n  },\n  expandIcon: {\n    type: IconValue,\n    default: '$expand',\n  },\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n  fluid: Boolean,\n  subgroup: Boolean,\n  title: String,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListGroup')\n\nexport const VListGroup = genericComponent<VListGroupSlots>()({\n  name: 'VListGroup',\n\n  props: makeVListGroupProps(),\n\n  setup (props, { slots }) {\n    const { isOpen, open, id: _id } = useNestedItem(toRef(props, 'value'), true)\n    const id = computed(() => `v-list-group--id-${String(_id.value)}`)\n    const list = useList()\n    const { isBooted } = useSsrBoot()\n\n    function onClick (e: Event) {\n      e.stopPropagation()\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps = computed(() => ({\n      onClick,\n      class: 'v-list-group__header',\n      id: id.value,\n    }))\n\n    const toggleIcon = computed(() => isOpen.value ? props.collapseIcon : props.expandIcon)\n    const activatorDefaults = computed(() => ({\n      VListItem: {\n        active: isOpen.value,\n        activeColor: props.activeColor,\n        baseColor: props.baseColor,\n        color: props.color,\n        prependIcon: props.prependIcon || (props.subgroup && toggleIcon.value),\n        appendIcon: props.appendIcon || (!props.subgroup && toggleIcon.value),\n        title: props.title,\n        value: props.value,\n      },\n    }))\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-list-group',\n          {\n            'v-list-group--prepend': list?.hasPrepend.value,\n            'v-list-group--fluid': props.fluid,\n            'v-list-group--subgroup': props.subgroup,\n            'v-list-group--open': isOpen.value,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots.activator && (\n          <VDefaultsProvider defaults={ activatorDefaults.value }>\n            <VListGroupActivator>\n              { slots.activator({ props: activatorProps.value, isOpen: isOpen.value }) }\n            </VListGroupActivator>\n          </VDefaultsProvider>\n        )}\n\n        <MaybeTransition transition={{ component: VExpandTransition }} disabled={ !isBooted.value }>\n          <div class=\"v-list-group__items\" role=\"group\" aria-labelledby={ id.value } v-show={ isOpen.value }>\n            { slots.default?.() }\n          </div>\n        </MaybeTransition>\n      </props.tag>\n    ))\n\n    return {\n      isOpen,\n    }\n  },\n})\n\nexport type VListGroup = InstanceType<typeof VListGroup>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, computed } from 'vue';\nimport { InboxIcon, PencilSquareIcon } from '@heroicons/vue/24/outline';\nimport { ElMessage } from 'element-plus';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\n\n// 消息类型标签\n\nexport default {\n  __name: 'MyMessages',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const messageTabs = [{\n      key: 'all',\n      label: '全部消息',\n      unread: 5\n    }, {\n      key: 'system',\n      label: '系统通知',\n      unread: 2\n    }, {\n      key: 'private',\n      label: '私信',\n      unread: 3\n    }];\n    const currentMessageTab = ref('all');\n    const loading = ref(false);\n    const hasMore = ref(true);\n\n    // 模拟消息数据\n    const messages = ref([{\n      id: 1,\n      sender: '系统通知',\n      avatar: 'https://picsum.photos/32/32?random=1',\n      content: '欢迎加入飞鸟社区！',\n      time: '刚刚',\n      unread: true,\n      type: 'system'\n    }, {\n      id: 2,\n      sender: '张三',\n      avatar: 'https://picsum.photos/32/32?random=2',\n      content: '你好，我看了你的文章很受启发',\n      time: '10分钟前',\n      unread: true,\n      type: 'private'\n    }\n    // 添加更多消息...\n    ]);\n\n    // 根据当前标签筛选消息\n    const currentMessages = computed(() => {\n      if (currentMessageTab.value === 'all') {\n        return messages.value;\n      }\n      return messages.value.filter(msg => msg.type === currentMessageTab.value);\n    });\n\n    // 处理消息点击\n    const handleMessageClick = message => {\n      // 标记消息为已读\n      message.unread = false;\n      // TODO: 打开消息详情\n      showToast('消息功能开发中...', 'info');\n    };\n\n    // 加载更多消息\n    const loadMore = async () => {\n      if (loading.value) return;\n      loading.value = true;\n      try {\n        // TODO: 调用API加载更多消息\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        // 模拟加载完成\n        hasMore.value = false;\n      } catch (error) {\n        showToast('加载失败，请重试', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 打开新消息对话框\n    const openNewMessage = () => {\n      showToast('新消息功能开发中...', 'info');\n    };\n\n    // 处理图片加载错误\n    const handleImageError = e => {\n      e.target.src = defaultAvatar;\n    };\n\n    // 标记消息已读\n    const markAsRead = async message => {\n      try {\n        // TODO: 调用API标记消息已读\n        message.unread = false;\n        ElMessage.success('已标记为已读');\n      } catch (error) {\n        ElMessage.error('操作失败，请重试');\n      }\n    };\n\n    // 删除消息\n    const deleteMessage = async message => {\n      try {\n        // TODO: 调用API删除消息\n        messages.value = messages.value.filter(msg => msg.id !== message.id);\n        ElMessage.success('删除成功');\n      } catch (error) {\n        ElMessage.error('删除失败，请重试');\n      }\n    };\n    const __returned__ = {\n      messageTabs,\n      currentMessageTab,\n      loading,\n      hasMore,\n      messages,\n      currentMessages,\n      handleMessageClick,\n      loadMore,\n      openNewMessage,\n      handleImageError,\n      markAsRead,\n      deleteMessage,\n      ref,\n      computed,\n      get InboxIcon() {\n        return InboxIcon;\n      },\n      get PencilSquareIcon() {\n        return PencilSquareIcon;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get defaultAvatar() {\n        return defaultAvatar;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","InboxIcon","PencilSquareIcon","ElMessage","defaultAvatar","messageTabs","key","label","unread","currentMessageTab","loading","hasMore","messages","id","sender","avatar","content","time","type","currentMessages","value","filter","msg","handleMessageClick","message","showToast","loadMore","Promise","resolve","setTimeout","error","openNewMessage","handleImageError","e","target","src","markAsRead","success","deleteMessage"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/MyMessages.vue"],"sourcesContent":["<template>\n  <div class=\"messages-container\">\n    <!-- 消息类型切换 -->\n    <div class=\"bg-white rounded-lg shadow mb-4\">\n      <div class=\"flex\">\n        <button\n          v-for=\"tab in messageTabs\"\n          :key=\"tab.key\"\n          @click=\"currentMessageTab = tab.key\"\n          class=\"flex-1 px-4 py-3 text-sm font-medium relative border-b-2 transition-colors\"\n          :class=\"[\n            currentMessageTab === tab.key\n              ? 'text-indigo-600 border-indigo-600'\n              : 'text-gray-500 hover:text-gray-700 border-transparent hover:border-gray-300'\n          ]\"\n        >\n          {{ tab.label }}\n          <span \n            v-if=\"tab.unread\" \n            class=\"absolute -top-1 -right-1 min-w-[16px] h-4 bg-red-500 rounded-full text-[10px] font-medium text-white flex items-center justify-center px-1\"\n          >\n            {{ tab.unread }}\n          </span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 消息列表 -->\n    <div class=\"bg-white rounded-lg shadow overflow-hidden\">\n      <!-- 空状态 -->\n      <div v-if=\"!currentMessages.length\" class=\"p-8 text-center\">\n        <InboxIcon class=\"mx-auto h-12 w-12 text-gray-400\" />\n        <h3 class=\"mt-2 text-sm font-medium text-gray-900\">暂无消息</h3>\n        <p class=\"mt-1 text-sm text-gray-500\">当有新消息时会在这里显示</p>\n      </div>\n\n      <!-- 消息列表 -->\n      <div v-else class=\"divide-y divide-gray-100\">\n        <div \n          v-for=\"message in currentMessages\" \n          :key=\"message.id\"\n          class=\"p-4 hover:bg-gray-50 transition-colors cursor-pointer group\"\n          :class=\"{ 'bg-indigo-50/50': message.unread }\"\n          @click=\"handleMessageClick(message)\"\n        >\n          <div class=\"flex items-start space-x-3\">\n            <img \n              :src=\"message.avatar\" \n              :alt=\"message.sender\"\n              class=\"w-10 h-10 rounded-full flex-shrink-0\"\n              @error=\"handleImageError\"\n            />\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-2\">\n                  <p class=\"text-sm font-medium text-gray-900\">{{ message.sender }}</p>\n                  <span \n                    v-if=\"message.type === 'system'\"\n                    class=\"px-2 py-0.5 text-xs bg-indigo-100 text-indigo-800 rounded-full\"\n                  >\n                    系统\n                  </span>\n                </div>\n                <span class=\"text-xs text-gray-500\">{{ message.time }}</span>\n              </div>\n              <p class=\"text-sm text-gray-600 line-clamp-2 mt-1\">{{ message.content }}</p>\n              <!-- 操作按钮 -->\n              <div class=\"mt-2 flex items-center justify-end space-x-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                <button\n                  v-if=\"message.unread\"\n                  @click.stop=\"markAsRead(message)\"\n                  class=\"text-xs text-indigo-600 hover:text-indigo-700\"\n                >\n                  标记已读\n                </button>\n                <button\n                  @click.stop=\"deleteMessage(message)\"\n                  class=\"text-xs text-gray-500 hover:text-red-600\"\n                >\n                  删除\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 加载更多 -->\n      <div \n        v-if=\"currentMessages.length && hasMore\" \n        class=\"p-4 text-center border-t\"\n      >\n        <button \n          @click=\"loadMore\"\n          class=\"text-sm text-indigo-600 hover:text-indigo-700\"\n          :disabled=\"loading\"\n        >\n          {{ loading ? '加载中...' : '加载更多' }}\n        </button>\n      </div>\n    </div>\n\n    <!-- 新消息按钮 -->\n    <button\n      class=\"fixed right-4 bottom-20 lg:bottom-4 bg-indigo-600 text-white rounded-full p-3 shadow-lg hover:bg-indigo-700 transition-colors\"\n      @click=\"openNewMessage\"\n    >\n      <PencilSquareIcon class=\"w-6 h-6\" />\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { InboxIcon, PencilSquareIcon } from '@heroicons/vue/24/outline'\nimport { ElMessage } from 'element-plus'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\n// 消息类型标签\nconst messageTabs = [\n  { key: 'all', label: '全部消息', unread: 5 },\n  { key: 'system', label: '系统通知', unread: 2 },\n  { key: 'private', label: '私信', unread: 3 }\n]\n\nconst currentMessageTab = ref('all')\nconst loading = ref(false)\nconst hasMore = ref(true)\n\n// 模拟消息数据\nconst messages = ref([\n  {\n    id: 1,\n    sender: '系统通知',\n    avatar: 'https://picsum.photos/32/32?random=1',\n    content: '欢迎加入飞鸟社区！',\n    time: '刚刚',\n    unread: true,\n    type: 'system'\n  },\n  {\n    id: 2,\n    sender: '张三',\n    avatar: 'https://picsum.photos/32/32?random=2',\n    content: '你好，我看了你的文章很受启发',\n    time: '10分钟前',\n    unread: true,\n    type: 'private'\n  },\n  // 添加更多消息...\n])\n\n// 根据当前标签筛选消息\nconst currentMessages = computed(() => {\n  if (currentMessageTab.value === 'all') {\n    return messages.value\n  }\n  return messages.value.filter(msg => msg.type === currentMessageTab.value)\n})\n\n// 处理消息点击\nconst handleMessageClick = (message) => {\n  // 标记消息为已读\n  message.unread = false\n  // TODO: 打开消息详情\n  showToast('消息功能开发中...', 'info')\n}\n\n// 加载更多消息\nconst loadMore = async () => {\n  if (loading.value) return\n  loading.value = true\n  try {\n    // TODO: 调用API加载更多消息\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    // 模拟加载完成\n    hasMore.value = false\n  } catch (error) {\n    showToast('加载失败，请重试', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 打开新消息对话框\nconst openNewMessage = () => {\n  showToast('新消息功能开发中...', 'info')\n}\n\n// 处理图片加载错误\nconst handleImageError = (e) => {\n  e.target.src = defaultAvatar\n}\n\n// 标记消息已读\nconst markAsRead = async (message) => {\n  try {\n    // TODO: 调用API标记消息已读\n    message.unread = false\n    ElMessage.success('已标记为已读')\n  } catch (error) {\n    ElMessage.error('操作失败，请重试')\n  }\n}\n\n// 删除消息\nconst deleteMessage = async (message) => {\n  try {\n    // TODO: 调用API删除消息\n    messages.value = messages.value.filter(msg => msg.id !== message.id)\n    ElMessage.success('删除成功')\n  } catch (error) {\n    ElMessage.error('删除失败，请重试')\n  }\n}\n</script>\n\n<style scoped>\n.messages-container {\n  min-height: calc(100vh - 64px - 56px); /* 减去头部和底部导航的高度 */\n  padding-bottom: 80px; /* 为新消息按钮预留空间 */\n}\n\n@media (min-width: 1024px) {\n  .messages-container {\n    min-height: calc(100vh - 64px);\n    padding-bottom: 60px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
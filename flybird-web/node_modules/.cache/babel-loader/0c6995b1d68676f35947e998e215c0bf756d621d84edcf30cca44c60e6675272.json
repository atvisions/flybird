{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" No changes to template section \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/AccountSettings.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { showToast } from '@/components/ToastMessage'\nimport { useDeleteAccount } from '@/composables/useDeleteAccount'\nimport { usePhone } from '@/composables/usePhone'\nimport { useEmail } from '@/composables/useEmail'\nimport { useChangePassword } from '@/composables/useChangePassword'\nimport { ElMessageBox } from 'element-plus'\nimport { account } from '@/api/account'\nimport { useAuthStore } from '@/stores/auth'\nimport { useUserStore } from '@/stores/user'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\nconst userStore = useUserStore()\n\n// No changes to previous code until handleEmailSendCode function\n\n// 处理邮箱更新的验证码发送\nconst handleEmailSendCode = async () => {\n  if (!emailManager.state.value) {\n    showToast('请输入新邮箱', 'warning')\n    return\n  }\n  \n  if (!emailManager.state.password) {\n    showToast('请输入登录密码', 'warning')\n    return\n  }\n  \n  // 验证邮箱格式\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (!emailRegex.test(emailManager.state.value)) {\n    showToast('请输入正确的邮箱格式', 'warning')\n    return\n  }\n  \n  try {\n    emailManager.state.loading = true\n    console.log('Sending code request with:', {\n      email: emailManager.state.value,\n      password: emailManager.state.password.trim()\n    })\n    const response = await account.sendEmailCode({\n      email: emailManager.state.value,\n      password: emailManager.state.password.trim()\n    })\n    \n    if (response?.data?.message) {\n      showToast(response.data.message, 'success')\n      startEmailCountdown()\n    }\n  } catch (error) {\n    console.error('发送验证码失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.message || \n                    '发送验证码失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    emailManager.state.loading = false\n  }\n}\n\n// No changes to rest of the code\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style>"],"mappings":";;SACEA,mBAAA,oCAAuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, watch, onUnmounted, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { DocumentArrowUpIcon, DocumentIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport profile from '@/api/profile';\nimport { eventBus } from '@/utils/eventBus';\nexport default {\n  __name: 'ResumeImport',\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['update:modelValue', 'success'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 对话框显示状态\n    const dialogVisible = ref(false);\n\n    // 监听 modelValue 变化\n    watch(() => props.modelValue, val => {\n      dialogVisible.value = val;\n    });\n\n    // 监听对话框状态变化\n    watch(() => dialogVisible.value, val => {\n      emit('update:modelValue', val);\n    });\n\n    // 关闭对话框\n    const closeDialog = () => {\n      dialogVisible.value = false;\n      // 清除已选文件\n      clearFile();\n    };\n\n    // 组件状态\n    const showImportDialog = ref(false);\n    const showPreviewDialog = ref(false);\n    const fileInput = ref(null);\n    const selectedFile = ref(null);\n    const importing = ref(false);\n    const importProgress = ref(0);\n    const previewData = ref(null);\n\n    // 添加模拟进度的定时器\n    const progressTimer = ref(null);\n\n    // 开始模拟进度\n    const startProgressSimulation = () => {\n      importProgress.value = 0;\n      progressTimer.value = setInterval(() => {\n        if (importProgress.value < 90) {\n          // 前30%快速增加\n          if (importProgress.value < 30) {\n            importProgress.value += 5;\n          }\n          // 30-60%中速增加\n          else if (importProgress.value < 60) {\n            importProgress.value += 2;\n          }\n          // 60-90%慢速增加\n          else {\n            importProgress.value += 0.5;\n          }\n        }\n      }, 1000);\n    };\n\n    // 停止模拟进度\n    const stopProgressSimulation = () => {\n      if (progressTimer.value) {\n        clearInterval(progressTimer.value);\n        progressTimer.value = null;\n      }\n    };\n\n    // 字段标签映射\n    const fieldLabels = {\n      basic_info: {\n        name: '姓名',\n        gender: '性别',\n        birth_date: '出生日期',\n        phone: '手机号',\n        email: '邮箱',\n        location: '所在地',\n        personal_summary: '个人简介',\n        avatar: '头像'\n      },\n      work_experience: {\n        company: '公司名称',\n        position: '职位',\n        department: '部门',\n        start_date: '入职时间',\n        end_date: '离职时间',\n        is_current: '是否在职',\n        description: '工作描述',\n        achievements: '工作成就',\n        technologies: '技术栈'\n      },\n      education: {\n        school: '学校名称',\n        major: '专业',\n        degree: '学历',\n        start_date: '入学时间',\n        end_date: '毕业时间',\n        is_current: '是否在读',\n        description: '在校经历',\n        achievements: '在校成就'\n      },\n      project: {\n        name: '项目名称',\n        role: '担任角色',\n        start_date: '开始日期',\n        end_date: '结束日期',\n        is_current: '是否进行中',\n        description: '项目描述',\n        achievement: '项目成果'\n      },\n      skill: {\n        name: '技能名称',\n        level: '熟练程度',\n        description: '技能描述',\n        projects: '相关项目'\n      },\n      language: {\n        name: '语言名称',\n        proficiency: '熟练程度',\n        certification: '语言证书',\n        score: '考试分数'\n      },\n      social_link: {\n        platform: '平台名称',\n        url: '链接地址',\n        description: '链接描述'\n      }\n    };\n\n    // 获取字段标签\n    const getFieldLabel = (module, key) => {\n      return fieldLabels[module]?.[key] || key;\n    };\n\n    // 触发文件选择\n    const triggerFileInput = () => {\n      fileInput.value.click();\n    };\n\n    // 处理文件拖放\n    const handleDrop = event => {\n      const file = event.dataTransfer.files[0];\n      if (validateFile(file)) {\n        selectedFile.value = file;\n      }\n    };\n\n    // 处理文件选择\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (validateFile(file)) {\n        selectedFile.value = file;\n      }\n    };\n\n    // 验证文件\n    const validateFile = file => {\n      const allowedTypes = ['application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/pdf', 'image/jpeg', 'image/png'];\n      if (!allowedTypes.includes(file.type)) {\n        ElMessage.error('请上传 Word、PDF 或图片格式的文件');\n        return false;\n      }\n      const maxSize = 10 * 1024 * 1024; // 10MB\n      if (file.size > maxSize) {\n        ElMessage.error('文件大小不能超过 10MB');\n        return false;\n      }\n      return true;\n    };\n\n    // 清除已选文件\n    const clearFile = () => {\n      selectedFile.value = null;\n      fileInput.value.value = '';\n    };\n\n    // 处理导入\n    const handleImport = async file => {\n      try {\n        importing.value = true;\n        importProgress.value = 10;\n        const formData = new FormData();\n        formData.append('file', file);\n        const response = await profile.parseResume(formData);\n        console.log('原始响应:', response);\n        console.log('响应数据:', response.data);\n        if (response.data) {\n          const data = response.data.data || response.data;\n          console.log('处理前的数据:', JSON.stringify(data, null, 2));\n\n          // 处理基本信息\n          if (!data.basic_info) {\n            data.basic_info = {};\n          }\n\n          // 确保所有必要的字段都存在\n          data.basic_info = {\n            name: data.basic_info.name || '',\n            gender: data.basic_info.gender || '',\n            birth_date: data.basic_info.birth_date || '',\n            phone: data.basic_info.phone || '',\n            email: data.basic_info.email || '',\n            location: data.basic_info.location || '',\n            summary: data.basic_info.summary || data.basic_info.personal_summary || data.basic_info.description || data.basic_info.self_evaluation || '',\n            photo: data.basic_info.photo || data.basic_info.avatar || data.basic_info.head_img || ''\n          };\n\n          // 处理教育经历\n          let eduData = data.education || data.educations || [];\n          if (!Array.isArray(eduData)) {\n            eduData = [eduData];\n          }\n          data.education = eduData.map(edu => ({\n            school: edu.school || edu.university || edu.institution || '',\n            major: edu.major || edu.speciality || '',\n            degree: edu.degree || edu.education_level || '',\n            start_date: formatDate(edu.start_date),\n            end_date: formatDate(edu.end_date),\n            is_current: edu.is_current || false,\n            description: edu.description || '',\n            achievements: edu.achievements || ''\n          }));\n\n          // 处理工作经验\n          let workExp = data.work_experiences || data.work_experience || [];\n          if (!Array.isArray(workExp)) {\n            workExp = [workExp];\n          }\n          data.work_experiences = workExp.map(work => ({\n            company: work.company || '',\n            position: work.position || '',\n            department: work.department || '',\n            start_date: formatDate(work.start_date),\n            end_date: formatDate(work.end_date),\n            is_current: work.is_current || false,\n            description: work.description || '',\n            achievements: work.achievements || '',\n            technologies: work.technologies || ''\n          }));\n\n          // 处理项目经验\n          let projects = data.projects || data.project || [];\n          if (!Array.isArray(projects)) {\n            projects = [projects];\n          }\n          data.projects = projects.map(proj => ({\n            name: proj.name || '',\n            role: proj.role || '',\n            start_date: formatDate(proj.start_date),\n            end_date: formatDate(proj.end_date),\n            is_current: proj.is_current || false,\n            description: proj.description || '',\n            achievement: proj.achievement || ''\n          }));\n\n          // 处理技能\n          let skills = data.skills || data.skill || [];\n          if (!Array.isArray(skills)) {\n            skills = [skills];\n          }\n          data.skills = skills.slice(0, 5).map(skill => {\n            if (typeof skill === 'string') {\n              return {\n                name: skill.slice(0, 50),\n                level: '熟练',\n                description: '',\n                projects: []\n              };\n            }\n            return {\n              name: (skill.name || '').slice(0, 50),\n              level: skill.level || '熟练',\n              description: (skill.description || '').slice(0, 500),\n              projects: Array.isArray(skill.projects) ? skill.projects.slice(0, 3) : []\n            };\n          });\n          console.log('最终处理后的数据:', JSON.stringify(data, null, 2));\n          previewData.value = data;\n          importProgress.value = 100;\n          importing.value = false;\n          dialogVisible.value = false;\n          await nextTick();\n          showPreviewDialog.value = true;\n          ElMessage.success('简历解析成功，请确认数据后导入');\n        }\n      } catch (error) {\n        console.error('简历解析失败:', error);\n        ElMessage.error('简历解析失败，请稍后重试');\n        importing.value = false;\n        importProgress.value = 0;\n      }\n    };\n\n    // 格式化日期\n    const formatDate = dateStr => {\n      if (!dateStr) return null;\n      // 处理 YYYY.MM 格式\n      if (/^\\d{4}\\.\\d{2}$/.test(dateStr)) {\n        return `${dateStr.replace('.', '-')}-01`;\n      }\n      // 处理 YYYY 格式\n      if (/^\\d{4}$/.test(dateStr)) {\n        return `${dateStr}-01-01`;\n      }\n      return dateStr;\n    };\n\n    // 处理所有日期字段和格式化数据\n    const formatDates = data => {\n      if (!data) return data;\n\n      // 深拷贝数据以避免直接修改预览数据\n      const formattedData = JSON.parse(JSON.stringify(data));\n\n      // 处理工作经历日期\n      if (formattedData.work_experiences) {\n        formattedData.work_experiences = formattedData.work_experiences.map(exp => _objectSpread(_objectSpread({}, exp), {}, {\n          start_date: formatDate(exp.start_date),\n          end_date: formatDate(exp.end_date)\n        }));\n      }\n\n      // 处理教育经历日期\n      if (formattedData.education) {\n        formattedData.education = formattedData.education.map(edu => _objectSpread(_objectSpread({}, edu), {}, {\n          start_date: formatDate(edu.start_date),\n          end_date: formatDate(edu.end_date)\n        }));\n      }\n\n      // 处理项目经历日期\n      if (formattedData.projects) {\n        formattedData.projects = formattedData.projects.map(proj => _objectSpread(_objectSpread({}, proj), {}, {\n          start_date: formatDate(proj.start_date),\n          end_date: formatDate(proj.end_date)\n        }));\n      }\n\n      // 处理技能特长格式\n      if (formattedData.skills && Array.isArray(formattedData.skills)) {\n        formattedData.skills = formattedData.skills.map(skill => {\n          if (typeof skill === 'string') {\n            return {\n              name: skill.slice(0, 50),\n              // 限制长度为50\n              level: '熟练',\n              description: '',\n              projects: []\n            };\n          }\n          return _objectSpread(_objectSpread({}, skill), {}, {\n            name: skill.name.slice(0, 50),\n            // 限制长度为50\n            description: (skill.description || '').slice(0, 500),\n            projects: Array.isArray(skill.projects) ? skill.projects.slice(0, 3) : []\n          });\n        });\n      }\n      return formattedData;\n    };\n\n    // 确认导入\n    const confirmImport = async () => {\n      if (!previewData.value) {\n        ElMessage.warning('没有可导入的数据');\n        return;\n      }\n      try {\n        importing.value = true;\n\n        // 格式化日期后再提交\n        const formattedData = formatDates(previewData.value);\n        console.log('格式化后的数据:', formattedData);\n\n        // 提交导入数据\n        const response = await profile.importResumeData(formattedData);\n        if (response.data?.code === 200 || response.status === 200) {\n          ElMessage.success('导入成功');\n          showPreviewDialog.value = false;\n          dialogVisible.value = false;\n          // 触发数据更新事件\n          eventBus.emit('profile-updated');\n          // 触发完整度更新事件\n          eventBus.emit('completeness-updated');\n          // 刷新用户信息\n          await profile.getData();\n          // 触发成功回调\n          emit('success');\n        } else {\n          throw new Error('导入失败');\n        }\n      } catch (error) {\n        console.error('数据导入失败:', error);\n        ElMessage.error({\n          message: error.message || '数据导入失败，请重试',\n          duration: 5000,\n          showClose: true\n        });\n      } finally {\n        importing.value = false;\n      }\n    };\n\n    // 监听预览对话框状态变化\n    watch(() => showPreviewDialog.value, val => {\n      console.log('预览对话框状态变化:', val);\n      console.log('当前预览数据:', previewData.value);\n      if (!val) {\n        // 如果预览对话框关闭，重置预览数据\n        previewData.value = null;\n        console.log('预览数据已重置');\n      }\n    });\n\n    // 组件卸载时清理定时器\n    onUnmounted(() => {\n      stopProgressSimulation();\n    });\n    const __returned__ = {\n      props,\n      emit,\n      dialogVisible,\n      closeDialog,\n      showImportDialog,\n      showPreviewDialog,\n      fileInput,\n      selectedFile,\n      importing,\n      importProgress,\n      previewData,\n      progressTimer,\n      startProgressSimulation,\n      stopProgressSimulation,\n      fieldLabels,\n      getFieldLabel,\n      triggerFileInput,\n      handleDrop,\n      handleFileChange,\n      validateFile,\n      clearFile,\n      handleImport,\n      formatDate,\n      formatDates,\n      confirmImport,\n      ref,\n      watch,\n      onUnmounted,\n      nextTick,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get DocumentArrowUpIcon() {\n        return DocumentArrowUpIcon;\n      },\n      get DocumentIcon() {\n        return DocumentIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get profile() {\n        return profile;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onUnmounted","nextTick","ElMessage","DocumentArrowUpIcon","DocumentIcon","XMarkIcon","profile","eventBus","props","__props","emit","__emit","dialogVisible","modelValue","val","value","closeDialog","clearFile","showImportDialog","showPreviewDialog","fileInput","selectedFile","importing","importProgress","previewData","progressTimer","startProgressSimulation","setInterval","stopProgressSimulation","clearInterval","fieldLabels","basic_info","name","gender","birth_date","phone","email","location","personal_summary","avatar","work_experience","company","position","department","start_date","end_date","is_current","description","achievements","technologies","education","school","major","degree","project","role","achievement","skill","level","projects","language","proficiency","certification","score","social_link","platform","url","getFieldLabel","module","key","triggerFileInput","click","handleDrop","event","file","dataTransfer","files","validateFile","handleFileChange","target","allowedTypes","includes","type","error","maxSize","size","handleImport","formData","FormData","append","response","parseResume","console","log","data","JSON","stringify","summary","self_evaluation","photo","head_img","eduData","educations","Array","isArray","map","edu","university","institution","speciality","education_level","formatDate","workExp","work_experiences","work","proj","skills","slice","success","dateStr","test","replace","formatDates","formattedData","parse","exp","_objectSpread","confirmImport","warning","importResumeData","code","status","getData","Error","message","duration","showClose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/ResumeImport.vue"],"sourcesContent":["<template>\n  <div class=\"resume-import\">\n    <!-- 导入对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      title=\"导入简历\"\n      width=\"500px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"p-4\">\n        <!-- 上传区域 -->\n        <div\n          class=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\"\n          @drop.prevent=\"handleDrop\"\n          @dragover.prevent\n          @click=\"triggerFileInput\"\n        >\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            class=\"hidden\"\n            @change=\"handleFileChange\"\n            accept=\".doc,.docx,.pdf,.jpg,.jpeg,.png\"\n          />\n          <div class=\"space-y-2\">\n            <DocumentArrowUpIcon class=\"w-12 h-12 mx-auto text-gray-400\" />\n            <div class=\"text-sm text-gray-600\">\n              <span class=\"font-medium text-blue-600 hover:text-blue-500\">\n                点击上传\n              </span>\n              或将文件拖拽到这里\n            </div>\n            <p class=\"text-xs text-gray-500\">\n              支持 Word、PDF、JPG 格式文件\n            </p>\n          </div>\n        </div>\n\n        <!-- 文件信息 -->\n        <div v-if=\"selectedFile\" class=\"mt-4\">\n          <div class=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n            <div class=\"flex items-center space-x-2\">\n              <DocumentIcon class=\"w-5 h-5 text-gray-400\" />\n              <span class=\"text-sm text-gray-900\">{{ selectedFile.name }}</span>\n            </div>\n            <button\n              @click=\"clearFile\"\n              class=\"text-gray-400 hover:text-gray-500\"\n            >\n              <XMarkIcon class=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- 导入进度 -->\n        <div v-if=\"importing\" class=\"mt-4\">\n          <div class=\"flex items-center justify-between\">\n            <span class=\"text-sm text-gray-500\">正在解析文件...</span>\n            <span class=\"text-sm text-gray-500\">{{ importProgress }}%</span>\n          </div>\n          <div class=\"mt-2 h-2 bg-gray-200 rounded-full\">\n            <div\n              class=\"h-2 bg-blue-600 rounded-full transition-all duration-300\"\n              :style=\"{ width: importProgress + '%' }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 对话框底部按钮 -->\n      <template #footer>\n        <div class=\"flex justify-end space-x-3\">\n          <el-button @click=\"closeDialog\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"handleImport(selectedFile)\"\n            :loading=\"importing\"\n            :disabled=\"!selectedFile\"\n          >\n            {{ importing ? '导入中...' : '开始导入' }}\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n\n    <!-- 预览对话框 -->\n    <el-dialog\n      v-model=\"showPreviewDialog\"\n      title=\"导入预览\"\n      width=\"800px\"\n      :close-on-click-modal=\"false\"\n    >\n      <div class=\"p-4\">\n        <div class=\"space-y-6\">\n          <!-- 基本信息 -->\n          <div v-if=\"previewData?.basic_info\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">基本信息</h3>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <!-- 头像显示 -->\n              <div v-if=\"previewData.basic_info.photo\" class=\"col-span-2 mb-4\">\n                <label class=\"block text-xs text-gray-500\">头像</label>\n                <div class=\"mt-1\">\n                  <img \n                    :src=\"previewData.basic_info.photo\" \n                    class=\"w-32 h-32 object-cover rounded-lg border border-gray-200\"\n                    alt=\"用户头像\"\n                  />\n                </div>\n              </div>\n              <!-- 个人简介 -->\n              <div v-if=\"previewData.basic_info.summary\" class=\"col-span-2\">\n                <label class=\"block text-xs text-gray-500\">个人简介</label>\n                <div class=\"mt-1\">\n                  <textarea\n                    v-model=\"previewData.basic_info.summary\"\n                    rows=\"3\"\n                    class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                  ></textarea>\n                </div>\n              </div>\n              <!-- 其他基本信息 -->\n              <div v-for=\"(value, key) in previewData.basic_info\" :key=\"key\">\n                <template v-if=\"!['photo', 'summary'].includes(key)\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('basic_info', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      v-model=\"previewData.basic_info[key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n\n          <!-- 工作经历 -->\n          <div v-if=\"previewData?.work_experiences?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">工作经历</h3>\n            <div v-for=\"(exp, index) in previewData.work_experiences\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in exp\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('work_experience', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievements', 'technologies'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.work_experiences[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.work_experiences[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 教育经历 -->\n          <div v-if=\"previewData?.education?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">教育经历</h3>\n            <div v-for=\"(edu, index) in previewData.education\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in edu\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('education', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievements'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.education[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.education[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 项目经历 -->\n          <div v-if=\"previewData?.projects?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">项目经历</h3>\n            <div v-for=\"(proj, index) in previewData.projects\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in proj\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('project', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description', 'achievement'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.projects[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.projects[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 技能特长 -->\n          <div v-if=\"previewData?.skills?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">技能特长</h3>\n            <div class=\"p-4 border rounded-lg\">\n              <div class=\"flex flex-wrap gap-2\">\n                <div v-for=\"(skill, index) in previewData.skills\" :key=\"index\" \n                  class=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-gray-100\">\n                  {{ skill.name }}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 学习经历 -->\n          <div v-if=\"previewData?.studies?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">学习经历</h3>\n            <div v-for=\"(study, index) in previewData.studies\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in study\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('study', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.studies[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.studies[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 语言能力 -->\n          <div v-if=\"previewData?.languages?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">语言能力</h3>\n            <div v-for=\"(lang, index) in previewData.languages\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in lang\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('language', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      v-model=\"previewData.languages[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 社交主页 -->\n          <div v-if=\"previewData?.social_links?.length\">\n            <h3 class=\"text-sm font-medium text-gray-900 mb-3\">社交主页</h3>\n            <div v-for=\"(link, index) in previewData.social_links\" :key=\"index\" class=\"mb-4 p-4 border rounded-lg\">\n              <div class=\"grid grid-cols-2 gap-4\">\n                <div v-for=\"(value, key) in link\" :key=\"key\">\n                  <label class=\"block text-xs text-gray-500\">{{ getFieldLabel('social_link', key) }}</label>\n                  <div class=\"mt-1\">\n                    <input\n                      v-if=\"!['description'].includes(key)\"\n                      type=\"text\"\n                      v-model=\"previewData.social_links[index][key]\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    />\n                    <textarea\n                      v-else\n                      v-model=\"previewData.social_links[index][key]\"\n                      rows=\"3\"\n                      class=\"block w-full border-gray-300 rounded-md shadow-sm text-sm\"\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 预览对话框底部按钮 -->\n      <template #footer>\n        <div class=\"flex justify-end space-x-3\">\n          <el-button @click=\"showPreviewDialog = false\">取消</el-button>\n          <el-button\n            type=\"primary\"\n            @click=\"confirmImport\"\n            :loading=\"importing\"\n          >\n            确认导入\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, onUnmounted, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport {\n  DocumentArrowUpIcon,\n  DocumentIcon,\n  XMarkIcon\n} from '@heroicons/vue/24/outline'\nimport profile from '@/api/profile'\nimport { eventBus } from '@/utils/eventBus'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'success'])\n\n// 对话框显示状态\nconst dialogVisible = ref(false)\n\n// 监听 modelValue 变化\nwatch(() => props.modelValue, (val) => {\n  dialogVisible.value = val\n})\n\n// 监听对话框状态变化\nwatch(() => dialogVisible.value, (val) => {\n  emit('update:modelValue', val)\n})\n\n// 关闭对话框\nconst closeDialog = () => {\n  dialogVisible.value = false\n  // 清除已选文件\n  clearFile()\n}\n\n// 组件状态\nconst showImportDialog = ref(false)\nconst showPreviewDialog = ref(false)\nconst fileInput = ref(null)\nconst selectedFile = ref(null)\nconst importing = ref(false)\nconst importProgress = ref(0)\nconst previewData = ref(null)\n\n// 添加模拟进度的定时器\nconst progressTimer = ref(null)\n\n// 开始模拟进度\nconst startProgressSimulation = () => {\n  importProgress.value = 0\n  progressTimer.value = setInterval(() => {\n    if (importProgress.value < 90) {\n      // 前30%快速增加\n      if (importProgress.value < 30) {\n        importProgress.value += 5\n      } \n      // 30-60%中速增加\n      else if (importProgress.value < 60) {\n        importProgress.value += 2\n      }\n      // 60-90%慢速增加\n      else {\n        importProgress.value += 0.5\n      }\n    }\n  }, 1000)\n}\n\n// 停止模拟进度\nconst stopProgressSimulation = () => {\n  if (progressTimer.value) {\n    clearInterval(progressTimer.value)\n    progressTimer.value = null\n  }\n}\n\n// 字段标签映射\nconst fieldLabels = {\n  basic_info: {\n    name: '姓名',\n    gender: '性别',\n    birth_date: '出生日期',\n    phone: '手机号',\n    email: '邮箱',\n    location: '所在地',\n    personal_summary: '个人简介',\n    avatar: '头像'\n  },\n  work_experience: {\n    company: '公司名称',\n    position: '职位',\n    department: '部门',\n    start_date: '入职时间',\n    end_date: '离职时间',\n    is_current: '是否在职',\n    description: '工作描述',\n    achievements: '工作成就',\n    technologies: '技术栈'\n  },\n  education: {\n    school: '学校名称',\n    major: '专业',\n    degree: '学历',\n    start_date: '入学时间',\n    end_date: '毕业时间',\n    is_current: '是否在读',\n    description: '在校经历',\n    achievements: '在校成就'\n  },\n  project: {\n    name: '项目名称',\n    role: '担任角色',\n    start_date: '开始日期',\n    end_date: '结束日期',\n    is_current: '是否进行中',\n    description: '项目描述',\n    achievement: '项目成果'\n  },\n  skill: {\n    name: '技能名称',\n    level: '熟练程度',\n    description: '技能描述',\n    projects: '相关项目'\n  },\n  language: {\n    name: '语言名称',\n    proficiency: '熟练程度',\n    certification: '语言证书',\n    score: '考试分数'\n  },\n  social_link: {\n    platform: '平台名称',\n    url: '链接地址',\n    description: '链接描述'\n  }\n}\n\n// 获取字段标签\nconst getFieldLabel = (module, key) => {\n  return fieldLabels[module]?.[key] || key\n}\n\n// 触发文件选择\nconst triggerFileInput = () => {\n  fileInput.value.click()\n}\n\n// 处理文件拖放\nconst handleDrop = (event) => {\n  const file = event.dataTransfer.files[0]\n  if (validateFile(file)) {\n    selectedFile.value = file\n  }\n}\n\n// 处理文件选择\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (validateFile(file)) {\n    selectedFile.value = file\n  }\n}\n\n// 验证文件\nconst validateFile = (file) => {\n  const allowedTypes = [\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/pdf',\n    'image/jpeg',\n    'image/png'\n  ]\n  \n  if (!allowedTypes.includes(file.type)) {\n    ElMessage.error('请上传 Word、PDF 或图片格式的文件')\n    return false\n  }\n  \n  const maxSize = 10 * 1024 * 1024 // 10MB\n  if (file.size > maxSize) {\n    ElMessage.error('文件大小不能超过 10MB')\n    return false\n  }\n  \n  return true\n}\n\n// 清除已选文件\nconst clearFile = () => {\n  selectedFile.value = null\n  fileInput.value.value = ''\n}\n\n// 处理导入\nconst handleImport = async (file) => {\n  try {\n    importing.value = true\n    importProgress.value = 10\n    \n    const formData = new FormData()\n    formData.append('file', file)\n    \n    const response = await profile.parseResume(formData)\n    console.log('原始响应:', response)\n    console.log('响应数据:', response.data)\n    \n    if (response.data) {\n      const data = response.data.data || response.data\n      console.log('处理前的数据:', JSON.stringify(data, null, 2))\n      \n      // 处理基本信息\n      if (!data.basic_info) {\n        data.basic_info = {}\n      }\n      \n      // 确保所有必要的字段都存在\n      data.basic_info = {\n        name: data.basic_info.name || '',\n        gender: data.basic_info.gender || '',\n        birth_date: data.basic_info.birth_date || '',\n        phone: data.basic_info.phone || '',\n        email: data.basic_info.email || '',\n        location: data.basic_info.location || '',\n        summary: data.basic_info.summary || \n                data.basic_info.personal_summary || \n                data.basic_info.description || \n                data.basic_info.self_evaluation || '',\n        photo: data.basic_info.photo || \n              data.basic_info.avatar || \n              data.basic_info.head_img || ''\n      }\n      \n      // 处理教育经历\n      let eduData = data.education || data.educations || []\n      if (!Array.isArray(eduData)) {\n        eduData = [eduData]\n      }\n      data.education = eduData.map(edu => ({\n        school: edu.school || edu.university || edu.institution || '',\n        major: edu.major || edu.speciality || '',\n        degree: edu.degree || edu.education_level || '',\n        start_date: formatDate(edu.start_date),\n        end_date: formatDate(edu.end_date),\n        is_current: edu.is_current || false,\n        description: edu.description || '',\n        achievements: edu.achievements || ''\n      }))\n      \n      // 处理工作经验\n      let workExp = data.work_experiences || data.work_experience || []\n      if (!Array.isArray(workExp)) {\n        workExp = [workExp]\n      }\n      data.work_experiences = workExp.map(work => ({\n        company: work.company || '',\n        position: work.position || '',\n        department: work.department || '',\n        start_date: formatDate(work.start_date),\n        end_date: formatDate(work.end_date),\n        is_current: work.is_current || false,\n        description: work.description || '',\n        achievements: work.achievements || '',\n        technologies: work.technologies || ''\n      }))\n      \n      // 处理项目经验\n      let projects = data.projects || data.project || []\n      if (!Array.isArray(projects)) {\n        projects = [projects]\n      }\n      data.projects = projects.map(proj => ({\n        name: proj.name || '',\n        role: proj.role || '',\n        start_date: formatDate(proj.start_date),\n        end_date: formatDate(proj.end_date),\n        is_current: proj.is_current || false,\n        description: proj.description || '',\n        achievement: proj.achievement || ''\n      }))\n      \n      // 处理技能\n      let skills = data.skills || data.skill || []\n      if (!Array.isArray(skills)) {\n        skills = [skills]\n      }\n      data.skills = skills.slice(0, 5).map(skill => {\n        if (typeof skill === 'string') {\n          return {\n            name: skill.slice(0, 50),\n            level: '熟练',\n            description: '',\n            projects: []\n          }\n        }\n        return {\n          name: (skill.name || '').slice(0, 50),\n          level: skill.level || '熟练',\n          description: (skill.description || '').slice(0, 500),\n          projects: Array.isArray(skill.projects) ? skill.projects.slice(0, 3) : []\n        }\n      })\n      \n      console.log('最终处理后的数据:', JSON.stringify(data, null, 2))\n      previewData.value = data\n      importProgress.value = 100\n      importing.value = false\n      dialogVisible.value = false\n      await nextTick()\n      showPreviewDialog.value = true\n      ElMessage.success('简历解析成功，请确认数据后导入')\n    }\n  } catch (error) {\n    console.error('简历解析失败:', error)\n    ElMessage.error('简历解析失败，请稍后重试')\n    importing.value = false\n    importProgress.value = 0\n  }\n}\n\n// 格式化日期\nconst formatDate = (dateStr) => {\n  if (!dateStr) return null\n  // 处理 YYYY.MM 格式\n  if (/^\\d{4}\\.\\d{2}$/.test(dateStr)) {\n    return `${dateStr.replace('.', '-')}-01`\n  }\n  // 处理 YYYY 格式\n  if (/^\\d{4}$/.test(dateStr)) {\n    return `${dateStr}-01-01`\n  }\n  return dateStr\n}\n\n// 处理所有日期字段和格式化数据\nconst formatDates = (data) => {\n  if (!data) return data\n  \n  // 深拷贝数据以避免直接修改预览数据\n  const formattedData = JSON.parse(JSON.stringify(data))\n  \n  // 处理工作经历日期\n  if (formattedData.work_experiences) {\n    formattedData.work_experiences = formattedData.work_experiences.map(exp => ({\n      ...exp,\n      start_date: formatDate(exp.start_date),\n      end_date: formatDate(exp.end_date)\n    }))\n  }\n  \n  // 处理教育经历日期\n  if (formattedData.education) {\n    formattedData.education = formattedData.education.map(edu => ({\n      ...edu,\n      start_date: formatDate(edu.start_date),\n      end_date: formatDate(edu.end_date)\n    }))\n  }\n  \n  // 处理项目经历日期\n  if (formattedData.projects) {\n    formattedData.projects = formattedData.projects.map(proj => ({\n      ...proj,\n      start_date: formatDate(proj.start_date),\n      end_date: formatDate(proj.end_date)\n    }))\n  }\n\n  // 处理技能特长格式\n  if (formattedData.skills && Array.isArray(formattedData.skills)) {\n    formattedData.skills = formattedData.skills.map(skill => {\n      if (typeof skill === 'string') {\n        return {\n          name: skill.slice(0, 50),  // 限制长度为50\n          level: '熟练',\n          description: '',\n          projects: []\n        }\n      }\n      return {\n        ...skill,\n        name: skill.name.slice(0, 50),  // 限制长度为50\n        description: (skill.description || '').slice(0, 500),\n        projects: Array.isArray(skill.projects) ? skill.projects.slice(0, 3) : []\n      }\n    })\n  }\n  \n  return formattedData\n}\n\n// 确认导入\nconst confirmImport = async () => {\n  if (!previewData.value) {\n    ElMessage.warning('没有可导入的数据')\n    return\n  }\n  \n  try {\n    importing.value = true\n    \n    // 格式化日期后再提交\n    const formattedData = formatDates(previewData.value)\n    console.log('格式化后的数据:', formattedData)\n    \n    // 提交导入数据\n    const response = await profile.importResumeData(formattedData)\n    \n    if (response.data?.code === 200 || response.status === 200) {\n      ElMessage.success('导入成功')\n      showPreviewDialog.value = false\n      dialogVisible.value = false\n      // 触发数据更新事件\n      eventBus.emit('profile-updated')\n      // 触发完整度更新事件\n      eventBus.emit('completeness-updated')\n      // 刷新用户信息\n      await profile.getData()\n      // 触发成功回调\n      emit('success')\n    } else {\n      throw new Error('导入失败')\n    }\n  } catch (error) {\n    console.error('数据导入失败:', error)\n    ElMessage.error({\n      message: error.message || '数据导入失败，请重试',\n      duration: 5000,\n      showClose: true\n    })\n  } finally {\n    importing.value = false\n  }\n}\n\n// 监听预览对话框状态变化\nwatch(() => showPreviewDialog.value, (val) => {\n  console.log('预览对话框状态变化:', val)\n  console.log('当前预览数据:', previewData.value)\n  if (!val) {\n    // 如果预览对话框关闭，重置预览数据\n    previewData.value = null\n    console.log('预览数据已重置')\n  }\n})\n\n// 组件卸载时清理定时器\nonUnmounted(() => {\n  stopProgressSimulation()\n})\n</script>\n\n<style scoped>\n.resume-import {\n  /* 添加需要的样式 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
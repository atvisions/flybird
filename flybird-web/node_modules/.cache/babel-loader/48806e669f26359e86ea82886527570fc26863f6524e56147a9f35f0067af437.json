{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    background: null\n  }),\n  getters: {\n    avatar: state => state.userInfo?.avatar || defaultAvatar,\n    nickname: state => state.userInfo?.nickname || '未设置昵称',\n    background: state => state.background,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          this.userInfo = response.data.data;\n          this.background = response.data.data.background;\n          return this.userInfo;\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData);\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData);\n        if (response?.data?.code === 200) {\n          this.background = response.data.data.background;\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data);\n        if (response?.data?.code === 200) {\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), response.data.data);\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.background = null;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","user","defaultAvatar","useAccountStore","state","userInfo","avatarUpdateTime","background","getters","avatar","nickname","phone","email","actions","fetchUserInfo","response","getUserInfo","data","code","error","console","updateAvatar","formData","Date","now","_objectSpread","Error","message","updateBackground","updateUserInfo","clearUserInfo"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    background: null\n  }),\n\n  getters: {\n    avatar: (state) => state.userInfo?.avatar || defaultAvatar,\n    nickname: (state) => state.userInfo?.nickname || '未设置昵称',\n    background: (state) => state.background,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          this.userInfo = response.data.data\n          this.background = response.data.data.background\n          return this.userInfo\n        }\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData)\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData)\n        if (response?.data?.code === 200) {\n          this.background = response.data.data.background\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data)\n        if (response?.data?.code === 200) {\n          this.userInfo = {\n            ...this.userInfo,\n            ...response.data.data\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.background = null\n    }\n  }\n}) "],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,IAAI,QAAQ,YAAY;AACjC,OAAOC,aAAa,MAAM,oCAAoC;AAE9D,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC,SAAS,EAAE;EACpDI,KAAK,EAAEA,CAAA,MAAO;IACZC,QAAQ,EAAE,IAAI;IACdC,gBAAgB,EAAE,IAAI;IACtBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFC,OAAO,EAAE;IACPC,MAAM,EAAGL,KAAK,IAAKA,KAAK,CAACC,QAAQ,EAAEI,MAAM,IAAIP,aAAa;IAC1DQ,QAAQ,EAAGN,KAAK,IAAKA,KAAK,CAACC,QAAQ,EAAEK,QAAQ,IAAI,OAAO;IACxDH,UAAU,EAAGH,KAAK,IAAKA,KAAK,CAACG,UAAU;IACvCI,KAAK,EAAGP,KAAK,IAAKA,KAAK,CAACC,QAAQ,EAAEM,KAAK;IACvCC,KAAK,EAAGR,KAAK,IAAKA,KAAK,CAACC,QAAQ,EAAEO;EACpC,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,WAAW,CAAC,CAAC;QACzC,IAAID,QAAQ,EAAEE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChC,IAAI,CAACb,QAAQ,GAAGU,QAAQ,CAACE,IAAI,CAACA,IAAI;UAClC,IAAI,CAACV,UAAU,GAAGQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACV,UAAU;UAC/C,OAAO,IAAI,CAACF,QAAQ;QACtB;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,MAAMA,KAAK;MACb;IACF,CAAC;IAED,MAAME,YAAYA,CAACC,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMd,IAAI,CAACoB,YAAY,CAACC,QAAQ,CAAC;QAClD,IAAIP,QAAQ,EAAEE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChC,IAAI,CAACZ,gBAAgB,GAAGiB,IAAI,CAACC,GAAG,CAAC,CAAC;UAClC,IAAI,CAACnB,QAAQ,GAAAoB,aAAA,CAAAA,aAAA,KACR,IAAI,CAACpB,QAAQ;YAChBI,MAAM,EAAEM,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACR;UAAM,EAClC;UACD,OAAOM,QAAQ;QACjB;QACA,MAAM,IAAIW,KAAK,CAACX,QAAQ,EAAEE,IAAI,EAAEU,OAAO,IAAI,QAAQ,CAAC;MACtD,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,MAAMA,KAAK;MACb;IACF,CAAC;IAED,MAAMS,gBAAgBA,CAACN,QAAQ,EAAE;MAC/B,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMd,IAAI,CAAC2B,gBAAgB,CAACN,QAAQ,CAAC;QACtD,IAAIP,QAAQ,EAAEE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChC,IAAI,CAACX,UAAU,GAAGQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACV,UAAU;UAC/C,OAAOQ,QAAQ;QACjB;QACA,MAAM,IAAIW,KAAK,CAACX,QAAQ,EAAEE,IAAI,EAAEU,OAAO,IAAI,SAAS,CAAC;MACvD,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,MAAMA,KAAK;MACb;IACF,CAAC;IAED,MAAMU,cAAcA,CAACZ,IAAI,EAAE;MACzB,IAAI;QACF,MAAMF,QAAQ,GAAG,MAAMd,IAAI,CAAC4B,cAAc,CAACZ,IAAI,CAAC;QAChD,IAAIF,QAAQ,EAAEE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChC,IAAI,CAACb,QAAQ,GAAAoB,aAAA,CAAAA,aAAA,KACR,IAAI,CAACpB,QAAQ,GACbU,QAAQ,CAACE,IAAI,CAACA,IAAI,CACtB;UACD,OAAOF,QAAQ;QACjB;QACA,MAAM,IAAIW,KAAK,CAACX,QAAQ,EAAEE,IAAI,EAAEU,OAAO,IAAI,UAAU,CAAC;MACxD,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,MAAMA,KAAK;MACb;IACF,CAAC;IAEDW,aAAaA,CAAA,EAAG;MACd,IAAI,CAACzB,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACC,UAAU,GAAG,IAAI;IACxB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
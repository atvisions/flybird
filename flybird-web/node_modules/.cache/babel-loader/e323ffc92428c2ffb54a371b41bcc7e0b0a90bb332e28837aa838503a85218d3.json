{"ast":null,"code":"import axios from 'axios';\nimport { useAuthStore } from '@/stores/auth';\nimport { useRouter } from 'vue-router';\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  console.log('Request config:', config);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, async error => {\n  console.error('Response error:', error);\n  if (error.response?.status === 401) {\n    const authStore = useAuthStore();\n    const router = useRouter();\n\n    // Token 过期处理\n    if (authStore.isLoggedIn) {\n      authStore.clearAuth();\n      router.push('/login');\n    }\n  }\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","useAuthStore","useRouter","request","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","headers","interceptors","use","config","console","log","error","Promise","reject","response","status","authStore","router","isLoggedIn","clearAuth","push"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { useAuthStore } from '@/stores/auth'\nimport { useRouter } from 'vue-router'\n\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    console.log('Request config:', config)\n    return config\n  },\n  error => {\n    console.error('Request error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nrequest.interceptors.response.use(\n  response => {\n    console.log('Response:', response)\n    return response\n  },\n  async error => {\n    console.error('Response error:', error)\n    if (error.response?.status === 401) {\n      const authStore = useAuthStore()\n      const router = useRouter()\n      \n      // Token 过期处理\n      if (authStore.isLoggedIn) {\n        authStore.clearAuth()\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default request"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EACzCC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,OAAO,CAACQ,YAAY,CAACR,OAAO,CAACS,GAAG,CAC9BC,MAAM,IAAI;EACRC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAAC;EACtC,OAAOA,MAAM;AACf,CAAC,EACDG,KAAK,IAAI;EACPF,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,OAAO,CAACQ,YAAY,CAACQ,QAAQ,CAACP,GAAG,CAC/BO,QAAQ,IAAI;EACVL,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,QAAQ,CAAC;EAClC,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAMH,KAAK,IAAI;EACbF,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,IAAIA,KAAK,CAACG,QAAQ,EAAEC,MAAM,KAAK,GAAG,EAAE;IAClC,MAAMC,SAAS,GAAGpB,YAAY,CAAC,CAAC;IAChC,MAAMqB,MAAM,GAAGpB,SAAS,CAAC,CAAC;;IAE1B;IACA,IAAImB,SAAS,CAACE,UAAU,EAAE;MACxBF,SAAS,CAACG,SAAS,CAAC,CAAC;MACrBF,MAAM,CAACG,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
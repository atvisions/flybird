{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\n//这里是\nimport request from '@/utils/request';\n\n// 档案数据管理\nconst profile = {\n  // 获取完整档案数据\n  getData() {\n    console.log('Calling getData...');\n    return request.get('/api/v1/users/profile/data/').then(response => {\n      console.log('getData raw response:', response);\n      return response;\n    });\n  },\n  // 获取档案完整度（仅在档案页面使用）\n  getCompleteness() {\n    return request.get('/api/v1/users/profile/completeness/');\n  },\n  // 更新模块数据\n  updateModule(type, data) {\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type;\n    const id = data.id;\n    if (id) {\n      // 编辑现有数据\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/${id}/`,\n        method: 'put',\n        data\n      });\n    } else {\n      // 对于 basic_info，使用不同的处理方式，因为它是一对一关系\n      if (moduleType === 'basic_info') {\n        return request({\n          url: `/api/v1/users/profile/${moduleType}/`,\n          method: 'put',\n          data\n        });\n      }\n      // 其他模块的新增\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/`,\n        method: 'post',\n        data\n      });\n    }\n  },\n  // 删除模块项目\n  deleteModuleItem(type, id) {\n    // 处理特殊的模块类型名称\n    const moduleTypeMap = {\n      'skill': 'skills',\n      'certificate': 'certificates'\n      // 添加其他需要映射的类型...\n    };\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type;\n    return request({\n      url: `/api/v1/users/profile/${moduleType}/${id}/`,\n      method: 'delete'\n    });\n  },\n  uploadBackground(formData) {\n    return request({\n      url: '/api/v1/users/profile/background/upload/',\n      method: 'post',\n      headers: {\n        // 让 axios 自动设置 Content-Type 和 boundary\n        'Content-Type': undefined\n      },\n      data: formData\n    });\n  },\n  // 获取布局配置（保留特殊接口）\n  getLayout() {\n    return request.get('/api/v1/users/profile/layout/');\n  },\n  // 更新布局配置（保留特殊接口）\n  updateLayout(data) {\n    return request({\n      url: '/api/v1/users/profile/layout/',\n      method: 'put',\n      data\n    });\n  },\n  // 上传头像\n  uploadAvatar: async file => {\n    console.log('Profile API - 开始上传职业头像:', {\n      fileName: file.name,\n      size: file.size,\n      type: file.type\n    });\n\n    // 验证文件类型\n    if (!file.type.startsWith('image/')) {\n      throw new Error('请上传图片文件');\n    }\n    const formData = new FormData();\n    // 添加前缀以区分职业头像\n    const fileName = `profile_${file.name}`;\n    formData.append('avatar', file, fileName);\n    try {\n      const response = await request({\n        url: '/api/v1/users/profile/avatar/upload/',\n        method: 'post',\n        data: formData,\n        headers: {\n          'Content-Type': undefined\n        }\n      });\n      console.log('Profile API - 职业头像上传响应:', response);\n      return response;\n    } catch (error) {\n      console.error('职业头像上传失败:', error);\n      const errorMessage = error.response?.data?.message || error.message;\n      console.error('错误详情:', {\n        message: errorMessage,\n        data: error.response?.data\n      });\n      throw error;\n    }\n  },\n  // 解析简历文件\n  parseResume(formData, onProgress) {\n    return request({\n      url: '/api/v1/users/profile/data/import/',\n      method: 'post',\n      data: formData,\n      headers: {\n        'Content-Type': undefined\n      },\n      onUploadProgress: progressEvent => {\n        if (onProgress) {\n          const progress = progressEvent.loaded / progressEvent.total * 100;\n          onProgress(progress);\n        }\n      }\n    });\n  },\n  // 导入简历数据\n  importResumeData(data) {\n    // 使用现有的 updateModule 方法来更新各个模块\n    const promises = [];\n\n    // 更新基本信息\n    if (data.basic_info) {\n      promises.push(this.updateModule('basic_info', data.basic_info));\n    }\n\n    // 更新工作经历\n    if (data.work_experiences?.length) {\n      promises.push(...data.work_experiences.map(exp => this.updateModule('work_experience', exp)));\n    }\n\n    // 更新教育经历\n    if (data.educations?.length) {\n      promises.push(...data.educations.map(edu => this.updateModule('education', edu)));\n    }\n\n    // 更新项目经历\n    if (data.projects?.length) {\n      promises.push(...data.projects.map(proj => this.updateModule('project', proj)));\n    }\n\n    // 更新技能特长\n    if (data.skills?.length) {\n      promises.push(...data.skills.map(skill => this.updateModule('skill', skill)));\n    }\n\n    // 更新学习经历\n    if (data.studies?.length) {\n      promises.push(...data.studies.map(study => this.updateModule('study', study)));\n    }\n\n    // 更新语言能力\n    if (data.languages?.length) {\n      promises.push(...data.languages.map(lang => this.updateModule('language', lang)));\n    }\n\n    // 更新社交主页\n    if (data.social_links?.length) {\n      promises.push(...data.social_links.map(link => this.updateModule('social_link', link)));\n    }\n\n    // 返回 Promise.all 以等待所有更新完成\n    return Promise.all(promises);\n  }\n};\nexport default profile;","map":{"version":3,"names":["request","profile","getData","console","log","get","then","response","getCompleteness","updateModule","type","data","moduleType","id","url","method","deleteModuleItem","moduleTypeMap","uploadBackground","formData","headers","undefined","getLayout","updateLayout","uploadAvatar","file","fileName","name","size","startsWith","Error","FormData","append","error","errorMessage","message","parseResume","onProgress","onUploadProgress","progressEvent","progress","loaded","total","importResumeData","promises","basic_info","push","work_experiences","length","map","exp","educations","edu","projects","proj","skills","skill","studies","study","languages","lang","social_links","link","Promise","all"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/api/profile.js"],"sourcesContent":["//这里是\nimport request from '@/utils/request'\n\n// 档案数据管理\nconst profile = {\n  // 获取完整档案数据\n  getData() {\n    console.log('Calling getData...')\n    return request.get('/api/v1/users/profile/data/').then(response => {\n      console.log('getData raw response:', response)\n      return response\n    })\n  },\n\n  // 获取档案完整度（仅在档案页面使用）\n  getCompleteness() {\n    return request.get('/api/v1/users/profile/completeness/')\n  },\n\n  // 更新模块数据\n  updateModule(type, data) {\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type\n    const id = data.id\n    \n    if (id) {\n      // 编辑现有数据\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/${id}/`,\n        method: 'put',\n        data\n      })\n    } else {\n      // 对于 basic_info，使用不同的处理方式，因为它是一对一关系\n      if (moduleType === 'basic_info') {\n        return request({\n          url: `/api/v1/users/profile/${moduleType}/`,\n          method: 'put',\n          data\n        })\n      }\n      // 其他模块的新增\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/`,\n        method: 'post',\n        data\n      })\n    }\n  },\n\n  // 删除模块项目\n  deleteModuleItem(type, id) {\n    // 处理特殊的模块类型名称\n    const moduleTypeMap = {\n      'skill': 'skills',\n      'certificate': 'certificates',\n      // 添加其他需要映射的类型...\n    }\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type\n    return request({\n      url: `/api/v1/users/profile/${moduleType}/${id}/`,\n      method: 'delete'\n    })\n  },\n\n  uploadBackground(formData) {\n    return request({\n      url: '/api/v1/users/profile/background/upload/',\n      method: 'post',\n      headers: {\n        // 让 axios 自动设置 Content-Type 和 boundary\n        'Content-Type': undefined\n      },\n      data: formData\n    })\n  },\n\n  // 获取布局配置（保留特殊接口）\n  getLayout() {\n    return request.get('/api/v1/users/profile/layout/')\n  },\n\n  // 更新布局配置（保留特殊接口）\n  updateLayout(data) {\n    return request({\n      url: '/api/v1/users/profile/layout/',\n      method: 'put',\n      data\n    })\n  },\n\n  // 上传头像\n  uploadAvatar: async (file) => {\n    console.log('Profile API - 开始上传职业头像:', {\n      fileName: file.name,\n      size: file.size,\n      type: file.type\n    })\n    \n    // 验证文件类型\n    if (!file.type.startsWith('image/')) {\n      throw new Error('请上传图片文件')\n    }\n    \n    const formData = new FormData()\n    // 添加前缀以区分职业头像\n    const fileName = `profile_${file.name}`\n    formData.append('avatar', file, fileName)\n    \n    try {\n      const response = await request({\n        url: '/api/v1/users/profile/avatar/upload/',\n        method: 'post',\n        data: formData,\n        headers: {\n          'Content-Type': undefined\n        }\n      })\n      \n      console.log('Profile API - 职业头像上传响应:', response)\n      \n      return response\n    } catch (error) {\n      console.error('职业头像上传失败:', error)\n      const errorMessage = error.response?.data?.message || error.message\n      console.error('错误详情:', {\n        message: errorMessage,\n        data: error.response?.data\n      })\n      throw error\n    }\n  },\n\n  // 解析简历文件\n  parseResume(formData, onProgress) {\n    return request({\n      url: '/api/v1/users/profile/data/import/',\n      method: 'post',\n      data: formData,\n      headers: {\n        'Content-Type': undefined\n      },\n      onUploadProgress: (progressEvent) => {\n        if (onProgress) {\n          const progress = (progressEvent.loaded / progressEvent.total) * 100\n          onProgress(progress)\n        }\n      }\n    })\n  },\n\n  // 导入简历数据\n  importResumeData(data) {\n    // 使用现有的 updateModule 方法来更新各个模块\n    const promises = []\n    \n    // 更新基本信息\n    if (data.basic_info) {\n      promises.push(this.updateModule('basic_info', data.basic_info))\n    }\n    \n    // 更新工作经历\n    if (data.work_experiences?.length) {\n      promises.push(...data.work_experiences.map(exp => \n        this.updateModule('work_experience', exp)\n      ))\n    }\n    \n    // 更新教育经历\n    if (data.educations?.length) {\n      promises.push(...data.educations.map(edu => \n        this.updateModule('education', edu)\n      ))\n    }\n    \n    // 更新项目经历\n    if (data.projects?.length) {\n      promises.push(...data.projects.map(proj => \n        this.updateModule('project', proj)\n      ))\n    }\n    \n    // 更新技能特长\n    if (data.skills?.length) {\n      promises.push(...data.skills.map(skill => \n        this.updateModule('skill', skill)\n      ))\n    }\n    \n    // 更新学习经历\n    if (data.studies?.length) {\n      promises.push(...data.studies.map(study => \n        this.updateModule('study', study)\n      ))\n    }\n    \n    // 更新语言能力\n    if (data.languages?.length) {\n      promises.push(...data.languages.map(lang => \n        this.updateModule('language', lang)\n      ))\n    }\n    \n    // 更新社交主页\n    if (data.social_links?.length) {\n      promises.push(...data.social_links.map(link => \n        this.updateModule('social_link', link)\n      ))\n    }\n    \n    // 返回 Promise.all 以等待所有更新完成\n    return Promise.all(promises)\n  }\n}\n\nexport default profile "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
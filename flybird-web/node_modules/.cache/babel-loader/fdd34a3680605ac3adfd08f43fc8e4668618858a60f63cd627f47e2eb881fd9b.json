{"ast":null,"code":"import { auth } from '@/api/auth';\nimport { storage } from '@/utils/storage';\nimport store from '@/store';\nexport const authService = {\n  // 登录服务\n  async login({\n    phone,\n    password,\n    rememberMe = false\n  }) {\n    try {\n      const response = await auth.loginWithPassword({\n        phone,\n        password\n      });\n      if (response.data?.code === 200) {\n        const {\n          access,\n          refresh\n        } = response.data.data;\n\n        // 使用 storage 服务保存认证信息\n        storage.saveAuth({\n          access,\n          refresh\n        }, rememberMe);\n\n        // 如果记住我，保存手机号\n        if (rememberMe) {\n          storage.savePhone(phone, true);\n        }\n\n        // 更新 store 状态\n        await store.dispatch('login', {\n          access,\n          refresh,\n          rememberMe\n        });\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  },\n  // 添加登出服务\n  async logout() {\n    try {\n      // 调用后端登出接口\n      await auth.logout();\n      // 清理本地状态\n      await store.dispatch('logout');\n      return true;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      // 即使后端登出失败，也要清理本地状态\n      await store.dispatch('logout');\n      throw error;\n    }\n  },\n  // 检查认证状态\n  async checkAuth() {\n    return store.dispatch('checkAuth');\n  }\n};\nexport default authService;","map":{"version":3,"names":["auth","storage","store","authService","login","phone","password","rememberMe","response","loginWithPassword","data","code","access","refresh","saveAuth","savePhone","dispatch","error","console","logout","checkAuth"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/services/authService.js"],"sourcesContent":["import { auth } from '@/api/auth'\nimport { storage } from '@/utils/storage'\nimport store from '@/store'\n\nexport const authService = {\n  // 登录服务\n  async login({ phone, password, rememberMe = false }) {\n    try {\n      const response = await auth.loginWithPassword({\n        phone,\n        password\n      })\n\n      if (response.data?.code === 200) {\n        const { access, refresh } = response.data.data\n        \n        // 使用 storage 服务保存认证信息\n        storage.saveAuth({ access, refresh }, rememberMe)\n        \n        // 如果记住我，保存手机号\n        if (rememberMe) {\n          storage.savePhone(phone, true)\n        }\n        \n        // 更新 store 状态\n        await store.dispatch('login', {\n          access,\n          refresh,\n          rememberMe\n        })\n        \n        return true\n      }\n      return false\n    } catch (error) {\n      console.error('Login failed:', error)\n      throw error\n    }\n  },\n\n  // 添加登出服务\n  async logout() {\n    try {\n      // 调用后端登出接口\n      await auth.logout()\n      // 清理本地状态\n      await store.dispatch('logout')\n      return true\n    } catch (error) {\n      console.error('Logout failed:', error)\n      // 即使后端登出失败，也要清理本地状态\n      await store.dispatch('logout')\n      throw error\n    }\n  },\n\n  // 检查认证状态\n  async checkAuth() {\n    return store.dispatch('checkAuth')\n  }\n}\n\nexport default authService "],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,KAAKA,CAAC;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,UAAU,GAAG;EAAM,CAAC,EAAE;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,iBAAiB,CAAC;QAC5CJ,KAAK;QACLC;MACF,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;QAC/B,MAAM;UAAEC,MAAM;UAAEC;QAAQ,CAAC,GAAGL,QAAQ,CAACE,IAAI,CAACA,IAAI;;QAE9C;QACAT,OAAO,CAACa,QAAQ,CAAC;UAAEF,MAAM;UAAEC;QAAQ,CAAC,EAAEN,UAAU,CAAC;;QAEjD;QACA,IAAIA,UAAU,EAAE;UACdN,OAAO,CAACc,SAAS,CAACV,KAAK,EAAE,IAAI,CAAC;QAChC;;QAEA;QACA,MAAMH,KAAK,CAACc,QAAQ,CAAC,OAAO,EAAE;UAC5BJ,MAAM;UACNC,OAAO;UACPN;QACF,CAAC,CAAC;QAEF,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,MAAMA,CAAA,EAAG;IACb,IAAI;MACF;MACA,MAAMnB,IAAI,CAACmB,MAAM,CAAC,CAAC;MACnB;MACA,MAAMjB,KAAK,CAACc,QAAQ,CAAC,QAAQ,CAAC;MAC9B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC;MACA,MAAMf,KAAK,CAACc,QAAQ,CAAC,QAAQ,CAAC;MAC9B,MAAMC,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMG,SAASA,CAAA,EAAG;IAChB,OAAOlB,KAAK,CAACc,QAAQ,CAAC,WAAW,CAAC;EACpC;AACF,CAAC;AAED,eAAeb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
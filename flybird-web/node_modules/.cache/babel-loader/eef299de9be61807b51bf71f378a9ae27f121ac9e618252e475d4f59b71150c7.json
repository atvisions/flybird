{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport HeadView from '@/components/HeadView.vue';\nimport FootView from '@/components/FootView.vue';\nimport { membership } from '@/api/membership';\nimport { showToast } from '@/components/ToastMessage';\nconst maxRetries = 3;\nconst retryInterval = 2000;\nexport default {\n  __name: 'PaymentResult',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const status = ref('pending');\n    const errorMessage = ref('');\n    let retryCount = 0;\n    const errorMessages = {\n      'order_not_found': '订单不存在',\n      'verify_failed': '支付验证失败',\n      'system_error': '系统错误',\n      'unknown': '未知错误'\n    };\n    const verifyPayment = async orderNo => {\n      try {\n        const response = await membership.verifyPayment(orderNo);\n        if (response?.data?.code === 200) {\n          status.value = 'success';\n          showToast('支付成功', 'success');\n          return true;\n        } else if (response?.data?.code === 400) {\n          if (retryCount < maxRetries) {\n            retryCount++;\n            console.log(`支付验证重试 ${retryCount}/${maxRetries}`);\n            await new Promise(resolve => setTimeout(resolve, retryInterval));\n            return await verifyPayment(orderNo);\n          }\n          status.value = 'fail';\n          errorMessage.value = response?.data?.message || '支付验证失败';\n          showToast(errorMessage.value, 'error');\n          return false;\n        }\n        status.value = 'fail';\n        errorMessage.value = response?.data?.message || '支付验证失败';\n        showToast(errorMessage.value, 'error');\n        return false;\n      } catch (error) {\n        console.error('支付验证失败:', error);\n        status.value = 'fail';\n        errorMessage.value = error?.response?.data?.message || '系统错误';\n        showToast('支付验证失败', 'error');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 从URL参数中获取支付状态\n      const reason = route.query.reason;\n      if (reason) {\n        status.value = 'fail';\n        errorMessage.value = errorMessages[reason] || '支付失败，请重试';\n      } else {\n        // 处理支付宝回调\n        const orderNo = route.query.out_trade_no;\n        if (orderNo) {\n          await verifyPayment(orderNo);\n        }\n      }\n    });\n    const __returned__ = {\n      route,\n      status,\n      errorMessage,\n      maxRetries,\n      retryInterval,\n      get retryCount() {\n        return retryCount;\n      },\n      set retryCount(v) {\n        retryCount = v;\n      },\n      errorMessages,\n      verifyPayment,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      HeadView,\n      FootView,\n      get membership() {\n        return membership;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","HeadView","FootView","membership","showToast","maxRetries","retryInterval","route","status","errorMessage","retryCount","errorMessages","verifyPayment","orderNo","response","data","code","value","console","log","Promise","resolve","setTimeout","message","error","reason","query","out_trade_no"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/payment/PaymentResult.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <HeadView />\n    \n    <div class=\"max-w-3xl mx-auto px-4 py-16\">\n      <!-- 支付成功 -->\n      <div v-if=\"status === 'success'\" class=\"text-center\">\n        <div class=\"mb-8\">\n          <svg class=\"mx-auto h-16 w-16 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n        </div>\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付成功</h2>\n        <p class=\"text-gray-600 mb-8\">您的会员已经开通，立即开始享受会员权益吧！</p>\n        <div class=\"flex justify-center space-x-4\">\n          <router-link \n            to=\"/member\" \n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            查看会员信息\n          </router-link>\n          <router-link \n            to=\"/\" \n            class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            返回首页\n          </router-link>\n        </div>\n      </div>\n\n      <!-- 支付失败 -->\n      <div v-else class=\"text-center\">\n        <div class=\"mb-8\">\n          <svg class=\"mx-auto h-16 w-16 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付失败</h2>\n        <p class=\"text-gray-600 mb-2\">抱歉，支付过程中出现了问题</p>\n        <p class=\"text-gray-500 text-sm mb-8\">{{ errorMessage }}</p>\n        <div class=\"flex justify-center space-x-4\">\n          <router-link \n            to=\"/pro\" \n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            重新支付\n          </router-link>\n          <router-link \n            to=\"/\" \n            class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            返回首页\n          </router-link>\n        </div>\n      </div>\n    </div>\n\n    <FootView />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport HeadView from '@/components/HeadView.vue'\nimport FootView from '@/components/FootView.vue'\nimport { membership } from '@/api/membership'\nimport { showToast } from '@/components/ToastMessage'\n\nconst route = useRoute()\nconst status = ref('pending')\nconst errorMessage = ref('')\nconst maxRetries = 3\nconst retryInterval = 2000\nlet retryCount = 0\n\nconst errorMessages = {\n  'order_not_found': '订单不存在',\n  'verify_failed': '支付验证失败',\n  'system_error': '系统错误',\n  'unknown': '未知错误'\n}\n\nconst verifyPayment = async (orderNo) => {\n  try {\n    const response = await membership.verifyPayment(orderNo)\n    if (response?.data?.code === 200) {\n      status.value = 'success'\n      showToast('支付成功', 'success')\n      return true\n    } else if (response?.data?.code === 400) {\n      if (retryCount < maxRetries) {\n        retryCount++\n        console.log(`支付验证重试 ${retryCount}/${maxRetries}`)\n        await new Promise(resolve => setTimeout(resolve, retryInterval))\n        return await verifyPayment(orderNo)\n      }\n      status.value = 'fail'\n      errorMessage.value = response?.data?.message || '支付验证失败'\n      showToast(errorMessage.value, 'error')\n      return false\n    }\n    status.value = 'fail'\n    errorMessage.value = response?.data?.message || '支付验证失败'\n    showToast(errorMessage.value, 'error')\n    return false\n  } catch (error) {\n    console.error('支付验证失败:', error)\n    status.value = 'fail'\n    errorMessage.value = error?.response?.data?.message || '系统错误'\n    showToast('支付验证失败', 'error')\n    return false\n  }\n}\n\nonMounted(async () => {\n  // 从URL参数中获取支付状态\n  const reason = route.query.reason\n  if (reason) {\n    status.value = 'fail'\n    errorMessage.value = errorMessages[reason] || '支付失败，请重试'\n  } else {\n    // 处理支付宝回调\n    const orderNo = route.query.out_trade_no\n    if (orderNo) {\n      await verifyPayment(orderNo)\n    }\n  }\n})\n</script> "],"mappings":"AA8DA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,QAAQ,QAAQ,YAAW;AACpC,OAAOC,QAAQ,MAAM,2BAA0B;AAC/C,OAAOC,QAAQ,MAAM,2BAA0B;AAC/C,SAASC,UAAU,QAAQ,kBAAiB;AAC5C,SAASC,SAAS,QAAQ,2BAA0B;AAKpD,MAAMC,UAAU,GAAG;AACnB,MAAMC,aAAa,GAAG,IAAG;;;;;;;IAJzB,MAAMC,KAAK,GAAGP,QAAQ,CAAC;IACvB,MAAMQ,MAAM,GAAGV,GAAG,CAAC,SAAS;IAC5B,MAAMW,YAAY,GAAGX,GAAG,CAAC,EAAE;IAG3B,IAAIY,UAAU,GAAG;IAEjB,MAAMC,aAAa,GAAG;MACpB,iBAAiB,EAAE,OAAO;MAC1B,eAAe,EAAE,QAAQ;MACzB,cAAc,EAAE,MAAM;MACtB,SAAS,EAAE;IACb;IAEA,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAACS,aAAa,CAACC,OAAO;QACvD,IAAIC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChCR,MAAM,CAACS,KAAK,GAAG,SAAQ;UACvBb,SAAS,CAAC,MAAM,EAAE,SAAS;UAC3B,OAAO,IAAG;QACZ,CAAC,MAAM,IAAIU,QAAQ,EAAEC,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UACvC,IAAIN,UAAU,GAAGL,UAAU,EAAE;YAC3BK,UAAU,EAAC;YACXQ,OAAO,CAACC,GAAG,CAAC,UAAUT,UAAU,IAAIL,UAAU,EAAE;YAChD,MAAM,IAAIe,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEf,aAAa,CAAC;YAC/D,OAAO,MAAMM,aAAa,CAACC,OAAO;UACpC;UACAL,MAAM,CAACS,KAAK,GAAG,MAAK;UACpBR,YAAY,CAACQ,KAAK,GAAGH,QAAQ,EAAEC,IAAI,EAAEQ,OAAO,IAAI,QAAO;UACvDnB,SAAS,CAACK,YAAY,CAACQ,KAAK,EAAE,OAAO;UACrC,OAAO,KAAI;QACb;QACAT,MAAM,CAACS,KAAK,GAAG,MAAK;QACpBR,YAAY,CAACQ,KAAK,GAAGH,QAAQ,EAAEC,IAAI,EAAEQ,OAAO,IAAI,QAAO;QACvDnB,SAAS,CAACK,YAAY,CAACQ,KAAK,EAAE,OAAO;QACrC,OAAO,KAAI;MACb,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BhB,MAAM,CAACS,KAAK,GAAG,MAAK;QACpBR,YAAY,CAACQ,KAAK,GAAGO,KAAK,EAAEV,QAAQ,EAAEC,IAAI,EAAEQ,OAAO,IAAI,MAAK;QAC5DnB,SAAS,CAAC,QAAQ,EAAE,OAAO;QAC3B,OAAO,KAAI;MACb;IACF;IAEAL,SAAS,CAAC,YAAY;MACpB;MACA,MAAM0B,MAAM,GAAGlB,KAAK,CAACmB,KAAK,CAACD,MAAK;MAChC,IAAIA,MAAM,EAAE;QACVjB,MAAM,CAACS,KAAK,GAAG,MAAK;QACpBR,YAAY,CAACQ,KAAK,GAAGN,aAAa,CAACc,MAAM,CAAC,IAAI,UAAS;MACzD,CAAC,MAAM;QACL;QACA,MAAMZ,OAAO,GAAGN,KAAK,CAACmB,KAAK,CAACC,YAAW;QACvC,IAAId,OAAO,EAAE;UACX,MAAMD,aAAa,CAACC,OAAO;QAC7B;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { auth } from '@/api/auth';\nimport request from '@/utils/request';\nimport { useRouter } from 'vue-router';\nimport { useAccountStore } from '@/stores/account';\nimport { showToast } from '@/components/ToastMessage';\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    isLoggedIn: false,\n    token: localStorage.getItem('token') || null,\n    refreshToken: null,\n    tokenExpiresAt: null\n  }),\n  getters: {\n    isAuthenticated: state => {\n      return state.isLoggedIn && !!state.token;\n    }\n  },\n  actions: {\n    // 恢复状态方法\n    restoreState() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        this.token = token;\n        this.isLoggedIn = true;\n        request.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return true;\n      }\n      return false;\n    },\n    // 登录方法\n    async login(credentials) {\n      try {\n        const response = await auth.loginWithPassword(credentials);\n        if (response) {\n          this.token = response.token;\n          this.refreshToken = response.refresh;\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('refresh_token', response.refresh);\n          request.defaults.headers.common['Authorization'] = `Bearer ${response.token}`;\n          this.isLoggedIn = true;\n          const accountStore = useAccountStore();\n          await accountStore.fetchUserInfo();\n          showToast('登录成功', 'success');\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    // 登出方法\n    async logout() {\n      try {\n        if (this.token) {\n          try {\n            await auth.logout();\n          } catch (error) {\n            console.error('Logout API error:', error);\n          }\n        }\n        this.clearAuth();\n        const accountStore = useAccountStore();\n        accountStore.clearUserInfo();\n        showToast('已退出登录', 'success');\n\n        // 使用路由而不是直接修改 location\n        const router = useRouter();\n        await router.push('/login');\n      } catch (error) {\n        console.error('Logout failed:', error);\n        showToast('退出登录失败，请重试', 'error');\n      }\n    },\n    // 清除认证状态\n    clearAuth() {\n      this.isLoggedIn = false;\n      this.token = null;\n      this.refreshToken = null;\n      this.tokenExpiresAt = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('refresh_token');\n      delete request.defaults.headers.common['Authorization'];\n    },\n    // 注册方法\n    async register(data) {\n      try {\n        const response = await auth.register(data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.token = userData.access;\n          this.refreshToken = userData.refresh;\n          localStorage.setItem('token', userData.access);\n          localStorage.setItem('refresh_token', userData.refresh);\n          request.defaults.headers.common['Authorization'] = `Bearer ${userData.access}`;\n          this.isLoggedIn = true;\n          showToast('注册成功', 'success');\n          return true;\n        }\n        throw new Error(response?.data?.message || '注册失败');\n      } catch (error) {\n        console.error('Registration failed:', error);\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","auth","request","useRouter","useAccountStore","showToast","useAuthStore","state","isLoggedIn","token","localStorage","getItem","refreshToken","tokenExpiresAt","getters","isAuthenticated","actions","restoreState","defaults","headers","common","login","credentials","response","loginWithPassword","refresh","setItem","accountStore","fetchUserInfo","error","console","logout","clearAuth","clearUserInfo","router","push","removeItem","register","data","code","userData","access","Error","message"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/auth.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { auth } from '@/api/auth'\nimport request from '@/utils/request'\nimport { useRouter } from 'vue-router'\nimport { useAccountStore } from '@/stores/account'\nimport { showToast } from '@/components/ToastMessage'\n\nexport const useAuthStore = defineStore('auth', {\n  state: () => ({\n    isLoggedIn: false,\n    token: localStorage.getItem('token') || null,\n    refreshToken: null,\n    tokenExpiresAt: null\n  }),\n\n  getters: {\n    isAuthenticated: (state) => {\n      return state.isLoggedIn && !!state.token\n    }\n  },\n\n  actions: {\n    // 恢复状态方法\n    restoreState() {\n      const token = localStorage.getItem('token')\n      if (token) {\n        this.token = token\n        this.isLoggedIn = true\n        request.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        return true\n      }\n      return false\n    },\n\n    // 登录方法\n    async login(credentials) {\n      try {\n        const response = await auth.loginWithPassword(credentials)\n        \n        if (response) {\n          this.token = response.token\n          this.refreshToken = response.refresh\n          localStorage.setItem('token', response.token)\n          localStorage.setItem('refresh_token', response.refresh)\n          \n          request.defaults.headers.common['Authorization'] = `Bearer ${response.token}`\n          this.isLoggedIn = true\n          \n          const accountStore = useAccountStore()\n          await accountStore.fetchUserInfo()\n          \n          showToast('登录成功', 'success')\n          return true\n        }\n        return false\n      } catch (error) {\n        console.error('Login failed:', error)\n        throw error\n      }\n    },\n\n    // 登出方法\n    async logout() {\n      try {\n        if (this.token) {\n          try {\n            await auth.logout()\n          } catch (error) {\n            console.error('Logout API error:', error)\n          }\n        }\n        \n        this.clearAuth()\n        const accountStore = useAccountStore()\n        accountStore.clearUserInfo()\n        \n        showToast('已退出登录', 'success')\n        \n        // 使用路由而不是直接修改 location\n        const router = useRouter()\n        await router.push('/login')\n      } catch (error) {\n        console.error('Logout failed:', error)\n        showToast('退出登录失败，请重试', 'error')\n      }\n    },\n\n    // 清除认证状态\n    clearAuth() {\n      this.isLoggedIn = false\n      this.token = null\n      this.refreshToken = null\n      this.tokenExpiresAt = null\n      localStorage.removeItem('token')\n      localStorage.removeItem('refresh_token')\n      delete request.defaults.headers.common['Authorization']\n    },\n\n    // 注册方法\n    async register(data) {\n      try {\n        const response = await auth.register(data)\n        \n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          this.token = userData.access\n          this.refreshToken = userData.refresh\n          localStorage.setItem('token', userData.access)\n          localStorage.setItem('refresh_token', userData.refresh)\n          \n          request.defaults.headers.common['Authorization'] = `Bearer ${userData.access}`\n          this.isLoggedIn = true\n          \n          showToast('注册成功', 'success')\n          return true\n        }\n        throw new Error(response?.data?.message || '注册失败')\n      } catch (error) {\n        console.error('Registration failed:', error)\n        throw error\n      }\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
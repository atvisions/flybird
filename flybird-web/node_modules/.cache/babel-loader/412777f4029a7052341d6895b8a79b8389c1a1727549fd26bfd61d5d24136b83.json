{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport profile from '@/api/profile';\nexport function useProfileData() {\n  const loading = ref(false);\n  const basicInfo = ref(null);\n  const profileData = ref({});\n  const completionData = ref(null);\n\n  // 获取基本信息\n  const fetchBasicInfo = async () => {\n    try {\n      loading.value = true;\n      const response = await profile.getData();\n      if (response.data?.code === 200) {\n        basicInfo.value = response.data.data.basic_info;\n        profileData.value = response.data.data;\n        return basicInfo.value;\n      }\n    } catch (error) {\n      console.error('获取基本信息失败:', error);\n      ElMessage.error('获取基本信息失败');\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 获取模块数据\n  const fetchModuleData = async type => {\n    try {\n      loading.value = true;\n      const response = await profile.getData();\n      if (response.data?.code === 200) {\n        profileData.value = response.data.data;\n        return profileData.value[type];\n      }\n    } catch (error) {\n      console.error(`获取${type}数据失败:`, error);\n      ElMessage.error(`获取${type}数据失败`);\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 获取完整度数据\n  const fetchCompletionData = async () => {\n    try {\n      loading.value = true;\n      const response = await profile.getData();\n      if (response.data?.code === 200) {\n        const data = response.data.data;\n\n        // 计算完整度\n        completionData.value = {\n          total: calculateCompleteness(data),\n          modules: {\n            basic_info: calculateModuleCompleteness(data.basic_info),\n            job_intention: calculateModuleCompleteness(data.job_intention),\n            work_experience: calculateModuleCompleteness(data.work_experience),\n            education: calculateModuleCompleteness(data.education),\n            project: calculateModuleCompleteness(data.project),\n            skill: calculateModuleCompleteness(data.skill),\n            certificate: calculateModuleCompleteness(data.certificate),\n            language: calculateModuleCompleteness(data.language),\n            portfolio: calculateModuleCompleteness(data.portfolio),\n            social_link: calculateModuleCompleteness(data.social_link)\n          }\n        };\n        return completionData.value;\n      }\n    } catch (error) {\n      console.error('获取完整度数据失败:', error);\n      ElMessage.error('获取完整度数据失败');\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 计算整体完整度\n  const calculateCompleteness = data => {\n    const modules = Object.keys(data);\n    const completedModules = modules.filter(module => {\n      const moduleData = data[module];\n      return moduleData && (Array.isArray(moduleData) ? moduleData.length > 0 : Object.keys(moduleData).length > 0);\n    });\n    return Math.round(completedModules.length / modules.length * 100);\n  };\n\n  // 计算单个模块完整度\n  const calculateModuleCompleteness = moduleData => {\n    if (!moduleData) return 0;\n    if (Array.isArray(moduleData)) {\n      return moduleData.length > 0 ? 100 : 0;\n    }\n    const fields = Object.keys(moduleData);\n    const completedFields = fields.filter(field => moduleData[field]);\n    return Math.round(completedFields.length / fields.length * 100);\n  };\n  return {\n    loading,\n    basicInfo,\n    profileData,\n    completionData,\n    fetchBasicInfo,\n    fetchModuleData,\n    fetchCompletionData\n  };\n}","map":{"version":3,"names":["ref","ElMessage","profile","useProfileData","loading","basicInfo","profileData","completionData","fetchBasicInfo","value","response","getData","data","code","basic_info","error","console","fetchModuleData","type","fetchCompletionData","total","calculateCompleteness","modules","calculateModuleCompleteness","job_intention","work_experience","education","project","skill","certificate","language","portfolio","social_link","Object","keys","completedModules","filter","module","moduleData","Array","isArray","length","Math","round","fields","completedFields","field"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/composables/useProfileData.js"],"sourcesContent":["import { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport profile from '@/api/profile'\n\nexport function useProfileData() {\n  const loading = ref(false)\n  const basicInfo = ref(null)\n  const profileData = ref({})\n  const completionData = ref(null)\n\n  // 获取基本信息\n  const fetchBasicInfo = async () => {\n    try {\n      loading.value = true\n      const response = await profile.getData()\n      if (response.data?.code === 200) {\n        basicInfo.value = response.data.data.basic_info\n        profileData.value = response.data.data\n        return basicInfo.value\n      }\n    } catch (error) {\n      console.error('获取基本信息失败:', error)\n      ElMessage.error('获取基本信息失败')\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 获取模块数据\n  const fetchModuleData = async (type) => {\n    try {\n      loading.value = true\n      const response = await profile.getData()\n      if (response.data?.code === 200) {\n        profileData.value = response.data.data\n        return profileData.value[type]\n      }\n    } catch (error) {\n      console.error(`获取${type}数据失败:`, error)\n      ElMessage.error(`获取${type}数据失败`)\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 获取完整度数据\n  const fetchCompletionData = async () => {\n    try {\n      loading.value = true\n      const response = await profile.getData()\n      if (response.data?.code === 200) {\n        const data = response.data.data\n        \n        // 计算完整度\n        completionData.value = {\n          total: calculateCompleteness(data),\n          modules: {\n            basic_info: calculateModuleCompleteness(data.basic_info),\n            job_intention: calculateModuleCompleteness(data.job_intention),\n            work_experience: calculateModuleCompleteness(data.work_experience),\n            education: calculateModuleCompleteness(data.education),\n            project: calculateModuleCompleteness(data.project),\n            skill: calculateModuleCompleteness(data.skill),\n            certificate: calculateModuleCompleteness(data.certificate),\n            language: calculateModuleCompleteness(data.language),\n            portfolio: calculateModuleCompleteness(data.portfolio),\n            social_link: calculateModuleCompleteness(data.social_link)\n          }\n        }\n        return completionData.value\n      }\n    } catch (error) {\n      console.error('获取完整度数据失败:', error)\n      ElMessage.error('获取完整度数据失败')\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 计算整体完整度\n  const calculateCompleteness = (data) => {\n    const modules = Object.keys(data)\n    const completedModules = modules.filter(module => {\n      const moduleData = data[module]\n      return moduleData && (\n        Array.isArray(moduleData) ? moduleData.length > 0 : Object.keys(moduleData).length > 0\n      )\n    })\n    return Math.round((completedModules.length / modules.length) * 100)\n  }\n\n  // 计算单个模块完整度\n  const calculateModuleCompleteness = (moduleData) => {\n    if (!moduleData) return 0\n    if (Array.isArray(moduleData)) {\n      return moduleData.length > 0 ? 100 : 0\n    }\n    const fields = Object.keys(moduleData)\n    const completedFields = fields.filter(field => moduleData[field])\n    return Math.round((completedFields.length / fields.length) * 100)\n  }\n\n  return {\n    loading,\n    basicInfo,\n    profileData,\n    completionData,\n    fetchBasicInfo,\n    fetchModuleData,\n    fetchCompletionData\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
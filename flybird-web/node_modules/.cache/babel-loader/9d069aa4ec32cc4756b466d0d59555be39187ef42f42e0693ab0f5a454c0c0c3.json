{"ast":null,"code":"import axios from 'axios';\nimport router from '@/router';\nimport { STORAGE_KEYS } from '@/utils/storage';\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 10000\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    console.error('Error details:', {\n      status: error.response.status,\n      data: error.response.data,\n      config: {\n        url: error.config.url,\n        method: error.config.method,\n        data: JSON.parse(error.config.data || '{}'),\n        headers: error.config.headers\n      }\n    });\n    console.error('Full response:', error.response);\n\n    // 处理特定的错误情况\n    if (error.response.status === 400) {\n      // 检查是否是手机号被停用的错误\n      const errorData = error.response.data;\n      if (errorData.code === 'phone_disabled' || errorData.message?.includes('停用') || errorData.message?.includes('限制')) {\n        error.isPhoneDisabled = true;\n        error.friendlyMessage = '该手机号已被限制使用，请更换其他手机号';\n      }\n    }\n  }\n  if (error.response?.status === 401) {\n    // 清除本地存储的认证信息\n    localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN);\n\n    // 如果不是登录页面，则重定向到登录页\n    if (!window.location.pathname.includes('/login')) {\n      router.push('/login');\n    }\n  }\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","STORAGE_KEYS","request","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","interceptors","use","config","token","localStorage","getItem","TOKEN","headers","error","console","Promise","reject","response","status","data","url","method","JSON","parse","errorData","code","message","includes","isPhoneDisabled","friendlyMessage","removeItem","REFRESH_TOKEN","window","location","pathname","push"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport router from '@/router'\nimport { STORAGE_KEYS } from '@/utils/storage'\n\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 10000,\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN)\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    console.error('Request error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nrequest.interceptors.response.use(\n  response => {\n    return response\n  },\n  async error => {\n    console.error('Response error:', error)\n    if (error.response) {\n      console.error('Error details:', {\n        status: error.response.status,\n        data: error.response.data,\n        config: {\n          url: error.config.url,\n          method: error.config.method,\n          data: JSON.parse(error.config.data || '{}'),\n          headers: error.config.headers\n        }\n      })\n      console.error('Full response:', error.response)\n\n      // 处理特定的错误情况\n      if (error.response.status === 400) {\n        // 检查是否是手机号被停用的错误\n        const errorData = error.response.data\n        if (errorData.code === 'phone_disabled' || \n            errorData.message?.includes('停用') || \n            errorData.message?.includes('限制')) {\n          error.isPhoneDisabled = true\n          error.friendlyMessage = '该手机号已被限制使用，请更换其他手机号'\n        }\n      }\n    }\n\n    if (error.response?.status === 401) {\n      // 清除本地存储的认证信息\n      localStorage.removeItem(STORAGE_KEYS.TOKEN)\n      localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN)\n      \n      // 如果不是登录页面，则重定向到登录页\n      if (!window.location.pathname.includes('/login')) {\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default request"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EACzCC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACP,OAAO,CAACQ,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACb,YAAY,CAACc,KAAK,CAAC;EACtD,IAAIH,KAAK,EAAE;IACTD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUJ,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,OAAO,CAACO,YAAY,CAACY,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAMJ,KAAK,IAAI;EACbC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACvC,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClBH,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAE;MAC9BK,MAAM,EAAEL,KAAK,CAACI,QAAQ,CAACC,MAAM;MAC7BC,IAAI,EAAEN,KAAK,CAACI,QAAQ,CAACE,IAAI;MACzBZ,MAAM,EAAE;QACNa,GAAG,EAAEP,KAAK,CAACN,MAAM,CAACa,GAAG;QACrBC,MAAM,EAAER,KAAK,CAACN,MAAM,CAACc,MAAM;QAC3BF,IAAI,EAAEG,IAAI,CAACC,KAAK,CAACV,KAAK,CAACN,MAAM,CAACY,IAAI,IAAI,IAAI,CAAC;QAC3CP,OAAO,EAAEC,KAAK,CAACN,MAAM,CAACK;MACxB;IACF,CAAC,CAAC;IACFE,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,QAAQ,CAAC;;IAE/C;IACA,IAAIJ,KAAK,CAACI,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjC;MACA,MAAMM,SAAS,GAAGX,KAAK,CAACI,QAAQ,CAACE,IAAI;MACrC,IAAIK,SAAS,CAACC,IAAI,KAAK,gBAAgB,IACnCD,SAAS,CAACE,OAAO,EAAEC,QAAQ,CAAC,IAAI,CAAC,IACjCH,SAAS,CAACE,OAAO,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACrCd,KAAK,CAACe,eAAe,GAAG,IAAI;QAC5Bf,KAAK,CAACgB,eAAe,GAAG,qBAAqB;MAC/C;IACF;EACF;EAEA,IAAIhB,KAAK,CAACI,QAAQ,EAAEC,MAAM,KAAK,GAAG,EAAE;IAClC;IACAT,YAAY,CAACqB,UAAU,CAACjC,YAAY,CAACc,KAAK,CAAC;IAC3CF,YAAY,CAACqB,UAAU,CAACjC,YAAY,CAACkC,aAAa,CAAC;;IAEnD;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACP,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChD/B,MAAM,CAACuC,IAAI,CAAC,QAAQ,CAAC;IACvB;EACF;EACA,OAAOpB,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
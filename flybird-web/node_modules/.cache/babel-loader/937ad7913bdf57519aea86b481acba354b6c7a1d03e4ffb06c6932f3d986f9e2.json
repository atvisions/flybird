{"ast":null,"code":"import axios from 'axios';\nimport { STORAGE_KEYS } from '@/utils/storage';\nimport config from '@/config';\nimport { showToast } from '@/components/ToastMessage';\nconst request = axios.create({\n  baseURL: config.API_URL,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('Request:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('Error:', {\n    status: error.response?.status,\n    data: error.response?.data,\n    config: error.config\n  });\n\n  // 处理不同的错误情况\n  if (error.response) {\n    // 服务器返回了错误响应\n    const {\n      status,\n      data\n    } = error.response;\n    switch (status) {\n      case 400:\n        // 显示具体的错误信息\n        if (data.message) {\n          showToast(data.message, 'error');\n        } else if (data.detail) {\n          showToast(data.detail, 'error');\n        } else if (typeof data === 'string') {\n          showToast(data, 'error');\n        } else {\n          showToast('请求参数错误', 'error');\n        }\n        break;\n      case 401:\n        showToast('请先登录', 'error');\n        break;\n      case 403:\n        showToast('没有权限', 'error');\n        break;\n      case 404:\n        showToast('请求的资源不存在', 'error');\n        break;\n      case 500:\n        showToast('服务器错误', 'error');\n        break;\n      default:\n        showToast('请求失败', 'error');\n    }\n  } else if (error.request) {\n    // 请求发出但没有收到响应\n    showToast('网络连接失败', 'error');\n  } else {\n    // 请求配置出错\n    showToast('请求配置错误', 'error');\n  }\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","STORAGE_KEYS","config","showToast","request","create","baseURL","API_URL","timeout","headers","interceptors","use","token","localStorage","getItem","TOKEN","console","log","url","method","data","error","Promise","reject","response","status","message","detail"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { STORAGE_KEYS } from '@/utils/storage'\nimport config from '@/config'\nimport { showToast } from '@/components/ToastMessage'\n\nconst request = axios.create({\n  baseURL: config.API_URL,\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN)\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    console.log('Request:', {\n      url: config.url,\n      method: config.method,\n      headers: config.headers,\n      data: config.data\n    })\n    return config\n  },\n  error => {\n    console.error('Request Error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nrequest.interceptors.response.use(\n  response => {\n    console.log('Response:', response)\n    return response\n  },\n  error => {\n    console.error('Error:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      config: error.config\n    })\n\n    // 处理不同的错误情况\n    if (error.response) {\n      // 服务器返回了错误响应\n      const { status, data } = error.response\n      \n      switch (status) {\n        case 400:\n          // 显示具体的错误信息\n          if (data.message) {\n            showToast(data.message, 'error')\n          } else if (data.detail) {\n            showToast(data.detail, 'error')\n          } else if (typeof data === 'string') {\n            showToast(data, 'error')\n          } else {\n            showToast('请求参数错误', 'error')\n          }\n          break\n          \n        case 401:\n          showToast('请先登录', 'error')\n          break\n          \n        case 403:\n          showToast('没有权限', 'error')\n          break\n          \n        case 404:\n          showToast('请求的资源不存在', 'error')\n          break\n          \n        case 500:\n          showToast('服务器错误', 'error')\n          break\n          \n        default:\n          showToast('请求失败', 'error')\n      }\n    } else if (error.request) {\n      // 请求发出但没有收到响应\n      showToast('网络连接失败', 'error')\n    } else {\n      // 请求配置出错\n      showToast('请求配置错误', 'error')\n    }\n\n    return Promise.reject(error)\n  }\n)\n\nexport default request"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
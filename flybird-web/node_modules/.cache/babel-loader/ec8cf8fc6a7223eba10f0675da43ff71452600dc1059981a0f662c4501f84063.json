{"ast":null,"code":"import { ref } from 'vue';\nimport { CameraIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nexport default {\n  __name: 'AvatarUploadDialog',\n  props: {\n    modelValue: Boolean,\n    loading: Boolean\n  },\n  emits: ['update:modelValue', 'upload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const fileInput = ref(null);\n    const selectedFile = ref(null);\n    const triggerFileInput = () => {\n      fileInput.value?.click();\n    };\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        selectedFile.value = file;\n      }\n    };\n    const handleDrop = event => {\n      const file = event.dataTransfer.files[0];\n      if (file && file.type.startsWith('image/')) {\n        selectedFile.value = file;\n      }\n    };\n    const handleUpload = () => {\n      if (selectedFile.value) {\n        emit('upload', selectedFile.value);\n      }\n    };\n    const close = () => {\n      selectedFile.value = null;\n      emit('update:modelValue', false);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      fileInput,\n      selectedFile,\n      triggerFileInput,\n      handleFileChange,\n      handleDrop,\n      handleUpload,\n      close,\n      ref,\n      get CameraIcon() {\n        return CameraIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","CameraIcon","XMarkIcon","props","__props","emit","__emit","fileInput","selectedFile","triggerFileInput","value","click","handleFileChange","event","file","target","files","handleDrop","dataTransfer","type","startsWith","handleUpload","close"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/dialogs/AvatarUploadDialog.vue"],"sourcesContent":["<template>\n  <div v-if=\"modelValue\" class=\"modal-overlay\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h3>上传头像</h3>\n        <button class=\"close-btn\" @click=\"close\">\n          <XMarkIcon class=\"w-5 h-5\" />\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <!-- 文件选择区域 -->\n        <div class=\"upload-area\">\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            class=\"hidden\"\n            @change=\"handleFileChange\"\n          />\n          <div\n            class=\"drop-zone\"\n            @click=\"triggerFileInput\"\n            @drop.prevent=\"handleDrop\"\n            @dragover.prevent\n          >\n            <div class=\"text-center\">\n              <CameraIcon class=\"w-8 h-8 mx-auto text-gray-400\" />\n              <p class=\"mt-2 text-sm text-gray-500\">点击或拖拽图片到此处上传</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button \n          class=\"btn btn-default\" \n          @click=\"close\"\n          :disabled=\"loading\"\n        >\n          取消\n        </button>\n        <button \n          class=\"btn btn-primary\" \n          @click=\"handleUpload\"\n          :disabled=\"!selectedFile || loading\"\n        >\n          {{ loading ? '上传中...' : '确认' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { CameraIcon, XMarkIcon } from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  modelValue: Boolean,\n  loading: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst fileInput = ref(null)\nconst selectedFile = ref(null)\n\nconst triggerFileInput = () => {\n  fileInput.value?.click()\n}\n\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (file) {\n    selectedFile.value = file\n  }\n}\n\nconst handleDrop = (event) => {\n  const file = event.dataTransfer.files[0]\n  if (file && file.type.startsWith('image/')) {\n    selectedFile.value = file\n  }\n}\n\nconst handleUpload = () => {\n  if (selectedFile.value) {\n    emit('upload', selectedFile.value)\n  }\n}\n\nconst close = () => {\n  selectedFile.value = null\n  emit('update:modelValue', false)\n}\n</script>\n\n<style scoped>\n.drop-zone {\n  border: 2px dashed #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 2rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.drop-zone:hover {\n  border-color: #6366f1;\n  background-color: #f9fafb;\n}\n\n/* 其他样式保持不变 */\n</style> "],"mappings":"AAqDA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,UAAU,EAAEC,SAAS,QAAQ,2BAA0B;;;;;;;;;;;;;IAEhE,MAAMC,KAAK,GAAGC,OAAA;IAKd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,SAAS,GAAGP,GAAG,CAAC,IAAI;IAC1B,MAAMQ,YAAY,GAAGR,GAAG,CAAC,IAAI;IAE7B,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;MAC7BF,SAAS,CAACG,KAAK,EAAEC,KAAK,CAAC;IACzB;IAEA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;MAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;MACjC,IAAIF,IAAI,EAAE;QACRN,YAAY,CAACE,KAAK,GAAGI,IAAG;MAC1B;IACF;IAEA,MAAMG,UAAU,GAAIJ,KAAK,IAAK;MAC5B,MAAMC,IAAI,GAAGD,KAAK,CAACK,YAAY,CAACF,KAAK,CAAC,CAAC;MACvC,IAAIF,IAAI,IAAIA,IAAI,CAACK,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAC1CZ,YAAY,CAACE,KAAK,GAAGI,IAAG;MAC1B;IACF;IAEA,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIb,YAAY,CAACE,KAAK,EAAE;QACtBL,IAAI,CAAC,QAAQ,EAAEG,YAAY,CAACE,KAAK;MACnC;IACF;IAEA,MAAMY,KAAK,GAAGA,CAAA,KAAM;MAClBd,YAAY,CAACE,KAAK,GAAG,IAAG;MACxBL,IAAI,CAAC,mBAAmB,EAAE,KAAK;IACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
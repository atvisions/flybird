{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { showToast } from '@/components/ToastMessage';\nimport { useDeleteAccount } from '@/composables/useDeleteAccount';\nimport { usePhone } from '@/composables/usePhone';\nimport { useEmail } from '@/composables/useEmail';\nimport { useChangePassword } from '@/composables/useChangePassword';\nimport { ElMessageBox } from 'element-plus';\nimport { account } from '@/api/account';\nimport { useAuthStore } from '@/stores/auth';\nimport { useUserStore } from '@/stores/user';\nexport default {\n  __name: 'AccountSettings',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const userStore = useUserStore();\n\n    // 密码状态\n    const passwordFormState = ref({\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      loading: false,\n      strength: 0\n    });\n\n    // 手机号掩码处理函数\n    const maskPhone = phone => {\n      if (!phone) return '未绑定';\n      return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2');\n    };\n\n    // 从 userStore 获取用户信息\n    const phone = computed(() => userStore.userInfo?.phone);\n    const email = computed(() => userStore.userInfo?.email);\n\n    // 弹窗状态管理\n    const showEmailModal = ref(false);\n    const showPhoneModal = ref(false);\n    const showPasswordModal = ref(false);\n    const showDeleteConfirm = ref(false);\n    const showPassword = ref(false);\n\n    // 打开/关闭弹窗方法\n    const openEmailModal = () => {\n      emailManager.state.value = '';\n      emailManager.state.code = '';\n      emailManager.state.password = '';\n      showPassword.value = false;\n      showEmailModal.value = true;\n    };\n    const closeEmailModal = () => {\n      showEmailModal.value = false;\n      emailManager.state.value = '';\n      emailManager.state.code = '';\n      emailManager.state.password = '';\n      emailManager.state.loading = false;\n      showPassword.value = false;\n    };\n    const openPhoneModal = () => {\n      phoneManager.state.value = '';\n      phoneManager.state.code = '';\n      phoneManager.state.loading = false;\n      phoneManager.state.countdown = 0;\n      showPhoneModal.value = true;\n    };\n    const closePhoneModal = () => {\n      showPhoneModal.value = false;\n      phoneManager.state.value = '';\n      phoneManager.state.code = '';\n      phoneManager.state.loading = false;\n      phoneManager.state.countdown = 0;\n    };\n    const openPasswordModal = () => {\n      passwordFormState.value.oldPassword = '';\n      passwordFormState.value.newPassword = '';\n      passwordFormState.value.confirmPassword = '';\n      passwordFormState.value.strength = 0;\n      showPasswordModal.value = true;\n    };\n    const closePasswordModal = () => {\n      showPasswordModal.value = false;\n      passwordFormState.value.oldPassword = '';\n      passwordFormState.value.newPassword = '';\n      passwordFormState.value.confirmPassword = '';\n      passwordFormState.value.loading = false;\n      passwordFormState.value.strength = 0;\n    };\n    const openDeleteConfirm = () => {\n      deleteFormState.value.password = '';\n      showDeleteConfirm.value = true;\n    };\n    const closeDeleteConfirm = () => {\n      showDeleteConfirm.value = false;\n      deleteFormState.value.password = '';\n    };\n\n    // 邮箱管理器\n    const emailManager = useEmail();\n    const phoneManager = usePhone();\n    const {\n      validatePassword\n    } = useChangePassword();\n    const {\n      loading\n    } = useDeleteAccount();\n\n    // 验证码相关\n    const isRequestingCode = ref(false);\n\n    // 修改手机号表单验证\n    const isPhoneFormValid = computed(() => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      const isValidPhone = phoneRegex.test(phoneManager.state.value);\n      const isValidCode = phoneManager.state.code?.length === 6;\n\n      // 添加调试日志\n      console.log('Phone validation:', {\n        phone: phoneManager.state.value,\n        code: phoneManager.state.code,\n        isValidPhone,\n        isValidCode,\n        loading: phoneManager.state.loading,\n        finalResult: isValidPhone && isValidCode && !phoneManager.state.loading\n      });\n\n      // 修改验证逻辑\n      return isValidPhone && isValidCode && !phoneManager.state.loading;\n    });\n\n    // 邮箱格式验证正则\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    // 处理邮箱更新的验证码发送\n    const handleEmailSendCode = async () => {\n      if (!emailManager.state.value) {\n        showToast('请输入新邮箱', 'warning');\n        return;\n      }\n      if (!emailManager.state.password) {\n        showToast('请输入登录密码', 'warning');\n        return;\n      }\n\n      // 验证邮箱格式\n      if (!emailRegex.test(emailManager.state.value)) {\n        showToast('请输入正确的邮箱格式', 'warning');\n        return;\n      }\n      try {\n        emailManager.state.loading = true;\n        const response = await account.sendEmailCode({\n          email: emailManager.state.value,\n          password: emailManager.state.password.trim()\n        });\n        if (response?.data?.message) {\n          showToast(response.data.message, 'success');\n          emailManager.state.countdown = 60;\n          startEmailCountdown();\n        }\n      } catch (error) {\n        const errorMsg = error.response?.data?.detail || error.message || '发送验证码失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        emailManager.state.loading = false;\n      }\n    };\n\n    // 修改密码强度更新的处理方法\n    const handlePasswordInput = () => {\n      const strength = validatePassword(passwordFormState.value.newPassword);\n      passwordFormState.value.strength = strength;\n    };\n\n    // 密码表单验证\n    const isPasswordFormValid = computed(() => {\n      return passwordFormState.oldPassword && passwordFormState.newPassword && passwordFormState.confirmPassword && passwordFormState.newPassword === passwordFormState.confirmPassword && passwordFormState.strength >= 3 && !passwordFormState.loading;\n    });\n\n    // 添加表单数据\n    const deleteFormState = ref({\n      password: '',\n      loading: false\n    });\n\n    // 处理确认注销\n    const handleConfirmDelete = async () => {\n      if (!deleteFormState.value.password) {\n        showToast('请输入密码', 'warning');\n        return;\n      }\n      try {\n        const response = await account.deleteAccount(deleteFormState.value);\n        if (response?.data?.code === 200) {\n          showToast('账号已注销', 'success');\n          // 使用 auth store 的 logout 方法清除所有状态\n          await authStore.logout();\n          // 清除 user store 的状态\n          userStore.clearUserInfo();\n          // 清除其他可能的状态\n          localStorage.removeItem('isLoggedIn');\n          // 强制刷新页面以确保所有状态都被清除\n          window.location.href = '/login';\n        }\n      } catch (error) {\n        console.error('注销失败:', error);\n        showToast(error?.message || '注销失败', 'error');\n      }\n    };\n\n    // 倒计时管理\n    let emailTimer = null;\n    let phoneTimer = null;\n    const startEmailCountdown = () => {\n      if (emailTimer) {\n        clearInterval(emailTimer);\n      }\n      emailManager.state.countdown = 60;\n      emailTimer = setInterval(() => {\n        if (emailManager.state.countdown > 0) {\n          emailManager.state.countdown--;\n        } else {\n          clearInterval(emailTimer);\n          emailTimer = null;\n        }\n      }, 1000);\n    };\n    const startPhoneCountdown = () => {\n      if (phoneTimer) {\n        clearInterval(phoneTimer);\n      }\n      phoneManager.state.countdown = 60;\n      phoneTimer = setInterval(() => {\n        if (phoneManager.state.countdown > 0) {\n          phoneManager.state.countdown--;\n        } else {\n          clearInterval(phoneTimer);\n          phoneTimer = null;\n        }\n      }, 1000);\n    };\n\n    // 修改手机号验证码发送处理函数\n    const handlePhoneSendCode = async () => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phoneManager.state.value) {\n        showToast('请输入新手机号', 'warning');\n        return;\n      }\n      if (!phoneRegex.test(phoneManager.state.value)) {\n        showToast('请输入正确的手机号格式', 'warning');\n        return;\n      }\n      try {\n        phoneManager.state.loading = true;\n        const response = await account.sendVerifyCode({\n          phone: phoneManager.state.value.trim(),\n          scene: 'change_phone' // 使用更换手机号的场景\n        });\n        if (response?.data?.code === 200) {\n          // 检查正确的响应格式\n          showToast(response.data.message, 'success');\n          phoneManager.state.countdown = 60; // 先设置倒计时\n          startPhoneCountdown(); // 再启动倒计时\n        }\n      } catch (error) {\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '发送验证码失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        phoneManager.state.loading = false;\n      }\n    };\n\n    // 修改手机号处理函数\n    const handlePhoneUpdate = async () => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phoneManager.state.value || !phoneRegex.test(phoneManager.state.value)) {\n        showToast('请输入正确的手机号', 'warning');\n        return;\n      }\n      if (!phoneManager.state.code || phoneManager.state.code.length !== 6) {\n        showToast('请输入6位验证码', 'warning');\n        return;\n      }\n      try {\n        phoneManager.state.loading = true;\n        const response = await account.changePhone({\n          phone: phoneManager.state.value.trim(),\n          code: phoneManager.state.code.trim()\n        });\n\n        // 修改响应处理逻辑，兼容两种返回格式\n        if (response?.data?.code === 200 || response?.data?.detail) {\n          const successMsg = response.data.message || response.data.detail || '手机号修改成功';\n          showToast(successMsg, 'success');\n          closePhoneModal();\n          await userStore.getUserInfo();\n        }\n      } catch (error) {\n        console.error('手机号更新失败:', error);\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '手机号更新失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        phoneManager.state.loading = false;\n      }\n    };\n\n    // 只保留一个 onUnmounted\n    onUnmounted(() => {\n      if (emailTimer) {\n        clearInterval(emailTimer);\n        emailTimer = null;\n      }\n      if (phoneTimer) {\n        clearInterval(phoneTimer);\n        phoneTimer = null;\n      }\n    });\n\n    // 用户信息\n    const userInfo = ref(null);\n\n    // 用户信息加载状态\n    const userInfoLoading = ref(false);\n\n    // 获取用户信息\n    const fetchUserInfo = async () => {\n      try {\n        userInfoLoading.value = true;\n        await userStore.getUserInfo();\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        showToast('获取用户信息失败', 'error');\n      } finally {\n        userInfoLoading.value = false;\n      }\n    };\n\n    // 在组件挂载时获取用户信息\n    onMounted(() => {\n      fetchUserInfo();\n    });\n\n    // 表单验证\n    const validateForm = () => {\n      if (!form.value.old_password) {\n        showToast('请输入当前密码', 'error');\n        return false;\n      }\n      if (!form.value.new_password) {\n        showToast('请输入新密码', 'error');\n        return false;\n      }\n      if (!form.value.confirm_password) {\n        showToast('请确认新密码', 'error');\n        return false;\n      }\n      if (form.value.new_password !== form.value.confirm_password) {\n        showToast('两次输入的密码不一致', 'error');\n        return false;\n      }\n      if (form.value.new_password.length < 6) {\n        showToast('密码长度不能少于6位', 'error');\n        return false;\n      }\n      return true;\n    };\n\n    // 邮箱解绑相关\n    const showUnbindEmailModal = ref(false);\n    const unbindEmailLoading = ref(false);\n    const unbindEmailForm = ref({\n      password: ''\n    });\n\n    // 打开解绑弹窗\n    const handleUnbindEmail = () => {\n      showUnbindEmailModal.value = true;\n    };\n\n    // 关闭解绑弹窗\n    const closeUnbindEmailModal = () => {\n      showUnbindEmailModal.value = false;\n      unbindEmailForm.value.password = '';\n    };\n\n    // 确认解绑\n    const confirmUnbindEmail = async () => {\n      try {\n        unbindEmailLoading.value = true;\n        const response = await account.unbindEmail({\n          password: unbindEmailForm.value.password\n        });\n        if (response?.data?.message) {\n          closeUnbindEmailModal();\n          // 更新用户信息\n          await userStore.getUserInfo();\n          showToast(response.data.message || '邮箱解绑成功', 'success');\n        }\n      } catch (error) {\n        console.error('邮箱解绑失败:', error);\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '邮箱解绑失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        unbindEmailLoading.value = false;\n      }\n    };\n\n    // 密码强度相关\n    const strengthText = computed(() => {\n      const strength = passwordFormState.value.strength;\n      if (strength <= 2) return '弱';\n      if (strength <= 4) return '中';\n      return '强';\n    });\n    const strengthTextClass = computed(() => {\n      const strength = passwordFormState.value.strength;\n      if (strength <= 2) return 'text-red-500';\n      if (strength <= 4) return 'text-yellow-500';\n      return 'text-green-500';\n    });\n    const strengthColorClass = computed(() => {\n      const strength = passwordFormState.value.strength;\n      if (strength <= 2) return 'bg-red-500';\n      if (strength <= 4) return 'bg-yellow-500';\n      return 'bg-green-500';\n    });\n\n    // 处理密码更新\n    const handlePasswordUpdate = async () => {\n      try {\n        passwordFormState.loading = true;\n        const response = await account.updatePassword({\n          old_password: passwordFormState.oldPassword,\n          new_password: passwordFormState.newPassword,\n          confirm_password: passwordFormState.confirmPassword\n        });\n        if (response?.data?.message) {\n          closePasswordModal();\n          showToast(response.data.message || '密码修改成功', 'success');\n        }\n      } catch (error) {\n        console.error('密码修改失败:', error);\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '密码修改失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        passwordFormState.loading = false;\n      }\n    };\n\n    // 修改邮箱表单验证\n    const isEmailFormValid = computed(() => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const isValidEmail = emailRegex.test(emailManager.state.value);\n      const isValid = emailManager.state.value && emailManager.state.code && emailManager.state.password &&\n      // 确保密码已输入\n      isValidEmail && emailManager.state.code.length === 6; // 验证码长度验证\n\n      console.log('Email form validation:', {\n        email: emailManager.state.value,\n        code: emailManager.state.code,\n        password: emailManager.state.password,\n        isValidEmail,\n        codeLength: emailManager.state.code.length,\n        isValid\n      });\n      return isValid;\n    });\n\n    // 处理邮箱更新\n    const handleEmailUpdate = async () => {\n      console.log('Form state:', {\n        email: emailManager.state.value,\n        code: emailManager.state.code,\n        password: emailManager.state.password,\n        isValid: isEmailFormValid.value\n      });\n      if (!isEmailFormValid.value) {\n        showToast('请填写完整信息', 'warning');\n        return;\n      }\n      try {\n        emailManager.state.loading = true;\n        const response = await account.bindEmail({\n          email: emailManager.state.value,\n          code: emailManager.state.code,\n          password: emailManager.state.password\n        });\n        if (response?.data?.message) {\n          showToast(response.data.message, 'success');\n          closeEmailModal();\n          // 更新用户信息\n          await userStore.getUserInfo();\n        }\n      } catch (error) {\n        console.error('邮箱更新失败:', error);\n        const errorMsg = error.response?.data?.detail || error.message || '邮箱更新失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        emailManager.state.loading = false;\n      }\n    };\n\n    // 修改手机号验证码按钮禁用状态计算\n    const isPhoneCodeButtonDisabled = computed(() => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      return phoneManager.state.loading || phoneManager.state.countdown > 0 || !phoneManager.state.value || !phoneRegex.test(phoneManager.state.value);\n    });\n    const __returned__ = {\n      router,\n      authStore,\n      userStore,\n      passwordFormState,\n      maskPhone,\n      phone,\n      email,\n      showEmailModal,\n      showPhoneModal,\n      showPasswordModal,\n      showDeleteConfirm,\n      showPassword,\n      openEmailModal,\n      closeEmailModal,\n      openPhoneModal,\n      closePhoneModal,\n      openPasswordModal,\n      closePasswordModal,\n      openDeleteConfirm,\n      closeDeleteConfirm,\n      emailManager,\n      phoneManager,\n      validatePassword,\n      loading,\n      isRequestingCode,\n      isPhoneFormValid,\n      emailRegex,\n      handleEmailSendCode,\n      handlePasswordInput,\n      isPasswordFormValid,\n      deleteFormState,\n      handleConfirmDelete,\n      get emailTimer() {\n        return emailTimer;\n      },\n      set emailTimer(v) {\n        emailTimer = v;\n      },\n      get phoneTimer() {\n        return phoneTimer;\n      },\n      set phoneTimer(v) {\n        phoneTimer = v;\n      },\n      startEmailCountdown,\n      startPhoneCountdown,\n      handlePhoneSendCode,\n      handlePhoneUpdate,\n      userInfo,\n      userInfoLoading,\n      fetchUserInfo,\n      validateForm,\n      showUnbindEmailModal,\n      unbindEmailLoading,\n      unbindEmailForm,\n      handleUnbindEmail,\n      closeUnbindEmailModal,\n      confirmUnbindEmail,\n      strengthText,\n      strengthTextClass,\n      strengthColorClass,\n      handlePasswordUpdate,\n      isEmailFormValid,\n      handleEmailUpdate,\n      isPhoneCodeButtonDisabled,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get useDeleteAccount() {\n        return useDeleteAccount;\n      },\n      get usePhone() {\n        return usePhone;\n      },\n      get useEmail() {\n        return useEmail;\n      },\n      get useChangePassword() {\n        return useChangePassword;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get account() {\n        return account;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","useRouter","showToast","useDeleteAccount","usePhone","useEmail","useChangePassword","ElMessageBox","account","useAuthStore","useUserStore","router","authStore","userStore","passwordFormState","oldPassword","newPassword","confirmPassword","loading","strength","maskPhone","phone","replace","userInfo","email","showEmailModal","showPhoneModal","showPasswordModal","showDeleteConfirm","showPassword","openEmailModal","emailManager","state","value","code","password","closeEmailModal","openPhoneModal","phoneManager","countdown","closePhoneModal","openPasswordModal","closePasswordModal","openDeleteConfirm","deleteFormState","closeDeleteConfirm","validatePassword","isRequestingCode","isPhoneFormValid","phoneRegex","isValidPhone","test","isValidCode","length","console","log","finalResult","emailRegex","handleEmailSendCode","response","sendEmailCode","trim","data","message","startEmailCountdown","error","errorMsg","detail","handlePasswordInput","isPasswordFormValid","handleConfirmDelete","deleteAccount","logout","clearUserInfo","localStorage","removeItem","window","location","href","emailTimer","phoneTimer","clearInterval","setInterval","startPhoneCountdown","handlePhoneSendCode","sendVerifyCode","scene","handlePhoneUpdate","changePhone","successMsg","getUserInfo","userInfoLoading","fetchUserInfo","validateForm","form","old_password","new_password","confirm_password","showUnbindEmailModal","unbindEmailLoading","unbindEmailForm","handleUnbindEmail","closeUnbindEmailModal","confirmUnbindEmail","unbindEmail","strengthText","strengthTextClass","strengthColorClass","handlePasswordUpdate","updatePassword","isEmailFormValid","isValidEmail","isValid","codeLength","handleEmailUpdate","bindEmail","isPhoneCodeButtonDisabled"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/AccountSettings.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto\">\n    <div class=\"space-y-6\">\n      <!-- 账户安全 -->\n      <section class=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div class=\"px-6 py-4 bg-gray-100 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium text-gray-900\">账户安全</h2>\n        </div>\n        \n        <div class=\"p-6 space-y-6\">\n          <!-- 邮箱 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">邮箱</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">{{ email || '未绑定' }}</p>\n            </div>\n            <div class=\"flex space-x-2\">\n              <button \n                v-if=\"email\"\n                @click=\"handleUnbindEmail\"\n                class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-red-600 border border-red-600 \n                hover:bg-red-50 transition-colors rounded-md\">\n                取消绑定\n              </button>\n              <button \n                @click=\"openEmailModal\"\n                class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n                hover:bg-indigo-50 transition-colors rounded-md\">\n                {{ email ? '更换邮箱' : '绑定邮箱' }}\n              </button>\n            </div>\n          </div>\n\n          <!-- 手机号 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">手机号</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">{{ maskPhone(phone) }}</p>\n            </div>\n            <button \n              @click=\"openPhoneModal\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n              hover:bg-indigo-50 transition-colors rounded-md\">\n              更换手机号\n            </button>\n          </div>\n\n          <!-- 密码 -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">登录密码</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">用于保护账号安全</p>\n            </div>\n            <button \n              @click=\"openPasswordModal\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-indigo-600 border border-indigo-600 \n              hover:bg-indigo-50 transition-colors rounded-md\">\n              修改密码\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <!-- 账户注销 -->\n      <section class=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div class=\"px-6 py-4 bg-gray-100 border-b border-gray-200\">\n          <h2 class=\"text-lg font-medium text-gray-900\">账户注销</h2>\n        </div>\n        \n        <div class=\"p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex-1\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-5 h-5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n                <span class=\"text-sm font-medium text-gray-900\">账户注销</span>\n              </div>\n              <p class=\"mt-1 text-sm text-gray-500\">注销后，账户将被永久删除且无法恢复</p>\n            </div>\n            <button \n              @click=\"openDeleteConfirm\"\n              :disabled=\"loading\"\n              class=\"text-red-600 hover:text-red-500\"\n            >\n              {{ loading ? '注销中...' : '注销账号' }}\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <!-- Teleport 部分重写所有弹窗 -->\n      <Teleport to=\"body\">\n        <!-- 手机号修改弹窗 -->\n        <div v-if=\"showPhoneModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>更换手机号</h3>\n              <button class=\"close-btn\" @click=\"closePhoneModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <input \n                  type=\"text\" \n                  v-model=\"phoneManager.state.value\"\n                  placeholder=\"请输入新手机号\"\n                  :disabled=\"phoneManager.state.loading\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <div class=\"code-input\">\n                  <input \n                    type=\"text\" \n                    v-model=\"phoneManager.state.code\"\n                    placeholder=\"请输入验证码\"\n                    :disabled=\"phoneManager.state.loading\"\n                  />\n                  <button \n                    @click=\"handlePhoneSendCode\"\n                    :disabled=\"isPhoneCodeButtonDisabled\"\n                    class=\"code-btn\"\n                  >\n                    {{ phoneManager.state.countdown > 0 \n                      ? `${phoneManager.state.countdown}s` \n                      : (phoneManager.state.loading ? '发送中...' : '获取验证码') \n                    }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closePhoneModal\"\n                :disabled=\"phoneManager.state.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handlePhoneUpdate\"\n                :disabled=\"!isPhoneFormValid\"\n              >\n                {{ phoneManager.state.loading ? '更新中...' : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 密码修改弹窗 -->\n        <div v-if=\"showPasswordModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>修改密码</h3>\n              <button class=\"close-btn\" @click=\"closePasswordModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <!-- 原密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordFormState.oldPassword\"\n                  placeholder=\"请输入当前密码\"\n                />\n              </div>\n              \n              <!-- 新密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordFormState.newPassword\"\n                  @input=\"handlePasswordInput\"\n                  placeholder=\"请输入新密码\"\n                />\n                <!-- 密码强度指示器 -->\n                <div class=\"password-strength\">\n                  <div class=\"strength-text\" :class=\"strengthTextClass\">\n                    密码强度: {{ strengthText }}\n                  </div>\n                  <div class=\"strength-bar\">\n                    <div \n                      class=\"strength-progress\" \n                      :class=\"strengthColorClass\"\n                      :style=\"{ width: (passwordFormState.strength * 16.67) + '%' }\"\n                    ></div>\n                  </div>\n                </div>\n                <!-- 密码格式要求提示 -->\n                <div class=\"password-requirements text-sm text-gray-500 mt-2\">\n                  <p>密码必须满足：</p>\n                  <ul class=\"list-disc pl-5 space-y-1\">\n                    <li>长度至少8位</li>\n                    <li>包含字母</li>\n                    <li>包含数字</li>\n                  </ul>\n                  <p class=\"mt-1\">建议包含：</p>\n                  <ul class=\"list-disc pl-5 space-y-1\">\n                    <li>大写字母</li>\n                    <li>特殊字符（!@#$%^&*）</li>\n                  </ul>\n                </div>\n              </div>\n\n              <!-- 确认密码 -->\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"passwordFormState.confirmPassword\"\n                  placeholder=\"请确认新密码\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closePasswordModal\"\n                :disabled=\"passwordFormState.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handlePasswordUpdate\"\n                :disabled=\"!isPasswordFormValid\"\n              >\n                {{ passwordFormState.loading ? '修改中...' : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 账户注销确认弹窗 -->\n        <div v-if=\"showDeleteConfirm\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                </svg>\n                <h3 class=\"text-red-700\">账户注销确认</h3>\n              </div>\n              <button class=\"close-btn\" @click=\"closeDeleteConfirm\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"bg-red-50 p-4 rounded-md mb-4 border border-red-100\">\n                <div class=\"flex\">\n                  <div class=\"flex-shrink-0\">\n                    <svg class=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"text-sm font-medium text-red-800\">\n                      请确认以下信息\n                    </h3>\n                    <div class=\"mt-2 text-sm text-red-700\">\n                      <ul class=\"list-disc pl-5 space-y-1\">\n                        <li>账户注销后将无法恢复</li>\n                        <li>所有个人数据将被永久删除</li>\n                        <li>相关服务和功能将立即停止</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"deleteFormState.value.password\"\n                  placeholder=\"请输入登录密码确认\"\n                  :disabled=\"loading\"\n                  class=\"border-red-300 focus:border-red-500 focus:ring-red-500\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closeDeleteConfirm\"\n                :disabled=\"loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-danger\" \n                @click=\"handleConfirmDelete\"\n                :disabled=\"loading || !deleteFormState.value.password\"\n              >\n                {{ loading ? '注销中...' : '确认注销' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 邮箱绑定弹窗 -->\n        <div v-if=\"showEmailModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h3>{{ email ? '更换邮箱' : '绑定邮箱' }}</h3>\n              <button class=\"close-btn\" @click=\"closeEmailModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"form-group\">\n                <input \n                  type=\"email\" \n                  v-model=\"emailManager.state.value\"\n                  placeholder=\"请输入邮箱地址\"\n                  :disabled=\"emailManager.state.loading\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <div class=\"relative\">\n                  <input \n                    :type=\"showPassword ? 'text' : 'password'\"\n                    v-model=\"emailManager.state.password\"\n                    placeholder=\"请输入登录密码\"\n                    :disabled=\"emailManager.state.loading\"\n                  />\n                  <button \n                    type=\"button\"\n                    class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                    @click=\"showPassword = !showPassword\"\n                  >\n                    <svg \n                      class=\"h-5 w-5 text-gray-400\" \n                      :class=\"{ 'text-indigo-600': showPassword }\"\n                      fill=\"none\" \n                      stroke=\"currentColor\" \n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path \n                        v-if=\"showPassword\"\n                        stroke-linecap=\"round\" \n                        stroke-linejoin=\"round\" \n                        stroke-width=\"2\" \n                        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                      />\n                      <path \n                        v-if=\"showPassword\"\n                        stroke-linecap=\"round\" \n                        stroke-linejoin=\"round\" \n                        stroke-width=\"2\"\n                        d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n                      />\n                      <path\n                        v-else\n                        stroke-linecap=\"round\" \n                        stroke-linejoin=\"round\" \n                        stroke-width=\"2\"\n                        d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <div class=\"code-input\">\n                  <input \n                    type=\"text\" \n                    v-model=\"emailManager.state.code\"\n                    placeholder=\"请输入验证码\"\n                    :disabled=\"emailManager.state.loading\"\n                  />\n                  <button \n                    @click=\"handleEmailSendCode\"\n                    :disabled=\"isCodeButtonDisabled\"\n                    class=\"code-btn\"\n                  >\n                    {{ emailManager.state.countdown > 0 \n                      ? `${emailManager.state.countdown}s` \n                      : (emailManager.state.loading ? '发送中...' : '获取验证码') \n                    }}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closeEmailModal\"\n                :disabled=\"emailManager.state.loading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"handleEmailUpdate\"\n                :disabled=\"!isEmailFormValid || emailManager.state.loading\"\n              >\n                {{ emailManager.state.loading ? (email ? '更换中...' : '绑定中...') : '确认' }}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- 邮箱解绑确认弹窗 -->\n        <div v-if=\"showUnbindEmailModal\" class=\"modal-overlay\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <div class=\"flex items-center space-x-2\">\n                <svg class=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                    d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n                <h3 class=\"text-gray-900\">取消邮箱绑定</h3>\n              </div>\n              <button class=\"close-btn\" @click=\"closeUnbindEmailModal\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"bg-gray-50 p-4 rounded-md mb-4 border border-gray-200\">\n                <div class=\"flex\">\n                  <div class=\"flex-shrink-0\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" \n                        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                  <div class=\"ml-3\">\n                    <h3 class=\"text-sm font-medium text-gray-900\">\n                      请确认以下信息\n                    </h3>\n                    <div class=\"mt-2 text-sm text-gray-600\">\n                      <ul class=\"list-disc pl-5 space-y-1\">\n                        <li>取消绑定后将无法接收邮件通知</li>\n                        <li>需要输入登录密码确认操作</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <input \n                  type=\"password\" \n                  v-model=\"unbindEmailForm.password\"\n                  placeholder=\"请输入登录密码确认\"\n                  :disabled=\"unbindEmailLoading\"\n                  class=\"border-gray-300 focus:border-indigo-500 focus:ring-indigo-500\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button \n                class=\"btn btn-default\" \n                @click=\"closeUnbindEmailModal\"\n                :disabled=\"unbindEmailLoading\"\n              >\n                取消\n              </button>\n              <button \n                class=\"btn btn-primary\" \n                @click=\"confirmUnbindEmail\"\n                :disabled=\"unbindEmailLoading || !unbindEmailForm.password\"\n              >\n                {{ unbindEmailLoading ? '处理中...' : '确认解绑' }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </Teleport>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { showToast } from '@/components/ToastMessage'\nimport { useDeleteAccount } from '@/composables/useDeleteAccount'\nimport { usePhone } from '@/composables/usePhone'\nimport { useEmail } from '@/composables/useEmail'\nimport { useChangePassword } from '@/composables/useChangePassword'\nimport { ElMessageBox } from 'element-plus'\nimport { account } from '@/api/account'\nimport { useAuthStore } from '@/stores/auth'\nimport { useUserStore } from '@/stores/user'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\nconst userStore = useUserStore()\n\n// 密码状态\nconst passwordFormState = ref({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: '',\n  loading: false,\n  strength: 0\n})\n\n// 手机号掩码处理函数\nconst maskPhone = (phone) => {\n  if (!phone) return '未绑定'\n  return phone.replace(/(\\d{3})\\d{4}(\\d{4})/, '$1****$2')\n}\n\n// 从 userStore 获取用户信息\nconst phone = computed(() => userStore.userInfo?.phone)\nconst email = computed(() => userStore.userInfo?.email)\n\n// 弹窗状态管理\nconst showEmailModal = ref(false)\nconst showPhoneModal = ref(false)\nconst showPasswordModal = ref(false)\nconst showDeleteConfirm = ref(false)\nconst showPassword = ref(false)\n\n// 打开/关闭弹窗方法\nconst openEmailModal = () => {\n  emailManager.state.value = ''\n  emailManager.state.code = ''\n  emailManager.state.password = ''\n  showPassword.value = false\n  showEmailModal.value = true\n}\n\nconst closeEmailModal = () => {\n  showEmailModal.value = false\n  emailManager.state.value = ''\n  emailManager.state.code = ''\n  emailManager.state.password = ''\n  emailManager.state.loading = false\n  showPassword.value = false\n}\n\nconst openPhoneModal = () => {\n  phoneManager.state.value = ''\n  phoneManager.state.code = ''\n  phoneManager.state.loading = false\n  phoneManager.state.countdown = 0\n  showPhoneModal.value = true\n}\n\nconst closePhoneModal = () => {\n  showPhoneModal.value = false\n  phoneManager.state.value = ''\n  phoneManager.state.code = ''\n  phoneManager.state.loading = false\n  phoneManager.state.countdown = 0\n}\n\nconst openPasswordModal = () => {\n  passwordFormState.value.oldPassword = ''\n  passwordFormState.value.newPassword = ''\n  passwordFormState.value.confirmPassword = ''\n  passwordFormState.value.strength = 0\n  showPasswordModal.value = true\n}\n\nconst closePasswordModal = () => {\n  showPasswordModal.value = false\n  passwordFormState.value.oldPassword = ''\n  passwordFormState.value.newPassword = ''\n  passwordFormState.value.confirmPassword = ''\n  passwordFormState.value.loading = false\n  passwordFormState.value.strength = 0\n}\n\nconst openDeleteConfirm = () => {\n  deleteFormState.value.password = ''\n  showDeleteConfirm.value = true\n}\n\nconst closeDeleteConfirm = () => {\n  showDeleteConfirm.value = false\n  deleteFormState.value.password = ''\n}\n\n// 邮箱管理器\nconst emailManager = useEmail()\nconst phoneManager = usePhone()\nconst { validatePassword } = useChangePassword()\nconst { loading } = useDeleteAccount()\n\n// 验证码相关\nconst isRequestingCode = ref(false)\n\n// 修改手机号表单验证\nconst isPhoneFormValid = computed(() => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  const isValidPhone = phoneRegex.test(phoneManager.state.value)\n  const isValidCode = phoneManager.state.code?.length === 6\n\n  // 添加调试日志\n  console.log('Phone validation:', {\n    phone: phoneManager.state.value,\n    code: phoneManager.state.code,\n    isValidPhone,\n    isValidCode,\n    loading: phoneManager.state.loading,\n    finalResult: isValidPhone && isValidCode && !phoneManager.state.loading\n  })\n\n  // 修改验证逻辑\n  return isValidPhone && isValidCode && !phoneManager.state.loading\n})\n\n// 邮箱格式验证正则\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n\n// 处理邮箱更新的验证码发送\nconst handleEmailSendCode = async () => {\n  if (!emailManager.state.value) {\n    showToast('请输入新邮箱', 'warning')\n    return\n  }\n  \n  if (!emailManager.state.password) {\n    showToast('请输入登录密码', 'warning')\n    return\n  }\n  \n  // 验证邮箱格式\n  if (!emailRegex.test(emailManager.state.value)) {\n    showToast('请输入正确的邮箱格式', 'warning')\n    return\n  }\n  \n  try {\n    emailManager.state.loading = true\n    const response = await account.sendEmailCode({\n      email: emailManager.state.value,\n      password: emailManager.state.password.trim()\n    })\n    \n    if (response?.data?.message) {\n      showToast(response.data.message, 'success')\n      emailManager.state.countdown = 60\n      startEmailCountdown()\n    }\n  } catch (error) {\n    const errorMsg = error.response?.data?.detail || \n                    error.message || \n                    '发送验证码失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    emailManager.state.loading = false\n  }\n}\n\n// 修改密码强度更新的处理方法\nconst handlePasswordInput = () => {\n  const strength = validatePassword(passwordFormState.value.newPassword)\n  passwordFormState.value.strength = strength\n}\n\n// 密码表单验证\nconst isPasswordFormValid = computed(() => {\n  return passwordFormState.oldPassword && \n         passwordFormState.newPassword && \n         passwordFormState.confirmPassword && \n         passwordFormState.newPassword === passwordFormState.confirmPassword &&\n         passwordFormState.strength >= 3 &&\n         !passwordFormState.loading\n})\n\n// 添加表单数据\nconst deleteFormState = ref({\n  password: '',\n  loading: false\n})\n\n// 处理确认注销\nconst handleConfirmDelete = async () => {\n  if (!deleteFormState.value.password) {\n    showToast('请输入密码', 'warning')\n    return\n  }\n  \n  try {\n    const response = await account.deleteAccount(deleteFormState.value)\n    if (response?.data?.code === 200) {\n      showToast('账号已注销', 'success')\n      // 使用 auth store 的 logout 方法清除所有状态\n      await authStore.logout()\n      // 清除 user store 的状态\n      userStore.clearUserInfo()\n      // 清除其他可能的状态\n      localStorage.removeItem('isLoggedIn')\n      // 强制刷新页面以确保所有状态都被清除\n      window.location.href = '/login'\n    }\n  } catch (error) {\n    console.error('注销失败:', error)\n    showToast(error?.message || '注销失败', 'error')\n  }\n}\n\n// 倒计时管理\nlet emailTimer = null\nlet phoneTimer = null\n\nconst startEmailCountdown = () => {\n  if (emailTimer) {\n    clearInterval(emailTimer)\n  }\n  emailManager.state.countdown = 60\n  emailTimer = setInterval(() => {\n    if (emailManager.state.countdown > 0) {\n      emailManager.state.countdown--\n    } else {\n      clearInterval(emailTimer)\n      emailTimer = null\n    }\n  }, 1000)\n}\n\nconst startPhoneCountdown = () => {\n  if (phoneTimer) {\n    clearInterval(phoneTimer)\n  }\n  phoneManager.state.countdown = 60\n  phoneTimer = setInterval(() => {\n    if (phoneManager.state.countdown > 0) {\n      phoneManager.state.countdown--\n    } else {\n      clearInterval(phoneTimer)\n      phoneTimer = null\n    }\n  }, 1000)\n}\n\n// 修改手机号验证码发送处理函数\nconst handlePhoneSendCode = async () => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  if (!phoneManager.state.value) {\n    showToast('请输入新手机号', 'warning')\n    return\n  }\n  \n  if (!phoneRegex.test(phoneManager.state.value)) {\n    showToast('请输入正确的手机号格式', 'warning')\n    return\n  }\n  \n  try {\n    phoneManager.state.loading = true\n    const response = await account.sendVerifyCode({\n      phone: phoneManager.state.value.trim(),\n      scene: 'change_phone'  // 使用更换手机号的场景\n    })\n    \n    if (response?.data?.code === 200) {  // 检查正确的响应格式\n      showToast(response.data.message, 'success')\n      phoneManager.state.countdown = 60  // 先设置倒计时\n      startPhoneCountdown()  // 再启动倒计时\n    }\n  } catch (error) {\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '发送验证码失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    phoneManager.state.loading = false\n  }\n}\n\n// 修改手机号处理函数\nconst handlePhoneUpdate = async () => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  if (!phoneManager.state.value || !phoneRegex.test(phoneManager.state.value)) {\n    showToast('请输入正确的手机号', 'warning')\n    return\n  }\n  \n  if (!phoneManager.state.code || phoneManager.state.code.length !== 6) {\n    showToast('请输入6位验证码', 'warning')\n    return\n  }\n\n  try {\n    phoneManager.state.loading = true\n    const response = await account.changePhone({\n      phone: phoneManager.state.value.trim(),\n      code: phoneManager.state.code.trim()\n    })\n\n    // 修改响应处理逻辑，兼容两种返回格式\n    if (response?.data?.code === 200 || response?.data?.detail) {\n      const successMsg = response.data.message || response.data.detail || '手机号修改成功'\n      showToast(successMsg, 'success')\n      closePhoneModal()\n      await userStore.getUserInfo()\n    }\n  } catch (error) {\n    console.error('手机号更新失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '手机号更新失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    phoneManager.state.loading = false\n  }\n}\n\n// 只保留一个 onUnmounted\nonUnmounted(() => {\n  if (emailTimer) {\n    clearInterval(emailTimer)\n    emailTimer = null\n  }\n  if (phoneTimer) {\n    clearInterval(phoneTimer)\n    phoneTimer = null\n  }\n})\n\n// 用户信息\nconst userInfo = ref(null)\n\n// 用户信息加载状态\nconst userInfoLoading = ref(false)\n\n// 获取用户信息\nconst fetchUserInfo = async () => {\n  try {\n    userInfoLoading.value = true\n    await userStore.getUserInfo()\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n    showToast('获取用户信息失败', 'error')\n  } finally {\n    userInfoLoading.value = false\n  }\n}\n\n// 在组件挂载时获取用户信息\nonMounted(() => {\n  fetchUserInfo()\n})\n\n\n// 表单验证\nconst validateForm = () => {\n  if (!form.value.old_password) {\n    showToast('请输入当前密码', 'error')\n    return false\n  }\n  if (!form.value.new_password) {\n    showToast('请输入新密码', 'error')\n    return false\n  }\n  if (!form.value.confirm_password) {\n    showToast('请确认新密码', 'error')\n    return false\n  }\n  if (form.value.new_password !== form.value.confirm_password) {\n    showToast('两次输入的密码不一致', 'error')\n    return false\n  }\n  if (form.value.new_password.length < 6) {\n    showToast('密码长度不能少于6位', 'error')\n    return false\n  }\n  return true\n}\n\n// 邮箱解绑相关\nconst showUnbindEmailModal = ref(false)\nconst unbindEmailLoading = ref(false)\nconst unbindEmailForm = ref({\n  password: ''\n})\n\n// 打开解绑弹窗\nconst handleUnbindEmail = () => {\n  showUnbindEmailModal.value = true\n}\n\n// 关闭解绑弹窗\nconst closeUnbindEmailModal = () => {\n  showUnbindEmailModal.value = false\n  unbindEmailForm.value.password = ''\n}\n\n// 确认解绑\nconst confirmUnbindEmail = async () => {\n  try {\n    unbindEmailLoading.value = true\n    const response = await account.unbindEmail({\n      password: unbindEmailForm.value.password\n    })\n    \n    if (response?.data?.message) {\n      closeUnbindEmailModal()\n      // 更新用户信息\n      await userStore.getUserInfo()\n      showToast(response.data.message || '邮箱解绑成功', 'success')\n    }\n  } catch (error) {\n    console.error('邮箱解绑失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '邮箱解绑失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    unbindEmailLoading.value = false\n  }\n}\n\n// 密码强度相关\nconst strengthText = computed(() => {\n  const strength = passwordFormState.value.strength\n  if (strength <= 2) return '弱'\n  if (strength <= 4) return '中'\n  return '强'\n})\n\nconst strengthTextClass = computed(() => {\n  const strength = passwordFormState.value.strength\n  if (strength <= 2) return 'text-red-500'\n  if (strength <= 4) return 'text-yellow-500'\n  return 'text-green-500'\n})\n\nconst strengthColorClass = computed(() => {\n  const strength = passwordFormState.value.strength\n  if (strength <= 2) return 'bg-red-500'\n  if (strength <= 4) return 'bg-yellow-500'\n  return 'bg-green-500'\n})\n\n// 处理密码更新\nconst handlePasswordUpdate = async () => {\n  try {\n    passwordFormState.loading = true\n    const response = await account.updatePassword({\n      old_password: passwordFormState.oldPassword,\n      new_password: passwordFormState.newPassword,\n      confirm_password: passwordFormState.confirmPassword\n    })\n    \n    if (response?.data?.message) {\n      closePasswordModal()\n      showToast(response.data.message || '密码修改成功', 'success')\n    }\n  } catch (error) {\n    console.error('密码修改失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '密码修改失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    passwordFormState.loading = false\n  }\n}\n\n// 修改邮箱表单验证\nconst isEmailFormValid = computed(() => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  const isValidEmail = emailRegex.test(emailManager.state.value)\n\n  const isValid = emailManager.state.value && \n         emailManager.state.code && \n         emailManager.state.password &&  // 确保密码已输入\n         isValidEmail && \n         emailManager.state.code.length === 6  // 验证码长度验证\n\n  console.log('Email form validation:', {\n    email: emailManager.state.value,\n    code: emailManager.state.code,\n    password: emailManager.state.password,\n    isValidEmail,\n    codeLength: emailManager.state.code.length,\n    isValid\n  })\n\n  return isValid\n})\n\n// 处理邮箱更新\nconst handleEmailUpdate = async () => {\n  console.log('Form state:', {\n    email: emailManager.state.value,\n    code: emailManager.state.code,\n    password: emailManager.state.password,\n    isValid: isEmailFormValid.value\n  })\n\n  if (!isEmailFormValid.value) {\n    showToast('请填写完整信息', 'warning')\n    return\n  }\n\n  try {\n    emailManager.state.loading = true\n    const response = await account.bindEmail({\n      email: emailManager.state.value,\n      code: emailManager.state.code,\n      password: emailManager.state.password\n    })\n\n    if (response?.data?.message) {\n      showToast(response.data.message, 'success')\n      closeEmailModal()\n      // 更新用户信息\n      await userStore.getUserInfo()\n    }\n  } catch (error) {\n    console.error('邮箱更新失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.message || \n                    '邮箱更新失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    emailManager.state.loading = false\n  }\n}\n\n// 修改手机号验证码按钮禁用状态计算\nconst isPhoneCodeButtonDisabled = computed(() => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  return phoneManager.state.loading || \n         phoneManager.state.countdown > 0 || \n         !phoneManager.state.value ||\n         !phoneRegex.test(phoneManager.state.value)\n})\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 50;\n}\n\n.modal-content {\n  position: relative;\n  width: 91.666667%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-bottom: 1px solid #e5e7eb;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #111827;\n  font-size: 1.125rem;\n  font-weight: 500;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-top: 1px solid #e5e7eb;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  color: #111827;\n  background-color: white;\n  transition: border-color 0.15s ease-in-out;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #6366f1;\n  box-shadow: 0 0 0 1px #6366f1;\n}\n\n.form-group input:disabled {\n  background-color: #f3f4f6;\n  cursor: not-allowed;\n}\n\n.code-input {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.code-input input {\n  flex: 1;\n}\n\n.code-btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: white;\n  background-color: #6366f1;\n  border-radius: 0.375rem;\n  transition: background-color 0.15s ease-in-out;\n}\n\n.code-btn:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.code-btn:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.375rem;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-default {\n  color: #374151;\n  background-color: white;\n  border: 1px solid #d1d5db;\n}\n\n.btn-default:not(:disabled):hover {\n  background-color: #f9fafb;\n}\n\n.btn-primary {\n  color: white;\n  background-color: #6366f1;\n  border: 1px solid transparent;\n}\n\n.btn-primary:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.btn-danger {\n  color: white;\n  background-color: #ef4444;\n  border: 1px solid transparent;\n}\n\n.btn-danger:not(:disabled):hover {\n  background-color: #dc2626;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 关闭按钮样式 */\n.close-btn {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.25rem;\n  color: #6b7280;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.15s ease-in-out;\n}\n\n.close-btn:hover {\n  color: #374151;\n}\n\n/* 注销弹窗特殊样式 */\n.bg-red-50 {\n  background-color: #fef2f2;\n}\n\n.border-red-100 {\n  border-color: #fee2e2;\n}\n\n.text-red-400 {\n  color: #f87171;\n}\n\n.text-red-600 {\n  color: #dc2626;\n}\n\n.text-red-700 {\n  color: #b91c1c;\n}\n\n.text-red-800 {\n  color: #991b1b;\n}\n\n/* 注销弹窗的输入框特殊样式 */\n.form-group input.border-red-300 {\n  border-color: #fca5a5;\n}\n\n.form-group input.focus\\:border-red-500:focus {\n  border-color: #ef4444;\n}\n\n.form-group input.focus\\:ring-red-500:focus {\n  box-shadow: 0 0 0 1px #ef4444;\n}\n\n.input-tips {\n  background-color: #f9fafb;\n  border-radius: 0.5rem;\n  padding: 0.75rem;\n  border: 1px solid #e5e7eb;\n}\n\n.input-tips ul li {\n  color: #6b7280;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n}\n\n.input-tips ul li span:first-child {\n  min-width: 1rem;\n  background-color: white;\n}\n\n.form-group input.error {\n  border-color: #ef4444;\n}\n\n.form-group input.error:focus {\n  border-color: #ef4444;\n  box-shadow: 0 0 0 1px #ef4444;\n}\n\n/* 添加密码强度指示器样式 */\n.password-strength {\n  margin-top: 0.5rem;\n}\n\n.strength-text {\n  font-size: 0.875rem;\n  margin-bottom: 0.25rem;\n}\n\n.strength-bar {\n  height: 4px;\n  background-color: #e5e7eb;\n  border-radius: 2px;\n  overflow: hidden;\n}\n\n.strength-progress {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
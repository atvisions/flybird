{"ast":null,"code":"import { ref, watch, onMounted, computed } from 'vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'SaveTemplateDialog',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'save'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 表单数据\n    const form = ref(null);\n    const loading = ref(false);\n    const formData = ref({\n      name: '',\n      category: null,\n      thumbnail: null,\n      description: '',\n      is_vip: false\n    });\n\n    // 计算表单是否有效\n    const isFormValid = computed(() => {\n      return formData.value.name && formData.value.category && formData.value.thumbnail && formData.value.description;\n    });\n\n    // 模板分类\n    const templateStore = useTemplateStore();\n    const categories = ref([]);\n\n    // 获取分类数据\n    const fetchCategories = async () => {\n      try {\n        loading.value = true;\n        const response = await templateStore.getCategories();\n        categories.value = response || [];\n      } catch (error) {\n        console.error('获取分类失败:', error);\n        categories.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 监听对话框显示状态\n    watch(() => props.modelValue, val => {\n      if (val && categories.value.length === 0) {\n        fetchCategories();\n      }\n      if (!val) {\n        // 重置表单\n        form.value?.reset();\n        formData.value = {\n          name: '',\n          category: null,\n          thumbnail: null,\n          description: '',\n          is_vip: false\n        };\n      }\n    });\n\n    // 保存模板\n    const handleSave = async () => {\n      const {\n        valid\n      } = await form.value.validate();\n      if (!valid) return;\n      loading.value = true;\n      try {\n        emit('save', formData.value);\n      } catch (error) {\n        console.error('保存失败:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 初始化时获取分类数据\n    onMounted(() => {\n      if (props.modelValue) {\n        fetchCategories();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      form,\n      loading,\n      formData,\n      isFormValid,\n      templateStore,\n      categories,\n      fetchCategories,\n      handleSave,\n      ref,\n      watch,\n      onMounted,\n      computed,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","computed","useTemplateStore","props","__props","emit","__emit","form","loading","formData","name","category","thumbnail","description","is_vip","isFormValid","value","templateStore","categories","fetchCategories","response","getCategories","error","console","modelValue","val","length","reset","handleSave","valid","validate"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/SaveTemplateDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    :model-value=\"modelValue\"\n    @update:model-value=\"$emit('update:modelValue', $event)\"\n    max-width=\"600\"\n    persistent\n  >\n    <v-card>\n      <v-card-title class=\"text-h5\">保存为模板</v-card-title>\n      <v-card-text>\n        <v-form ref=\"form\">\n          <v-text-field\n            v-model=\"formData.name\"\n            label=\"模板名称\"\n            :rules=\"[v => !!v || '请输入模板名称']\"\n            required\n          ></v-text-field>\n\n          <v-select\n            v-if=\"categories.length > 0\"\n            v-model=\"formData.category\"\n            :items=\"categories\"\n            item-title=\"name\"\n            item-value=\"id\"\n            label=\"选择分类\"\n            :rules=\"[v => !!v || '请选择分类']\"\n            required\n          ></v-select>\n\n          <v-file-input\n            v-model=\"formData.thumbnail\"\n            label=\"缩略图\"\n            accept=\"image/*\"\n            :rules=\"[v => !!v || '请上传缩略图']\"\n            required\n          ></v-file-input>\n\n          <v-textarea\n            v-model=\"formData.description\"\n            label=\"模板描述\"\n            :rules=\"[v => !!v || '请输入模板描述']\"\n            required\n          ></v-textarea>\n\n          <v-switch\n            v-model=\"formData.is_vip\"\n            label=\"VIP模板\"\n            color=\"primary\"\n          ></v-switch>\n        </v-form>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn \n          color=\"grey-darken-1\" \n          variant=\"text\" \n          @click=\"$emit('update:modelValue', false)\"\n        >\n          取消\n        </v-btn>\n        <v-btn\n          color=\"primary\"\n          variant=\"text\"\n          :loading=\"loading\"\n          :disabled=\"!isFormValid\"\n          @click=\"handleSave\"\n        >\n          保存\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted, computed } from 'vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'save'])\n\n// 表单数据\nconst form = ref(null)\nconst loading = ref(false)\nconst formData = ref({\n  name: '',\n  category: null,\n  thumbnail: null,\n  description: '',\n  is_vip: false\n})\n\n// 计算表单是否有效\nconst isFormValid = computed(() => {\n  return formData.value.name && \n         formData.value.category && \n         formData.value.thumbnail && \n         formData.value.description\n})\n\n// 模板分类\nconst templateStore = useTemplateStore()\nconst categories = ref([])\n\n// 获取分类数据\nconst fetchCategories = async () => {\n  try {\n    loading.value = true\n    const response = await templateStore.getCategories()\n    categories.value = response || []\n  } catch (error) {\n    console.error('获取分类失败:', error)\n    categories.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 监听对话框显示状态\nwatch(() => props.modelValue, (val) => {\n  if (val && categories.value.length === 0) {\n    fetchCategories()\n  }\n  if (!val) {\n    // 重置表单\n    form.value?.reset()\n    formData.value = {\n      name: '',\n      category: null,\n      thumbnail: null,\n      description: '',\n      is_vip: false\n    }\n  }\n})\n\n// 保存模板\nconst handleSave = async () => {\n  const { valid } = await form.value.validate()\n  if (!valid) return\n\n  loading.value = true\n  try {\n    emit('save', formData.value)\n  } catch (error) {\n    console.error('保存失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 初始化时获取分类数据\nonMounted(() => {\n  if (props.modelValue) {\n    fetchCategories()\n  }\n})\n</script> "],"mappings":"AA2EA,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAI;AACpD,SAASC,gBAAgB,QAAQ,mBAAkB;;;;;;;;;;;;;;;IAEnD,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,IAAI,GAAGT,GAAG,CAAC,IAAI;IACrB,MAAMU,OAAO,GAAGV,GAAG,CAAC,KAAK;IACzB,MAAMW,QAAQ,GAAGX,GAAG,CAAC;MACnBY,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV,CAAC;;IAED;IACA,MAAMC,WAAW,GAAGd,QAAQ,CAAC,MAAM;MACjC,OAAOQ,QAAQ,CAACO,KAAK,CAACN,IAAI,IACnBD,QAAQ,CAACO,KAAK,CAACL,QAAQ,IACvBF,QAAQ,CAACO,KAAK,CAACJ,SAAS,IACxBH,QAAQ,CAACO,KAAK,CAACH,WAAU;IAClC,CAAC;;IAED;IACA,MAAMI,aAAa,GAAGf,gBAAgB,CAAC;IACvC,MAAMgB,UAAU,GAAGpB,GAAG,CAAC,EAAE;;IAEzB;IACA,MAAMqB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACFX,OAAO,CAACQ,KAAK,GAAG,IAAG;QACnB,MAAMI,QAAQ,GAAG,MAAMH,aAAa,CAACI,aAAa,CAAC;QACnDH,UAAU,CAACF,KAAK,GAAGI,QAAQ,IAAI,EAAC;MAClC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BJ,UAAU,CAACF,KAAK,GAAG,EAAC;MACtB,CAAC,SAAS;QACRR,OAAO,CAACQ,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACAjB,KAAK,CAAC,MAAMI,KAAK,CAACqB,UAAU,EAAGC,GAAG,IAAK;MACrC,IAAIA,GAAG,IAAIP,UAAU,CAACF,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;QACxCP,eAAe,CAAC;MAClB;MACA,IAAI,CAACM,GAAG,EAAE;QACR;QACAlB,IAAI,CAACS,KAAK,EAAEW,KAAK,CAAC;QAClBlB,QAAQ,CAACO,KAAK,GAAG;UACfN,IAAI,EAAE,EAAE;UACRC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,WAAW,EAAE,EAAE;UACfC,MAAM,EAAE;QACV;MACF;IACF,CAAC;;IAED;IACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAM;QAAEC;MAAM,CAAC,GAAG,MAAMtB,IAAI,CAACS,KAAK,CAACc,QAAQ,CAAC;MAC5C,IAAI,CAACD,KAAK,EAAE;MAEZrB,OAAO,CAACQ,KAAK,GAAG,IAAG;MACnB,IAAI;QACFX,IAAI,CAAC,MAAM,EAAEI,QAAQ,CAACO,KAAK;MAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;MAC9B,CAAC,SAAS;QACRd,OAAO,CAACQ,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACAhB,SAAS,CAAC,MAAM;MACd,IAAIG,KAAK,CAACqB,UAAU,EAAE;QACpBL,eAAe,CAAC;MAClB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
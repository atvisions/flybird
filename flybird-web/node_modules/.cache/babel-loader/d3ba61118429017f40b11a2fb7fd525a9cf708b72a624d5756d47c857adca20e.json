{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { auth } from '@/api/auth';\nimport { SMS_SCENE } from '@/constants';\nimport { showToast } from '@/components/ToastMessage';\nexport function useResetPassword() {\n  const router = useRouter();\n  const form = ref({\n    phone: '',\n    code: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const loading = ref(false);\n  const countdown = ref(0);\n  const showPassword = ref(false);\n  const isFormValid = computed(() => {\n    return form.value.phone && form.value.code && form.value.password && form.value.confirmPassword && form.value.password === form.value.confirmPassword && form.value.password.length >= 6 && /^1[3-9]\\d{9}$/.test(form.value.phone);\n  });\n  const validateForm = () => {\n    const phoneRegex = /^1[3-9]\\d{9}$/;\n    if (!form.value.phone) {\n      showToast('请输入手机号', 'warning');\n      return false;\n    }\n    if (!phoneRegex.test(form.value.phone)) {\n      showToast('请输入正确的手机号', 'warning');\n      return false;\n    }\n    if (!form.value.code) {\n      showToast('请输入验证码', 'warning');\n      return false;\n    }\n    if (!form.value.password) {\n      showToast('请输入新密码', 'warning');\n      return false;\n    }\n    if (form.value.password.length < 6) {\n      showToast('密码长度不能少于6位', 'warning');\n      return false;\n    }\n    if (!form.value.confirmPassword) {\n      showToast('请确认密码', 'warning');\n      return false;\n    }\n    if (form.value.confirmPassword !== form.value.password) {\n      showToast('两次输入的密码不一致', 'warning');\n      return false;\n    }\n    return true;\n  };\n  const startCountdown = () => {\n    countdown.value = 60;\n    const timer = setInterval(() => {\n      countdown.value--;\n      if (countdown.value <= 0) {\n        clearInterval(timer);\n      }\n    }, 1000);\n  };\n  const handleSendCode = async () => {\n    if (!form.value.phone || !/^1[3-9]\\d{9}$/.test(form.value.phone)) {\n      showToast('请输入正确的手机号', 'warning');\n      return;\n    }\n    try {\n      loading.value = true;\n      const response = await auth.sendVerifyCode({\n        phone: form.value.phone,\n        scene: SMS_SCENE.RESET_PASSWORD\n      });\n      if (response.data?.code === 200) {\n        showToast('验证码已发送', 'success');\n        startCountdown();\n      } else {\n        throw new Error(response.data?.message || '发送验证码失败');\n      }\n    } catch (error) {\n      if (error.response?.data?.message?.includes('未注册')) {\n        showToast('该手机号未注册，请先注册', 'warning');\n        setTimeout(() => router.push('/register'), 1500);\n        return;\n      }\n      showToast(error.response?.data?.message || error.message || '发送验证码失败', 'error');\n    } finally {\n      loading.value = false;\n    }\n  };\n  const handleResetPassword = async () => {\n    if (!validateForm()) return;\n    try {\n      loading.value = true;\n      const response = await auth.resetPassword({\n        phone: form.value.phone,\n        code: form.value.code,\n        new_password: form.value.password,\n        confirm_password: form.value.confirmPassword\n      });\n      if (response.data?.code === 200) {\n        showToast('密码重置成功', 'success');\n        setTimeout(() => router.push('/login'), 1500);\n      } else {\n        throw new Error(response.data?.message || '重置密码失败');\n      }\n    } catch (error) {\n      showToast(error.response?.data?.message || error.message || '重置密码失败', 'error');\n    } finally {\n      loading.value = false;\n    }\n  };\n  return {\n    form,\n    loading,\n    countdown,\n    showPassword,\n    isFormValid,\n    handleSendCode,\n    handleResetPassword,\n    togglePassword: () => showPassword.value = !showPassword.value\n  };\n}","map":{"version":3,"names":["ref","computed","useRouter","auth","SMS_SCENE","showToast","useResetPassword","router","form","phone","code","password","confirmPassword","loading","countdown","showPassword","isFormValid","value","length","test","validateForm","phoneRegex","startCountdown","timer","setInterval","clearInterval","handleSendCode","response","sendVerifyCode","scene","RESET_PASSWORD","data","Error","message","error","includes","setTimeout","push","handleResetPassword","resetPassword","new_password","confirm_password","togglePassword"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/composables/useResetPassword.js"],"sourcesContent":["import { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { auth } from '@/api/auth'\nimport { SMS_SCENE } from '@/constants'\nimport { showToast } from '@/components/ToastMessage'\n\nexport function useResetPassword() {\n  const router = useRouter()\n  \n  const form = ref({\n    phone: '',\n    code: '',\n    password: '',\n    confirmPassword: ''\n  })\n  \n  const loading = ref(false)\n  const countdown = ref(0)\n  const showPassword = ref(false)\n  \n  const isFormValid = computed(() => {\n    return form.value.phone && \n           form.value.code && \n           form.value.password &&\n           form.value.confirmPassword &&\n           form.value.password === form.value.confirmPassword &&\n           form.value.password.length >= 6 &&\n           /^1[3-9]\\d{9}$/.test(form.value.phone)\n  })\n  \n  const validateForm = () => {\n    const phoneRegex = /^1[3-9]\\d{9}$/\n    \n    if (!form.value.phone) {\n      showToast('请输入手机号', 'warning')\n      return false\n    }\n    if (!phoneRegex.test(form.value.phone)) {\n      showToast('请输入正确的手机号', 'warning')\n      return false\n    }\n    if (!form.value.code) {\n      showToast('请输入验证码', 'warning')\n      return false\n    }\n    if (!form.value.password) {\n      showToast('请输入新密码', 'warning')\n      return false\n    }\n    if (form.value.password.length < 6) {\n      showToast('密码长度不能少于6位', 'warning')\n      return false\n    }\n    if (!form.value.confirmPassword) {\n      showToast('请确认密码', 'warning')\n      return false\n    }\n    if (form.value.confirmPassword !== form.value.password) {\n      showToast('两次输入的密码不一致', 'warning')\n      return false\n    }\n    return true\n  }\n  \n  const startCountdown = () => {\n    countdown.value = 60\n    const timer = setInterval(() => {\n      countdown.value--\n      if (countdown.value <= 0) {\n        clearInterval(timer)\n      }\n    }, 1000)\n  }\n  \n  const handleSendCode = async () => {\n    if (!form.value.phone || !/^1[3-9]\\d{9}$/.test(form.value.phone)) {\n      showToast('请输入正确的手机号', 'warning')\n      return\n    }\n    \n    try {\n      loading.value = true\n      const response = await auth.sendVerifyCode({\n        phone: form.value.phone,\n        scene: SMS_SCENE.RESET_PASSWORD\n      })\n\n      if (response.data?.code === 200) {\n        showToast('验证码已发送', 'success')\n        startCountdown()\n      } else {\n        throw new Error(response.data?.message || '发送验证码失败')\n      }\n    } catch (error) {\n      if (error.response?.data?.message?.includes('未注册')) {\n        showToast('该手机号未注册，请先注册', 'warning')\n        setTimeout(() => router.push('/register'), 1500)\n        return\n      }\n      \n      showToast(error.response?.data?.message || error.message || '发送验证码失败', 'error')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  const handleResetPassword = async () => {\n    if (!validateForm()) return\n\n    try {\n      loading.value = true\n      const response = await auth.resetPassword({\n        phone: form.value.phone,\n        code: form.value.code,\n        new_password: form.value.password,\n        confirm_password: form.value.confirmPassword\n      })\n\n      if (response.data?.code === 200) {\n        showToast('密码重置成功', 'success')\n        setTimeout(() => router.push('/login'), 1500)\n      } else {\n        throw new Error(response.data?.message || '重置密码失败')\n      }\n    } catch (error) {\n      showToast(error.response?.data?.message || error.message || '重置密码失败', 'error')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  return {\n    form,\n    loading,\n    countdown,\n    showPassword,\n    isFormValid,\n    handleSendCode,\n    handleResetPassword,\n    togglePassword: () => showPassword.value = !showPassword.value\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
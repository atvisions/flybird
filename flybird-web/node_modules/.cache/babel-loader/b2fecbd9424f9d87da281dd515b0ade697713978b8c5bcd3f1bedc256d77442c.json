{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { Cropper } from 'vue-advanced-cropper';\nimport 'vue-advanced-cropper/dist/style.css';\nimport { Dialog, DialogPanel, DialogTitle, TransitionChild, TransitionRoot } from '@headlessui/vue';\nimport { InformationCircleIcon } from '@heroicons/vue/24/outline';\nimport { showToast } from '@/components/ToastMessage';\nexport default {\n  __name: 'ProfileAvatarCropper',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'upload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const cropperRef = ref(null);\n    const imageUrl = ref('');\n    const previewUrl = ref('');\n    const hasImage = ref(false);\n\n    // 处理文件选择\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n\n      // 验证文件大小（2MB）\n      const maxSize = 2 * 1024 * 1024;\n      if (file.size > maxSize) {\n        showToast('图片大小不能超过 2MB', 'error');\n        return;\n      }\n\n      // 创建预览\n      const reader = new FileReader();\n      reader.onload = e => {\n        imageUrl.value = e.target.result;\n        hasImage.value = true;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 处理裁剪\n    const handleCrop = async () => {\n      if (!cropperRef.value || !hasImage.value) return;\n      try {\n        const {\n          coordinates,\n          canvas\n        } = cropperRef.value.getResult();\n\n        // 将 canvas 转换为 blob\n        canvas.toBlob(async blob => {\n          // 创建文件对象\n          const file = new File([blob], 'profile_avatar.png', {\n            type: 'image/png'\n          });\n\n          // 触发上传事件\n          await emit('upload', file);\n\n          // 清理\n          clearImage();\n        }, 'image/png', 0.9);\n      } catch (error) {\n        console.error('裁剪失败:', error);\n        showToast('图片处理失败，请重试', 'error');\n      }\n    };\n\n    // 关闭对话框\n    const closeDialog = () => {\n      emit('update:modelValue', false);\n      clearImage();\n    };\n\n    // 清理图片\n    const clearImage = () => {\n      imageUrl.value = '';\n      previewUrl.value = '';\n      hasImage.value = false;\n    };\n\n    // 监听裁剪变化\n    const onCrop = ({\n      coordinates,\n      canvas\n    }) => {\n      previewUrl.value = canvas.toDataURL();\n    };\n\n    // 监听对话框关闭\n    watch(() => props.modelValue, newVal => {\n      if (!newVal) {\n        clearImage();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      cropperRef,\n      imageUrl,\n      previewUrl,\n      hasImage,\n      handleFileChange,\n      handleCrop,\n      closeDialog,\n      clearImage,\n      onCrop,\n      ref,\n      watch,\n      get Cropper() {\n        return Cropper;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get DialogPanel() {\n        return DialogPanel;\n      },\n      get DialogTitle() {\n        return DialogTitle;\n      },\n      get TransitionChild() {\n        return TransitionChild;\n      },\n      get TransitionRoot() {\n        return TransitionRoot;\n      },\n      get InformationCircleIcon() {\n        return InformationCircleIcon;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","Cropper","Dialog","DialogPanel","DialogTitle","TransitionChild","TransitionRoot","InformationCircleIcon","showToast","props","__props","emit","__emit","cropperRef","imageUrl","previewUrl","hasImage","handleFileChange","event","file","target","files","type","startsWith","maxSize","size","reader","FileReader","onload","e","value","result","readAsDataURL","handleCrop","coordinates","canvas","getResult","toBlob","blob","File","clearImage","error","console","closeDialog","onCrop","toDataURL","modelValue","newVal"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/ProfileAvatarCropper.vue"],"sourcesContent":["<template>\n  <TransitionRoot appear :show=\"modelValue\" as=\"template\">\n    <Dialog as=\"div\" class=\"relative z-50\" @close=\"closeDialog\">\n      <TransitionChild\n        as=\"template\"\n        enter=\"duration-300 ease-out\"\n        enter-from=\"opacity-0\"\n        enter-to=\"opacity-100\"\n        leave=\"duration-200 ease-in\"\n        leave-from=\"opacity-100\"\n        leave-to=\"opacity-0\"\n      >\n        <div class=\"fixed inset-0 bg-black/25\" />\n      </TransitionChild>\n\n      <div class=\"fixed inset-0 overflow-y-auto\">\n        <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n          <TransitionChild\n            as=\"template\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0 scale-95\"\n            enter-to=\"opacity-100 scale-100\"\n            leave=\"duration-200 ease-in\"\n            leave-from=\"opacity-100 scale-100\"\n            leave-to=\"opacity-0 scale-95\"\n          >\n            <DialogPanel class=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n              <DialogTitle as=\"h3\" class=\"text-lg font-medium leading-6 text-gray-900\">\n                上传职业头像\n              </DialogTitle>\n\n              <!-- 提示信息 -->\n              <div class=\"mt-2 p-4 bg-blue-50 rounded-lg\">\n                <div class=\"flex\">\n                  <div class=\"flex-shrink-0\">\n                    <InformationCircleIcon class=\"h-5 w-5 text-blue-400\" />\n                  </div>\n                  <div class=\"ml-3\">\n                    <p class=\"text-sm text-blue-700\">\n                      一张专业的职业头像能让您的简历更加出众：\n                    </p>\n                    <ul class=\"mt-2 text-sm text-blue-600 list-disc list-inside\">\n                      <li>建议使用正面照，保持微笑</li>\n                      <li>着装整洁得体，背景简单</li>\n                      <li>光线充足，图片清晰</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"mt-4\">\n                <div class=\"flex flex-col items-center\">\n                  <!-- 裁剪区域 -->\n                  <div v-if=\"imageUrl\" class=\"relative w-full h-64 mb-4 bg-gray-100 rounded-lg overflow-hidden\">\n                    <Cropper\n                      ref=\"cropperRef\"\n                      class=\"cropper\"\n                      :src=\"imageUrl\"\n                      :stencil-props=\"{\n                        aspectRatio: 1\n                      }\"\n                      :default-size=\"{\n                        width: '80%',\n                        height: '80%'\n                      }\"\n                      image-restriction=\"stencil\"\n                      :default-boundaries=\"{ width: '100%', height: '100%' }\"\n                      :default-position=\"{ left: '50%', top: '50%' }\"\n                    />\n                  </div>\n\n                  <!-- 预览区域 -->\n                  <div v-if=\"imageUrl\" class=\"w-24 h-24 rounded-full overflow-hidden border-2 border-gray-200 mb-4\">\n                    <img v-if=\"previewUrl\" :src=\"previewUrl\" class=\"w-full h-full object-cover\" alt=\"预览\" />\n                  </div>\n\n                  <!-- 上传按钮 -->\n                  <label class=\"cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\">\n                    <input\n                      type=\"file\"\n                      class=\"hidden\"\n                      accept=\"image/*\"\n                      @change=\"handleFileChange\"\n                    >\n                    {{ imageUrl ? '重新选择' : '选择图片' }}\n                  </label>\n                </div>\n              </div>\n\n              <div class=\"mt-6 flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  class=\"inline-flex justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50\"\n                  @click=\"closeDialog\"\n                >\n                  取消\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"inline-flex justify-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700\"\n                  :disabled=\"!hasImage\"\n                  @click=\"handleCrop\"\n                >\n                  确认上传\n                </button>\n              </div>\n            </DialogPanel>\n          </TransitionChild>\n        </div>\n      </div>\n    </Dialog>\n  </TransitionRoot>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { Cropper } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css'\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  TransitionChild,\n  TransitionRoot,\n} from '@headlessui/vue'\nimport { InformationCircleIcon } from '@heroicons/vue/24/outline'\nimport { showToast } from '@/components/ToastMessage'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst cropperRef = ref(null)\nconst imageUrl = ref('')\nconst previewUrl = ref('')\nconst hasImage = ref(false)\n\n// 处理文件选择\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n\n  // 验证文件类型\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n\n  // 验证文件大小（2MB）\n  const maxSize = 2 * 1024 * 1024\n  if (file.size > maxSize) {\n    showToast('图片大小不能超过 2MB', 'error')\n    return\n  }\n\n  // 创建预览\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    imageUrl.value = e.target.result\n    hasImage.value = true\n  }\n  reader.readAsDataURL(file)\n}\n\n// 处理裁剪\nconst handleCrop = async () => {\n  if (!cropperRef.value || !hasImage.value) return\n  \n  try {\n    const { coordinates, canvas } = cropperRef.value.getResult()\n    \n    // 将 canvas 转换为 blob\n    canvas.toBlob(async (blob) => {\n      // 创建文件对象\n      const file = new File([blob], 'profile_avatar.png', { type: 'image/png' })\n      \n      // 触发上传事件\n      await emit('upload', file)\n      \n      // 清理\n      clearImage()\n    }, 'image/png', 0.9)\n  } catch (error) {\n    console.error('裁剪失败:', error)\n    showToast('图片处理失败，请重试', 'error')\n  }\n}\n\n// 关闭对话框\nconst closeDialog = () => {\n  emit('update:modelValue', false)\n  clearImage()\n}\n\n// 清理图片\nconst clearImage = () => {\n  imageUrl.value = ''\n  previewUrl.value = ''\n  hasImage.value = false\n}\n\n// 监听裁剪变化\nconst onCrop = ({ coordinates, canvas }) => {\n  previewUrl.value = canvas.toDataURL()\n}\n\n// 监听对话框关闭\nwatch(() => props.modelValue, (newVal) => {\n  if (!newVal) {\n    clearImage()\n  }\n})\n</script>\n\n<style>\n.cropper {\n  height: 100%;\n  background: #f3f4f6;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _createCommentVNode(\" No changes to template section \");\n}","map":{"version":3,"names":["_createCommentVNode"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/Membership/index.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useAccountStore } from '@/stores/account'\nimport { membership } from '@/api/membership'\nimport { showToast } from '@/utils/toast'\nimport { \n  SparklesIcon, \n  CloudArrowUpIcon, \n  ChatBubbleLeftRightIcon, \n  QuestionMarkCircleIcon, \n  CheckCircleIcon, \n  GiftIcon, \n  ClipboardDocumentListIcon, \n  StarIcon, \n  PencilSquareIcon, \n  CalendarDaysIcon,\n  DocumentTextIcon,\n  CloudIcon,\n  DocumentChartBarIcon,\n  UserGroupIcon,\n  CheckIcon,\n  DocumentIcon,\n  BoltIcon,\n  HeartIcon,\n  UserIcon,\n  TrophyIcon,\n  ChevronDownIcon,\n  SparklesIcon as CrownIcon\n} from '@heroicons/vue/24/outline'\nimport SignInSuccessDialog from '@/components/SignInSuccessDialog.vue'\nimport { ElMessage } from 'element-plus'\n\n// 获取积分信息\nconst fetchPointsInfo = async () => {\n  try {\n    const response = await membership.getPoints()\n    if (response?.data?.code === 200) {\n      pointsInfo.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取积分信息失败:', error)\n  }\n}\n\n// 获取积分记录\nconst fetchPointsRecords = async () => {\n  try {\n    const response = await membership.getPointRecords()\n    if (response?.data?.code === 200) {\n      pointsRecords.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取积分记录失败:', error)\n  }\n}\n\n// 签到相关状态\nconst showSignInSuccess = ref(false)\nconst signInResult = ref({\n  points: 0,\n  signInDays: 0,\n  nextReward: null\n})\n\n// 处理签到\nconst handleSignIn = async () => {\n  if (!canSignIn.value) return\n  \n  try {\n    console.log('开始签到')\n    const response = await membership.checkIn()\n    console.log('签到响应:', response)\n    \n    if (response?.data?.code === 200) {\n      const { points, balance, sign_in_days, next_reward } = response.data.data\n      \n      // 更新积分信息\n      pointsInfo.value.balance = balance\n      signInInfo.value.days = sign_in_days\n      signInInfo.value.nextReward = next_reward\n      canSignIn.value = false\n      \n      // 显示签到成功弹窗\n      signInResult.value = {\n        points,\n        signInDays: sign_in_days,\n        nextReward: next_reward\n      }\n      showSignInSuccess.value = true\n      \n      // 刷新积分记录\n      await fetchPointsRecords()\n    }\n  } catch (error) {\n    console.error('签到失败:', error)\n    if (error.response?.data?.code === 400) {\n      ElMessage.warning(error.response.data.message)\n      canSignIn.value = false\n    } else {\n      ElMessage.error('签到失败，请稍后重试')\n    }\n  }\n}\n\n// 在组件挂载时获取数据\nonMounted(async () => {\n  await Promise.all([\n    fetchPointsInfo(),\n    fetchPointsRecords()\n  ])\n  \n  // 获取签到状态\n  try {\n    const response = await membership.getSignInStatus()\n    if (response?.data?.code === 200) {\n      const { can_sign_in, sign_in_days, next_reward } = response.data.data\n      canSignIn.value = can_sign_in\n      signInInfo.value.days = sign_in_days\n      signInInfo.value.nextReward = next_reward\n    }\n  } catch (error) {\n    console.error('获取签到状态失败:', error)\n  }\n})\n</script> \n\n<style scoped>\n/* No changes to style section */\n</style> "],"mappings":";;SACEA,mBAAA,oCAAuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
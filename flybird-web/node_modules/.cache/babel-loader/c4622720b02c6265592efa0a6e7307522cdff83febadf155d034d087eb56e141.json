{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeVWindowProps, VWindow } from \"../VWindow/VWindow.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { VTabsSymbol } from \"./shared.mjs\";\nexport const makeVTabsWindowProps = propsFactory(_objectSpread({}, omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory'])), 'VTabsWindow');\nexport const VTabsWindow = genericComponent()({\n  name: 'VTabsWindow',\n  props: makeVTabsWindowProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const group = inject(VTabsSymbol, null);\n    const _model = useProxiedModel(props, 'modelValue');\n    const model = computed({\n      get() {\n        // Always return modelValue if defined\n        // or if not within a VTabs group\n        if (_model.value != null || !group) return _model.value;\n\n        // If inside of a VTabs, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value;\n      },\n      set(val) {\n        _model.value = val;\n      }\n    });\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props);\n      return _createVNode(VWindow, _mergeProps({\n        \"_as\": \"VTabsWindow\"\n      }, windowProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-tabs-window', props.class],\n        \"style\": props.style,\n        \"mandatory\": false,\n        \"touch\": false\n      }), slots);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeVWindowProps","VWindow","useProxiedModel","computed","inject","genericComponent","omit","propsFactory","useRender","VTabsSymbol","makeVTabsWindowProps","_objectSpread","VTabsWindow","name","props","emits","v","setup","_ref","slots","group","_model","model","get","value","items","find","item","selected","includes","id","set","val","windowProps","filterProps","_createVNode","_mergeProps","$event","class","style"],"sources":["../../../src/components/VTabs/VTabsWindow.tsx"],"sourcesContent":["// Components\nimport { makeVWindowProps, VWindow } from '@/components/VWindow/VWindow'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport { VTabsSymbol } from './shared'\n\nexport const makeVTabsWindowProps = propsFactory({\n  ...omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory']),\n}, 'VTabsWindow')\n\nexport const VTabsWindow = genericComponent()({\n  name: 'VTabsWindow',\n\n  props: makeVTabsWindowProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const group = inject(VTabsSymbol, null)\n    const _model = useProxiedModel(props, 'modelValue')\n\n    const model = computed({\n      get () {\n        // Always return modelValue if defined\n        // or if not within a VTabs group\n        if (_model.value != null || !group) return _model.value\n\n        // If inside of a VTabs, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value\n      },\n      set (val) {\n        _model.value = val\n      },\n    })\n\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props)\n\n      return (\n        <VWindow\n          _as=\"VTabsWindow\"\n          { ...windowProps }\n          v-model={ model.value }\n          class={[\n            'v-tabs-window',\n            props.class,\n          ]}\n          style={ props.style }\n          mandatory={ false }\n          touch={ false }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabsWindow = InstanceType<typeof VTabsWindow>\n"],"mappings":";;;;AAAA;AAAA,SACSA,gBAAgB,EAAEC,OAAO,kCAElC;AAAA,SACSC,eAAe,8CAExB;AACA,SAASC,QAAQ,EAAEC,MAAM,QAAQ,KAAK;AAAA,SAC7BC,gBAAgB,EAAEC,IAAI,EAAEC,YAAY,EAAEC,SAAS,gCAExD;AAAA,SACSC,WAAW;AAEpB,OAAO,MAAMC,oBAAoB,GAAGH,YAAY,CAAAI,aAAA,KAC3CL,IAAI,CAACN,gBAAgB,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,WAAW,CAAC,IACrG,aAAa,CAAC;AAEjB,OAAO,MAAMY,WAAW,GAAGP,gBAAgB,CAAC,CAAC,CAAC;EAC5CQ,IAAI,EAAE,aAAa;EAEnBC,KAAK,EAAEJ,oBAAoB,CAAC,CAAC;EAE7BK,KAAK,EAAE;IACL,mBAAmB,EAAGC,CAAU,IAAK;EACvC,CAAC;EAEDC,KAAKA,CAAEH,KAAK,EAAAI,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAME,KAAK,GAAGhB,MAAM,CAACK,WAAW,EAAE,IAAI,CAAC;IACvC,MAAMY,MAAM,GAAGnB,eAAe,CAACY,KAAK,EAAE,YAAY,CAAC;IAEnD,MAAMQ,KAAK,GAAGnB,QAAQ,CAAC;MACrBoB,GAAGA,CAAA,EAAI;QACL;QACA;QACA,IAAIF,MAAM,CAACG,KAAK,IAAI,IAAI,IAAI,CAACJ,KAAK,EAAE,OAAOC,MAAM,CAACG,KAAK;;QAEvD;QACA;QACA,OAAOJ,KAAK,CAACK,KAAK,CAACD,KAAK,CAACE,IAAI,CAACC,IAAI,IAAIP,KAAK,CAACQ,QAAQ,CAACJ,KAAK,CAACK,QAAQ,CAACF,IAAI,CAACG,EAAE,CAAC,CAAC,EAAEN,KAAK;MACtF,CAAC;MACDO,GAAGA,CAAEC,GAAG,EAAE;QACRX,MAAM,CAACG,KAAK,GAAGQ,GAAG;MACpB;IACF,CAAC,CAAC;IAEFxB,SAAS,CAAC,MAAM;MACd,MAAMyB,WAAW,GAAGhC,OAAO,CAACiC,WAAW,CAACpB,KAAK,CAAC;MAE9C,OAAAqB,YAAA,CAAAlC,OAAA,EAAAmC,WAAA;QAAA;MAAA,GAGSH,WAAW;QAAA,cACNX,KAAK,CAACE,KAAK;QAAA,uBAAAa,MAAA,IAAXf,KAAK,CAACE,KAAK,GAAAa,MAAA;QAAA,SACd,CACL,eAAe,EACfvB,KAAK,CAACwB,KAAK,CACZ;QAAA,SACOxB,KAAK,CAACyB,KAAK;QAAA,aACP,KAAK;QAAA,SACT;MAAK,IACHpB,KAAK;IAGrB,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
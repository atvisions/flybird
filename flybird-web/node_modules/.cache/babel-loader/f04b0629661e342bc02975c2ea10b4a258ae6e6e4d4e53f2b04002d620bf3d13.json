{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, computed, watch } from 'vue';\nimport { Plus } from '@element-plus/icons-vue';\nimport { useComponentStore } from '../../store/component';\nconst uploadUrl = '/api/upload'; // 需要替换为实际的上传地址\n\n// 处理图片上传成功\n\nexport default {\n  __name: 'PropertyPanel',\n  props: {\n    component: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['update'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 当前激活的标签页\n    const activeTab = ref('data');\n\n    // 当前激活的样式配置区域\n    const activeStyleSections = ref(['size', 'text']);\n\n    // 组件配置\n    const componentStore = useComponentStore();\n    const componentConfig = computed(() => {\n      return componentStore.getComponentConfig(props.component.type);\n    });\n\n    // 表单数据\n    const formData = ref(_objectSpread({}, props.component.data));\n    const styleData = ref(_objectSpread({}, props.component.styles));\n\n    // 监听数据变化\n    watch(formData, newVal => {\n      emit('update', props.component.id, {\n        data: newVal,\n        styles: styleData.value\n      });\n    }, {\n      deep: true\n    });\n    watch(styleData, newVal => {\n      emit('update', props.component.id, {\n        data: formData.value,\n        styles: newVal\n      });\n    }, {\n      deep: true\n    });\n\n    // 上传地址\n    const handleImageSuccess = (response, fieldName) => {\n      formData.value[fieldName] = response.url;\n    };\n    const __returned__ = {\n      props,\n      emit,\n      activeTab,\n      activeStyleSections,\n      componentStore,\n      componentConfig,\n      formData,\n      styleData,\n      uploadUrl,\n      handleImageSuccess,\n      ref,\n      computed,\n      watch,\n      get Plus() {\n        return Plus;\n      },\n      get useComponentStore() {\n        return useComponentStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","Plus","useComponentStore","uploadUrl","props","__props","emit","__emit","activeTab","activeStyleSections","componentStore","componentConfig","getComponentConfig","component","type","formData","_objectSpread","data","styleData","styles","newVal","id","value","deep","handleImageSuccess","response","fieldName","url"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/panels/PropertyPanel.vue"],"sourcesContent":["<template>\n  <div class=\"property-panel\">\n    <div class=\"panel-header\">\n      <h3>属性设置</h3>\n    </div>\n    \n    <div class=\"panel-content\">\n      <el-tabs v-model=\"activeTab\">\n        <!-- 数据配置 -->\n        <el-tab-pane label=\"数据\" name=\"data\">\n          <template v-if=\"componentConfig\">\n            <el-form\n              :model=\"formData\"\n              label-position=\"top\"\n              @submit.prevent\n            >\n              <template v-for=\"field in componentConfig.fields\" :key=\"field.name\">\n                <!-- 文本输入 -->\n                <el-form-item\n                  v-if=\"field.type === 'text'\"\n                  :label=\"field.label\"\n                  :required=\"field.required\"\n                >\n                  <el-input\n                    v-model=\"formData[field.name]\"\n                    :placeholder=\"'请输入' + field.label\"\n                  />\n                </el-form-item>\n                \n                <!-- 文本域 -->\n                <el-form-item\n                  v-else-if=\"field.type === 'textarea'\"\n                  :label=\"field.label\"\n                  :required=\"field.required\"\n                >\n                  <el-input\n                    v-model=\"formData[field.name]\"\n                    type=\"textarea\"\n                    :rows=\"3\"\n                    :placeholder=\"'请输入' + field.label\"\n                  />\n                </el-form-item>\n                \n                <!-- 选择器 -->\n                <el-form-item\n                  v-else-if=\"field.type === 'select'\"\n                  :label=\"field.label\"\n                  :required=\"field.required\"\n                >\n                  <el-select\n                    v-model=\"formData[field.name]\"\n                    :placeholder=\"'请选择' + field.label\"\n                  >\n                    <el-option\n                      v-for=\"(label, value) in field.options\"\n                      :key=\"value\"\n                      :label=\"label\"\n                      :value=\"value\"\n                    />\n                  </el-select>\n                </el-form-item>\n                \n                <!-- 日期选择 -->\n                <el-form-item\n                  v-else-if=\"field.type === 'date'\"\n                  :label=\"field.label\"\n                  :required=\"field.required\"\n                >\n                  <el-date-picker\n                    v-model=\"formData[field.name]\"\n                    type=\"date\"\n                    :placeholder=\"'请选择' + field.label\"\n                  />\n                </el-form-item>\n                \n                <!-- 开关 -->\n                <el-form-item\n                  v-else-if=\"field.type === 'boolean'\"\n                  :label=\"field.label\"\n                >\n                  <el-switch\n                    v-model=\"formData[field.name]\"\n                  />\n                </el-form-item>\n                \n                <!-- 图片上传 -->\n                <el-form-item\n                  v-else-if=\"field.type === 'image'\"\n                  :label=\"field.label\"\n                  :required=\"field.required\"\n                >\n                  <el-upload\n                    class=\"image-uploader\"\n                    :action=\"uploadUrl\"\n                    :show-file-list=\"false\"\n                    :on-success=\"(res) => handleImageSuccess(res, field.name)\"\n                  >\n                    <img\n                      v-if=\"formData[field.name]\"\n                      :src=\"formData[field.name]\"\n                      class=\"uploaded-image\"\n                    >\n                    <el-icon v-else class=\"image-uploader-icon\"><Plus /></el-icon>\n                  </el-upload>\n                </el-form-item>\n              </template>\n            </el-form>\n          </template>\n          <div v-else class=\"no-config\">\n            该组件暂无可配置项\n          </div>\n        </el-tab-pane>\n        \n        <!-- 样式配置 -->\n        <el-tab-pane label=\"样式\" name=\"style\">\n          <el-form\n            :model=\"styleData\"\n            label-position=\"top\"\n            @submit.prevent\n          >\n            <!-- 基础样式 -->\n            <el-collapse v-model=\"activeStyleSections\">\n              <!-- 尺寸与位置 -->\n              <el-collapse-item title=\"尺寸与位置\" name=\"size\">\n                <el-form-item label=\"宽度\">\n                  <el-input\n                    v-model=\"styleData.width\"\n                    placeholder=\"例如：100px 或 100%\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"高度\">\n                  <el-input\n                    v-model=\"styleData.height\"\n                    placeholder=\"例如：100px 或 auto\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"外边距\">\n                  <el-input\n                    v-model=\"styleData.margin\"\n                    placeholder=\"例如：10px 或 10px 20px\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"内边距\">\n                  <el-input\n                    v-model=\"styleData.padding\"\n                    placeholder=\"例如：10px 或 10px 20px\"\n                  />\n                </el-form-item>\n              </el-collapse-item>\n              \n              <!-- 文字样式 -->\n              <el-collapse-item title=\"文字样式\" name=\"text\">\n                <el-form-item label=\"字体大小\">\n                  <el-input\n                    v-model=\"styleData.fontSize\"\n                    placeholder=\"例如：16px\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"字体颜色\">\n                  <el-color-picker\n                    v-model=\"styleData.color\"\n                    show-alpha\n                  />\n                </el-form-item>\n                <el-form-item label=\"对齐方式\">\n                  <el-radio-group v-model=\"styleData.textAlign\">\n                    <el-radio-button label=\"left\">左对齐</el-radio-button>\n                    <el-radio-button label=\"center\">居中</el-radio-button>\n                    <el-radio-button label=\"right\">右对齐</el-radio-button>\n                  </el-radio-group>\n                </el-form-item>\n              </el-collapse-item>\n              \n              <!-- 背景样式 -->\n              <el-collapse-item title=\"背景样式\" name=\"background\">\n                <el-form-item label=\"背景颜色\">\n                  <el-color-picker\n                    v-model=\"styleData.backgroundColor\"\n                    show-alpha\n                  />\n                </el-form-item>\n              </el-collapse-item>\n              \n              <!-- 边框样式 -->\n              <el-collapse-item title=\"边框样式\" name=\"border\">\n                <el-form-item label=\"边框宽度\">\n                  <el-input\n                    v-model=\"styleData.borderWidth\"\n                    placeholder=\"例如：1px\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"边框颜色\">\n                  <el-color-picker\n                    v-model=\"styleData.borderColor\"\n                    show-alpha\n                  />\n                </el-form-item>\n                <el-form-item label=\"边框样式\">\n                  <el-select v-model=\"styleData.borderStyle\">\n                    <el-option label=\"实线\" value=\"solid\" />\n                    <el-option label=\"虚线\" value=\"dashed\" />\n                    <el-option label=\"点线\" value=\"dotted\" />\n                  </el-select>\n                </el-form-item>\n                <el-form-item label=\"圆角\">\n                  <el-input\n                    v-model=\"styleData.borderRadius\"\n                    placeholder=\"例如：4px\"\n                  />\n                </el-form-item>\n              </el-collapse-item>\n            </el-collapse>\n          </el-form>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { Plus } from '@element-plus/icons-vue'\nimport { useComponentStore } from '../../store/component'\n\nconst props = defineProps({\n  component: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update'])\n\n// 当前激活的标签页\nconst activeTab = ref('data')\n\n// 当前激活的样式配置区域\nconst activeStyleSections = ref(['size', 'text'])\n\n// 组件配置\nconst componentStore = useComponentStore()\nconst componentConfig = computed(() => {\n  return componentStore.getComponentConfig(props.component.type)\n})\n\n// 表单数据\nconst formData = ref({ ...props.component.data })\nconst styleData = ref({ ...props.component.styles })\n\n// 监听数据变化\nwatch(formData, (newVal) => {\n  emit('update', props.component.id, {\n    data: newVal,\n    styles: styleData.value\n  })\n}, { deep: true })\n\nwatch(styleData, (newVal) => {\n  emit('update', props.component.id, {\n    data: formData.value,\n    styles: newVal\n  })\n}, { deep: true })\n\n// 上传地址\nconst uploadUrl = '/api/upload' // 需要替换为实际的上传地址\n\n// 处理图片上传成功\nconst handleImageSuccess = (response, fieldName) => {\n  formData.value[fieldName] = response.url\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.property-panel {\n  @apply w-80 border-l border-gray-200 flex flex-col;\n  \n  .panel-header {\n    @apply h-12 px-4 flex items-center border-b border-gray-200;\n    \n    h3 {\n      @apply text-lg font-medium;\n    }\n  }\n  \n  .panel-content {\n    @apply flex-1 overflow-y-auto p-4;\n  }\n  \n  .no-config {\n    @apply text-center text-gray-500 py-4;\n  }\n  \n  .image-uploader {\n    @apply border border-dashed border-gray-300 rounded-md cursor-pointer hover:border-blue-500;\n    \n    .image-uploader-icon {\n      @apply text-3xl text-gray-400;\n    }\n    \n    .uploaded-image {\n      @apply w-full h-32 object-cover;\n    }\n  }\n}\n</style> "],"mappings":";AA4NA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,KAAI;AACzC,SAASC,IAAI,QAAQ,yBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,uBAAsB;AA2CxD,MAAMC,SAAS,GAAG,aAAa,EAAC;;AAEhC;;;;;;;;;;;;;;;;IA3CA,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,SAAS,GAAGV,GAAG,CAAC,MAAM;;IAE5B;IACA,MAAMW,mBAAmB,GAAGX,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;;IAEhD;IACA,MAAMY,cAAc,GAAGR,iBAAiB,CAAC;IACzC,MAAMS,eAAe,GAAGZ,QAAQ,CAAC,MAAM;MACrC,OAAOW,cAAc,CAACE,kBAAkB,CAACR,KAAK,CAACS,SAAS,CAACC,IAAI;IAC/D,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGjB,GAAG,CAAAkB,aAAA,KAAMZ,KAAK,CAACS,SAAS,CAACI,IAAI,CAAE;IAChD,MAAMC,SAAS,GAAGpB,GAAG,CAAAkB,aAAA,KAAMZ,KAAK,CAACS,SAAS,CAACM,MAAM,CAAE;;IAEnD;IACAnB,KAAK,CAACe,QAAQ,EAAGK,MAAM,IAAK;MAC1Bd,IAAI,CAAC,QAAQ,EAAEF,KAAK,CAACS,SAAS,CAACQ,EAAE,EAAE;QACjCJ,IAAI,EAAEG,MAAM;QACZD,MAAM,EAAED,SAAS,CAACI;MACpB,CAAC;IACH,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC;IAEjBvB,KAAK,CAACkB,SAAS,EAAGE,MAAM,IAAK;MAC3Bd,IAAI,CAAC,QAAQ,EAAEF,KAAK,CAACS,SAAS,CAACQ,EAAE,EAAE;QACjCJ,IAAI,EAAEF,QAAQ,CAACO,KAAK;QACpBH,MAAM,EAAEC;MACV,CAAC;IACH,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAK,CAAC;;IAEjB;IAIA,MAAMC,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;MAClDX,QAAQ,CAACO,KAAK,CAACI,SAAS,CAAC,GAAGD,QAAQ,CAACE,GAAE;IACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
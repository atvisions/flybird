{"ast":null,"code":"import { createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"min-h-screen bg-gray-50\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-3xl mx-auto px-4 py-16\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_4 = {\n  class: \"flex justify-center space-x-4\"\n};\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-gray-500 text-sm mb-8\"\n};\nconst _hoisted_7 = {\n  class: \"flex justify-center space-x-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"HeadView\"]), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 支付成功 \"), $setup.status === 'success' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createStaticVNode(\"<div class=\\\"mb-8\\\"><svg class=\\\"mx-auto h-16 w-16 text-green-500\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\"><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M5 13l4 4L19 7\\\"></path></svg></div><h2 class=\\\"text-2xl font-bold text-gray-900 mb-4\\\">支付成功</h2><p class=\\\"text-gray-600 mb-8\\\">您的会员已经开通，立即开始享受会员权益吧！</p>\", 3)), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: \"/member\",\n    class: \"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\" 查看会员信息 \")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 返回首页 \")])),\n    _: 1 /* STABLE */\n  })])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 支付失败 \"), _createElementVNode(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createStaticVNode(\"<div class=\\\"mb-8\\\"><svg class=\\\"mx-auto h-16 w-16 text-red-500\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" stroke=\\\"currentColor\\\"><path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\"></path></svg></div><h2 class=\\\"text-2xl font-bold text-gray-900 mb-4\\\">支付失败</h2><p class=\\\"text-gray-600 mb-2\\\">抱歉，支付过程中出现了问题</p>\", 3)), _createElementVNode(\"p\", _hoisted_6, _toDisplayString($setup.errorMessage), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_router_link, {\n    to: \"/pro\",\n    class: \"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n  }, {\n    default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 重新支付 \")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\" 返回首页 \")])),\n    _: 1 /* STABLE */\n  })])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]), _createVNode($setup[\"FootView\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","$setup","_createElementVNode","_hoisted_2","_createCommentVNode","status","_hoisted_3","_createStaticVNode","_hoisted_4","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_Fragment","_hoisted_5","_hoisted_6","_toDisplayString","errorMessage","_hoisted_7"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/payment/PaymentResult.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <HeadView />\n    \n    <div class=\"max-w-3xl mx-auto px-4 py-16\">\n      <!-- 支付成功 -->\n      <div v-if=\"status === 'success'\" class=\"text-center\">\n        <div class=\"mb-8\">\n          <svg class=\"mx-auto h-16 w-16 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n        </div>\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付成功</h2>\n        <p class=\"text-gray-600 mb-8\">您的会员已经开通，立即开始享受会员权益吧！</p>\n        <div class=\"flex justify-center space-x-4\">\n          <router-link \n            to=\"/member\" \n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            查看会员信息\n          </router-link>\n          <router-link \n            to=\"/\" \n            class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            返回首页\n          </router-link>\n        </div>\n      </div>\n\n      <!-- 支付失败 -->\n      <div v-else class=\"text-center\">\n        <div class=\"mb-8\">\n          <svg class=\"mx-auto h-16 w-16 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付失败</h2>\n        <p class=\"text-gray-600 mb-2\">抱歉，支付过程中出现了问题</p>\n        <p class=\"text-gray-500 text-sm mb-8\">{{ errorMessage }}</p>\n        <div class=\"flex justify-center space-x-4\">\n          <router-link \n            to=\"/pro\" \n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n          >\n            重新支付\n          </router-link>\n          <router-link \n            to=\"/\" \n            class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n          >\n            返回首页\n          </router-link>\n        </div>\n      </div>\n    </div>\n\n    <FootView />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport HeadView from '@/components/HeadView.vue'\nimport FootView from '@/components/FootView.vue'\nimport { membership } from '@/api/membership'\nimport { showToast } from '@/components/ToastMessage'\n\nconst route = useRoute()\nconst status = ref('pending')\nconst errorMessage = ref('')\nconst maxRetries = 3\nconst retryInterval = 2000\nlet retryCount = 0\n\nconst errorMessages = {\n  'order_not_found': '订单不存在',\n  'verify_failed': '支付验证失败',\n  'system_error': '系统错误',\n  'unknown': '未知错误'\n}\n\nconst verifyPayment = async (orderNo) => {\n  try {\n    const response = await membership.verifyPayment(orderNo)\n    if (response?.data?.code === 200) {\n      status.value = 'success'\n      showToast('支付成功', 'success')\n      return true\n    } else if (response?.data?.code === 400) {\n      if (retryCount < maxRetries) {\n        retryCount++\n        console.log(`支付验证重试 ${retryCount}/${maxRetries}`)\n        await new Promise(resolve => setTimeout(resolve, retryInterval))\n        return await verifyPayment(orderNo)\n      }\n      status.value = 'fail'\n      errorMessage.value = response?.data?.message || '支付验证失败'\n      showToast(errorMessage.value, 'error')\n      return false\n    }\n    status.value = 'fail'\n    errorMessage.value = response?.data?.message || '支付验证失败'\n    showToast(errorMessage.value, 'error')\n    return false\n  } catch (error) {\n    console.error('支付验证失败:', error)\n    status.value = 'fail'\n    errorMessage.value = error?.response?.data?.message || '系统错误'\n    showToast('支付验证失败', 'error')\n    return false\n  }\n}\n\nonMounted(async () => {\n  // 从URL参数中获取支付状态\n  const reason = route.query.reason\n  if (reason) {\n    status.value = 'fail'\n    errorMessage.value = errorMessages[reason] || '支付失败，请重试'\n  } else {\n    // 处理支付宝回调\n    const orderNo = route.query.out_trade_no\n    if (orderNo) {\n      await verifyPayment(orderNo)\n    }\n  }\n})\n</script> "],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EAG7BA,KAAK,EAAC;AAA8B;;EAJ7CC,GAAA;EAMuCD,KAAK,EAAC;;;EAQhCA,KAAK,EAAC;AAA+B;;EAiBhCA,KAAK,EAAC;AAAa;;EAQ1BA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA+B;;;uBAvChDE,mBAAA,CAyDM,OAzDNC,UAyDM,GAxDJC,YAAA,CAAYC,MAAA,eAEZC,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJC,mBAAA,UAAa,EACFH,MAAA,CAAAI,MAAM,kB,cAAjBP,mBAAA,CAsBM,OAtBNQ,UAsBM,G,0BA5BZC,kBAAA,oXAcQL,mBAAA,CAaM,OAbNM,UAaM,GAZJR,YAAA,CAKcS,sBAAA;IAJZC,EAAE,EAAC,SAAS;IACZd,KAAK,EAAC;;IAjBlBe,OAAA,EAAAC,QAAA,CAkBW,MAEDC,MAAA,QAAAA,MAAA,OApBVC,gBAAA,CAkBW,UAED,E;IApBVC,CAAA;MAqBUf,YAAA,CAKcS,sBAAA;IAJZC,EAAE,EAAC,GAAG;IACNd,KAAK,EAAC;;IAvBlBe,OAAA,EAAAC,QAAA,CAwBW,MAEDC,MAAA,QAAAA,MAAA,OA1BVC,gBAAA,CAwBW,QAED,E;IA1BVC,CAAA;2BA+BMjB,mBAAA,CAuBMkB,SAAA;IAtDZnB,GAAA;EAAA,IA8BMO,mBAAA,UAAa,EACbF,mBAAA,CAuBM,OAvBNe,UAuBM,G,0BAtDZV,kBAAA,gXAuCQL,mBAAA,CAA4D,KAA5DgB,UAA4D,EAAAC,gBAAA,CAAnBlB,MAAA,CAAAmB,YAAY,kBACrDlB,mBAAA,CAaM,OAbNmB,UAaM,GAZJrB,YAAA,CAKcS,sBAAA;IAJZC,EAAE,EAAC,MAAM;IACTd,KAAK,EAAC;;IA3ClBe,OAAA,EAAAC,QAAA,CA4CW,MAEDC,MAAA,QAAAA,MAAA,OA9CVC,gBAAA,CA4CW,QAED,E;IA9CVC,CAAA;MA+CUf,YAAA,CAKcS,sBAAA;IAJZC,EAAE,EAAC,GAAG;IACNd,KAAK,EAAC;;IAjDlBe,OAAA,EAAAC,QAAA,CAkDW,MAEDC,MAAA,QAAAA,MAAA,OApDVC,gBAAA,CAkDW,QAED,E;IApDVC,CAAA;8DAyDIf,YAAA,CAAYC,MAAA,c","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
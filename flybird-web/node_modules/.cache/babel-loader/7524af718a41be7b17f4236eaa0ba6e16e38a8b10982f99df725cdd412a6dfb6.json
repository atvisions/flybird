{"ast":null,"code":"import { ref } from 'vue';\nimport { ArrowLeft, Monitor, Tablet, Mobile, View, Save, Upload } from '@element-plus/icons-vue';\nexport default {\n  __name: 'EditorToolbar',\n  props: {\n    template: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['preview', 'save', 'publish'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 当前设备类型\n    const currentDevice = ref('desktop');\n\n    // 设置设备类型\n    const setDevice = device => {\n      currentDevice.value = device;\n      // TODO: 触发画布尺寸变化\n    };\n    const __returned__ = {\n      props,\n      emit,\n      currentDevice,\n      setDevice,\n      ref,\n      get ArrowLeft() {\n        return ArrowLeft;\n      },\n      get Monitor() {\n        return Monitor;\n      },\n      get Tablet() {\n        return Tablet;\n      },\n      get Mobile() {\n        return Mobile;\n      },\n      get View() {\n        return View;\n      },\n      get Save() {\n        return Save;\n      },\n      get Upload() {\n        return Upload;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ArrowLeft","Monitor","Tablet","Mobile","View","Save","Upload","props","__props","emit","__emit","currentDevice","setDevice","device","value"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/toolbar/EditorToolbar.vue"],"sourcesContent":["<template>\n  <div class=\"editor-toolbar\">\n    <div class=\"left\">\n      <el-button @click=\"$router.back()\">\n        <el-icon><ArrowLeft /></el-icon>\n        返回\n      </el-button>\n      <el-input\n        :model-value=\"template.name\"\n        @update:model-value=\"$emit('update:name', $event)\"\n        placeholder=\"请输入模板名称\"\n        class=\"ml-4 w-64\"\n      />\n    </div>\n    \n    <div class=\"center\">\n      <el-button-group>\n        <el-button \n          :type=\"currentDevice === 'desktop' ? 'primary' : 'default'\"\n          @click=\"setDevice('desktop')\"\n        >\n          <el-icon><Monitor /></el-icon>\n        </el-button>\n        <el-button \n          :type=\"currentDevice === 'tablet' ? 'primary' : 'default'\"\n          @click=\"setDevice('tablet')\"\n        >\n          <el-icon><Tablet /></el-icon>\n        </el-button>\n        <el-button \n          :type=\"currentDevice === 'mobile' ? 'primary' : 'default'\"\n          @click=\"setDevice('mobile')\"\n        >\n          <el-icon><Mobile /></el-icon>\n        </el-button>\n      </el-button-group>\n    </div>\n    \n    <div class=\"right\">\n      <el-button @click=\"$emit('preview')\">\n        <el-icon><View /></el-icon>\n        预览\n      </el-button>\n      <el-button type=\"primary\" @click=\"$emit('save')\">\n        <el-icon><Save /></el-icon>\n        保存\n      </el-button>\n      <el-button \n        type=\"success\" \n        @click=\"$emit('publish')\"\n        v-if=\"template.id\"\n      >\n        <el-icon><Upload /></el-icon>\n        发布\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { ArrowLeft, Monitor, Tablet, Mobile, View, Save, Upload } from '@element-plus/icons-vue'\n\nconst props = defineProps({\n  template: {\n    type: Object,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['preview', 'save', 'publish'])\n\n// 当前设备类型\nconst currentDevice = ref('desktop')\n\n// 设置设备类型\nconst setDevice = (device) => {\n  currentDevice.value = device\n  // TODO: 触发画布尺寸变化\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.editor-toolbar {\n  @apply h-16 px-4 flex items-center justify-between border-b border-gray-200;\n  \n  .left, .center, .right {\n    @apply flex items-center gap-2;\n  }\n}\n</style> "],"mappings":"AA4DA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,QAAQ,yBAAwB;;;;;;;;;;;;;;;IAE/F,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,aAAa,GAAGZ,GAAG,CAAC,SAAS;;IAEnC;IACA,MAAMa,SAAS,GAAIC,MAAM,IAAK;MAC5BF,aAAa,CAACG,KAAK,GAAGD,MAAK;MAC3B;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
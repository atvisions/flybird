{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ChevronDownIcon, PlusIcon } from '@heroicons/vue/24/outline';\nimport { clickOutside } from '@/directives/clickOutside';\nexport default {\n  __name: 'TemplateNavigation',\n  emits: ['sort-change'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const router = useRouter();\n    const isMenuExpanded = ref(false);\n    const currentCategory = ref('all');\n\n    // 判断当前路由是否匹配\n    const isCurrentRoute = path => {\n      // 如果是全部模板页面，只有在完全匹配时才高亮\n      if (path === '/templates') {\n        return router.currentRoute.value.path === '/templates';\n      }\n      // 其他页面使用 startsWith 判断\n      return router.currentRoute.value.path.startsWith(path);\n    };\n\n    // 主导航数据\n    const mainNavs = [{\n      name: '全部模板',\n      path: '/templates'\n    }, {\n      name: '简历模板',\n      path: '/templates/resume'\n    }, {\n      name: '求职信',\n      path: '/templates/cover-letter'\n    }, {\n      name: '个人简介',\n      path: '/templates/bio'\n    }];\n\n    // 定义各页面的二级分类\n    const subCategories = {\n      '/templates': [{\n        id: 'all',\n        name: '全部'\n      }, {\n        id: 'popular',\n        name: '最热门'\n      }, {\n        id: 'newest',\n        name: '最新'\n      }, {\n        id: 'recommended',\n        name: '推荐'\n      }],\n      '/templates/campus': [{\n        id: 'all',\n        name: '全部'\n      }, {\n        id: 'internship',\n        name: '实习生'\n      }, {\n        id: 'graduate',\n        name: '应届生'\n      }, {\n        id: 'research',\n        name: '研究生'\n      }, {\n        id: 'academic',\n        name: '学术简历'\n      }, {\n        id: 'competition',\n        name: '竞赛简历'\n      }],\n      '/templates/professional': [{\n        id: 'all',\n        name: '全部'\n      }, {\n        id: 'tech',\n        name: '技术类'\n      }, {\n        id: 'management',\n        name: '管理类'\n      }, {\n        id: 'marketing',\n        name: '市场类'\n      }, {\n        id: 'finance',\n        name: '金融类'\n      }, {\n        id: 'design',\n        name: '设计类'\n      }],\n      '/templates/english': [{\n        id: 'all',\n        name: '全部'\n      }, {\n        id: 'basic',\n        name: '基础型'\n      }, {\n        id: 'professional',\n        name: '专业型'\n      }, {\n        id: 'executive',\n        name: '高管型'\n      }]\n    };\n\n    // 获取当前导航名称\n    const getCurrentNavName = computed(() => {\n      const currentNav = mainNavs.find(nav => nav.path === router.currentRoute.value.path);\n      return currentNav ? currentNav.name : '选择分类';\n    });\n\n    // 处理主导航点击\n    const handleMainNavClick = nav => {\n      if (router.currentRoute.value.path !== nav.path) {\n        router.push(nav.path);\n        currentCategory.value = 'all';\n      }\n    };\n\n    // 获取横幅描述\n    const getBannerDescription = computed(() => {\n      const descriptions = {\n        '/templates': '精选优质简历模板，助你打造完美简历',\n        '/templates/campus': '为在校生和应届生量身定制的简历模板',\n        '/templates/professional': '专业的职场简历模板，助力职业发展',\n        '/templates/english': '专业的英文简历模板，助力海外求职'\n      };\n      return descriptions[router.currentRoute.value.path] || '';\n    });\n\n    // 会员模板开关状态\n    const showProTemplates = ref(true);\n\n    // 排序相关状态\n    const isShowSort = ref(false);\n    const sortOptions = [{\n      label: '默认排序',\n      value: 'default'\n    }, {\n      label: '最新发布',\n      value: 'newest'\n    }, {\n      label: '最多使用',\n      value: 'most-used'\n    }, {\n      label: '最多收藏',\n      value: 'most-liked'\n    }];\n    const currentSort = ref(sortOptions[0]);\n\n    // 处理排序选择\n    const handleSort = sort => {\n      currentSort.value = sort;\n      isShowSort.value = false;\n      // 这里可以触发排序事件\n      emit('sort-change', sort.value);\n    };\n\n    // 关闭排序下拉框\n    const closeSort = () => {\n      isShowSort.value = false;\n    };\n\n    // 向父组件暴露更多数据\n    __expose({\n      currentCategory,\n      showProTemplates,\n      currentSort\n    });\n\n    // 定义事件\n    const emit = __emit;\n\n    // 注册指令\n    const vClickOutside = clickOutside;\n    const __returned__ = {\n      router,\n      isMenuExpanded,\n      currentCategory,\n      isCurrentRoute,\n      mainNavs,\n      subCategories,\n      getCurrentNavName,\n      handleMainNavClick,\n      getBannerDescription,\n      showProTemplates,\n      isShowSort,\n      sortOptions,\n      currentSort,\n      handleSort,\n      closeSort,\n      emit,\n      vClickOutside,\n      ref,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get ChevronDownIcon() {\n        return ChevronDownIcon;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get clickOutside() {\n        return clickOutside;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRouter","ChevronDownIcon","PlusIcon","clickOutside","router","isMenuExpanded","currentCategory","isCurrentRoute","path","currentRoute","value","startsWith","mainNavs","name","subCategories","id","getCurrentNavName","currentNav","find","nav","handleMainNavClick","push","getBannerDescription","descriptions","showProTemplates","isShowSort","sortOptions","label","currentSort","handleSort","sort","emit","closeSort","__expose","__emit","vClickOutside"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/resume/TemplateNavigation.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- PC端顶部横幅 -->\n    <div class=\"hidden md:block mb-6\">\n      <div class=\"relative overflow-hidden rounded-2xl bg-gradient-to-r from-rose-100/90 via-pink-100/80 to-rose-100/70 p-8 sm:p-10 min-h-[200px]\">\n        <!-- 装饰性圆圈背景 -->\n        <div class=\"absolute inset-0 overflow-hidden\">\n          <div class=\"absolute -top-4 -right-4 w-24 h-24 rounded-full bg-rose-200/30\"></div>\n          <div class=\"absolute top-1/2 -right-8 w-32 h-32 rounded-full bg-pink-200/20\"></div>\n          <div class=\"absolute -bottom-8 right-1/4 w-40 h-40 rounded-full bg-rose-200/10\"></div>\n          <div class=\"absolute top-1/4 -left-8 w-28 h-28 rounded-full bg-pink-200/20\"></div>\n        </div>\n\n        <!-- 装饰性波浪线 -->\n        <div class=\"absolute inset-0 overflow-hidden\">\n          <svg class=\"absolute top-0 right-0 text-rose-200/20\" width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\n            <path d=\"M0,100 C100,120 200,80 300,100 S400,120 500,100\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n            <path d=\"M0,150 C100,170 200,130 300,150 S400,170 500,150\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"/>\n          </svg>\n        </div>\n\n        <!-- 装饰性点阵 -->\n        <div class=\"absolute inset-0\">\n          <div class=\"absolute top-12 right-12 grid grid-cols-3 gap-2\">\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n            <div class=\"w-1 h-1 rounded-full bg-rose-300/30\"></div>\n          </div>\n        </div>\n\n        <div class=\"relative z-10\">\n          <h1 class=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">{{ getCurrentNavName }}</h1>\n          <p class=\"text-gray-600 text-lg max-w-2xl\">{{ getBannerDescription }}</p>\n        </div>\n        \n        <!-- 右侧装饰作品 -->\n        <div class=\"absolute right-0 top-0 bottom-0 w-1/3 hidden lg:block pointer-events-none\">\n          <!-- 装饰方块组 1 -->\n          <div class=\"absolute right-24 top-8 w-40 h-32 rotate-6 transform hover:-translate-y-1 transition-transform\">\n            <div class=\"w-full h-full rounded-xl overflow-hidden shadow-lg bg-gradient-to-br from-rose-400/10 to-pink-400/10 p-4\">\n              <div class=\"w-full h-full rounded-lg bg-white/40 backdrop-blur-sm border border-white/60\"></div>\n            </div>\n          </div>\n\n          <!-- 装饰方块组 2 -->\n          <div class=\"absolute right-40 top-16 w-36 h-28 -rotate-3 transform hover:-translate-y-1 transition-transform\">\n            <div class=\"w-full h-full rounded-xl overflow-hidden shadow-lg bg-gradient-to-br from-pink-400/10 to-rose-400/10 p-4\">\n              <div class=\"w-full h-full rounded-lg bg-white/40 backdrop-blur-sm border border-white/60\"></div>\n            </div>\n          </div>\n\n          <!-- 装饰方块组 3 -->\n          <div class=\"absolute right-16 top-24 w-32 h-24 rotate-12 transform hover:-translate-y-1 transition-transform\">\n            <div class=\"w-full h-full rounded-xl overflow-hidden shadow-lg bg-gradient-to-br from-rose-400/10 to-pink-400/10 p-4\">\n              <div class=\"w-full h-full rounded-lg bg-white/40 backdrop-blur-sm border border-white/60\"></div>\n            </div>\n          </div>\n\n          <!-- 添加装饰性线条 -->\n          <div class=\"absolute inset-0\">\n            <div class=\"absolute top-1/4 left-1/4 w-16 h-px bg-gradient-to-r from-rose-300/20 to-transparent transform rotate-45\"></div>\n            <div class=\"absolute top-1/3 right-1/3 w-12 h-px bg-gradient-to-l from-pink-300/20 to-transparent transform -rotate-45\"></div>\n            <div class=\"absolute bottom-1/4 right-1/4 w-20 h-px bg-gradient-to-l from-rose-300/20 to-transparent transform rotate-12\"></div>\n          </div>\n\n          <!-- 添加装饰性图形 -->\n          <div class=\"absolute top-8 right-8 w-3 h-3 border-2 border-rose-200/40 transform rotate-45\"></div>\n          <div class=\"absolute bottom-12 right-12 w-4 h-4 border-2 border-pink-200/40 rounded-full\"></div>\n          <div class=\"absolute top-1/2 right-1/4 w-2 h-2 bg-rose-300/20 transform rotate-45\"></div>\n        </div>\n\n        <!-- 背景装饰 -->\n        <div class=\"absolute right-0 top-0 -mt-16 -mr-16\">\n          <div class=\"w-64 h-64 rounded-full bg-gradient-to-r from-rose-200/40 to-pink-200/40 blur-3xl\"></div>\n        </div>\n        <!-- 左侧装饰 -->\n        <div class=\"absolute left-0 bottom-0 -mb-16 -ml-16\">\n          <div class=\"w-48 h-48 rounded-full bg-gradient-to-r from-pink-200/40 to-rose-200/40 blur-3xl\"></div>\n        </div>\n      </div>\n    </div>\n\n    <!-- PC端导航 -->\n    <div class=\"bg-white rounded-xl border border-gray-100 p-4 hidden md:block mb-6\">\n      <div class=\"flex flex-col gap-4\">\n        <!-- 左侧主导航和右侧按钮 -->\n        <div class=\"flex flex-row sm:items-center justify-between\">\n          <!-- 主导航链接 -->\n          <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n            <router-link\n              v-for=\"nav in mainNavs\"\n              :key=\"nav.path\"\n              :to=\"nav.path\"\n              class=\"px-4 sm:px-8 py-3 mx-1 text-sm font-medium transition-colors relative group whitespace-nowrap\"\n              :class=\"[\n                isCurrentRoute(nav.path)\n                  ? 'text-gray-900'\n                  : 'text-gray-500 hover:text-gray-700'\n              ]\"\n            >\n              {{ nav.name }}\n              <!-- 活跃状态指示器 -->\n              <div \n                class=\"absolute left-1/2 -translate-x-1/2 bottom-4.5 w-1.5 h-1.5 rounded-full transition-colors\"\n                :class=\"isCurrentRoute(nav.path) ? 'bg-gray-900' : 'bg-transparent group-hover:bg-gray-200'\"\n              ></div>\n            </router-link>\n          </div>\n\n          <!-- 右侧操作按钮 -->\n          <div class=\"hidden sm:flex items-center gap-2 sm:gap-3\">\n            <button class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-rose-600 to-pink-600 text-white rounded-full hover:shadow-lg hover:shadow-rose-500/20 transition-all duration-300 text-sm font-medium flex items-center group\">\n              <PlusIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n              <span>创建简历</span>\n            </button>\n          </div>\n        </div>\n\n        <!-- 分隔线 -->\n        <div class=\"h-px bg-gray-200\"></div>\n        \n        <!-- 二级分类和功能区 -->\n        <div class=\"flex items-center justify-between\">\n          <!-- 二级分类标签 -->\n          <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n            <button\n              v-for=\"category in subCategories[$route.path]\"\n              :key=\"category.id\"\n              @click=\"currentCategory = category.id\"\n              class=\"px-4 py-2 mx-1 rounded-full text-sm font-medium transition-colors whitespace-nowrap\"\n              :class=\"[\n                currentCategory === category.id\n                  ? 'bg-gray-900 text-white'\n                  : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n              ]\"\n            >\n              {{ category.name }}\n            </button>\n          </div>\n\n          <!-- 功能区 -->\n          <div class=\"flex items-center space-x-4\">\n            <!-- 会员模板开关 -->\n            <div class=\"flex items-center space-x-2\">\n              <span class=\"text-sm text-gray-600\">会员模板</span>\n              <button\n                @click=\"showProTemplates = !showProTemplates\"\n                class=\"relative inline-flex h-6 w-11 items-center rounded-full transition-colors\"\n                :class=\"showProTemplates ? 'bg-rose-500' : 'bg-gray-200'\"\n              >\n                <span\n                  class=\"inline-block h-4 w-4 transform rounded-full bg-white transition-transform\"\n                  :class=\"showProTemplates ? 'translate-x-6' : 'translate-x-1'\"\n                />\n              </button>\n            </div>\n\n            <!-- 排序下拉菜单 -->\n            <div class=\"relative\" v-click-outside=\"closeSort\">\n              <button\n                @click=\"isShowSort = !isShowSort\"\n                class=\"flex items-center space-x-1 text-sm text-gray-600 hover:text-gray-900\"\n              >\n                <span>{{ currentSort.label }}</span>\n                <ChevronDownIcon \n                  class=\"w-4 h-4\"\n                  :class=\"isShowSort ? 'rotate-180' : ''\"\n                />\n              </button>\n\n              <!-- 排序选项 -->\n              <div\n                v-show=\"isShowSort\"\n                class=\"absolute right-0 mt-2 w-36 rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5 z-10\"\n              >\n                <div class=\"py-1\">\n                  <button\n                    v-for=\"sort in sortOptions\"\n                    :key=\"sort.value\"\n                    @click=\"handleSort(sort)\"\n                    class=\"block w-full px-4 py-2 text-sm text-left text-gray-700 hover:bg-gray-100\"\n                    :class=\"currentSort.value === sort.value ? 'bg-gray-50' : ''\"\n                  >\n                    {{ sort.label }}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 移动端分类导航 -->\n    <div class=\"md:hidden mb-6\">\n      <div class=\"bg-white rounded-xl border border-gray-100 overflow-hidden\">\n        <!-- 展开/收起按钮 -->\n        <button \n          @click=\"isMenuExpanded = !isMenuExpanded\"\n          class=\"w-full p-4 flex items-center justify-between\"\n        >\n          <span class=\"text-sm font-medium text-gray-900\">\n            {{ getCurrentNavName }}\n          </span>\n          <ChevronDownIcon \n            class=\"w-5 h-5 text-gray-500 transition-transform\"\n            :class=\"isMenuExpanded ? 'rotate-180' : ''\"\n          />\n        </button>\n\n        <!-- 展开的菜单内容 -->\n        <div \n          v-show=\"isMenuExpanded\"\n          class=\"border-t border-gray-100\"\n        >\n          <!-- 主分类列表 -->\n          <div class=\"divide-y divide-gray-100\">\n            <div\n              v-for=\"nav in mainNavs\"\n              :key=\"nav.path\"\n              class=\"group\"\n            >\n              <!-- 主分类项 -->\n              <button\n                @click=\"handleMainNavClick(nav)\"\n                class=\"w-full p-4 flex items-center justify-between\"\n                :class=\"[\n                  nav.path === '/templates' ? 'bg-gray-50 border-b border-gray-100' : '',\n                  $route.path === nav.path ? 'bg-gray-50' : ''\n                ]\"\n              >\n                <span \n                  class=\"text-sm font-medium\"\n                  :class=\"[\n                    nav.path === '/templates' ? 'text-gray-900' : '',\n                    $route.path === nav.path ? 'text-gray-900' : 'text-gray-500'\n                  ]\"\n                >\n                  {{ nav.name }}\n                </span>\n              </button>\n\n              <!-- 二级分类网格 -->\n              <div \n                v-if=\"$route.path === nav.path\"\n                class=\"grid grid-cols-3 gap-2 p-4 bg-gray-50\"\n              >\n                <button\n                  v-for=\"category in subCategories[nav.path]\"\n                  :key=\"category.id\"\n                  @click=\"currentCategory = category.id\"\n                  class=\"py-2 px-1 rounded-lg text-center transition-colors\"\n                  :class=\"[\n                    currentCategory === category.id\n                      ? 'bg-gray-900 text-white'\n                      : 'bg-white text-gray-600'\n                  ]\"\n                >\n                  <span class=\"text-xs\">{{ category.name }}</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { \n  ChevronDownIcon, \n  PlusIcon\n} from '@heroicons/vue/24/outline'\nimport { clickOutside } from '@/directives/clickOutside'\n\nconst router = useRouter()\nconst isMenuExpanded = ref(false)\nconst currentCategory = ref('all')\n\n// 判断当前路由是否匹配\nconst isCurrentRoute = (path) => {\n  // 如果是全部模板页面，只有在完全匹配时才高亮\n  if (path === '/templates') {\n    return router.currentRoute.value.path === '/templates'\n  }\n  // 其他页面使用 startsWith 判断\n  return router.currentRoute.value.path.startsWith(path)\n}\n\n// 主导航数据\nconst mainNavs = [\n  { name: '全部模板', path: '/templates' },\n  { name: '简历模板', path: '/templates/resume' },\n  { name: '求职信', path: '/templates/cover-letter' },\n  { name: '个人简介', path: '/templates/bio' }\n]\n\n// 定义各页面的二级分类\nconst subCategories = {\n  '/templates': [\n    { id: 'all', name: '全部' },\n    { id: 'popular', name: '最热门' },\n    { id: 'newest', name: '最新' },\n    { id: 'recommended', name: '推荐' }\n  ],\n  '/templates/campus': [\n    { id: 'all', name: '全部' },\n    { id: 'internship', name: '实习生' },\n    { id: 'graduate', name: '应届生' },\n    { id: 'research', name: '研究生' },\n    { id: 'academic', name: '学术简历' },\n    { id: 'competition', name: '竞赛简历' }\n  ],\n  '/templates/professional': [\n    { id: 'all', name: '全部' },\n    { id: 'tech', name: '技术类' },\n    { id: 'management', name: '管理类' },\n    { id: 'marketing', name: '市场类' },\n    { id: 'finance', name: '金融类' },\n    { id: 'design', name: '设计类' }\n  ],\n  '/templates/english': [\n    { id: 'all', name: '全部' },\n    { id: 'basic', name: '基础型' },\n    { id: 'professional', name: '专业型' },\n    { id: 'executive', name: '高管型' }\n  ]\n}\n\n// 获取当前导航名称\nconst getCurrentNavName = computed(() => {\n  const currentNav = mainNavs.find(nav => nav.path === router.currentRoute.value.path)\n  return currentNav ? currentNav.name : '选择分类'\n})\n\n// 处理主导航点击\nconst handleMainNavClick = (nav) => {\n  if (router.currentRoute.value.path !== nav.path) {\n    router.push(nav.path)\n    currentCategory.value = 'all'\n  }\n}\n\n// 获取横幅描述\nconst getBannerDescription = computed(() => {\n  const descriptions = {\n    '/templates': '精选优质简历模板，助你打造完美简历',\n    '/templates/campus': '为在校生和应届生量身定制的简历模板',\n    '/templates/professional': '专业的职场简历模板，助力职业发展',\n    '/templates/english': '专业的英文简历模板，助力海外求职'\n  }\n  return descriptions[router.currentRoute.value.path] || ''\n})\n\n// 会员模板开关状态\nconst showProTemplates = ref(true)\n\n// 排序相关状态\nconst isShowSort = ref(false)\nconst sortOptions = [\n  { label: '默认排序', value: 'default' },\n  { label: '最新发布', value: 'newest' },\n  { label: '最多使用', value: 'most-used' },\n  { label: '最多收藏', value: 'most-liked' }\n]\nconst currentSort = ref(sortOptions[0])\n\n// 处理排序选择\nconst handleSort = (sort) => {\n  currentSort.value = sort\n  isShowSort.value = false\n  // 这里可以触发排序事件\n  emit('sort-change', sort.value)\n}\n\n// 关闭排序下拉框\nconst closeSort = () => {\n  isShowSort.value = false\n}\n\n// 向父组件暴露更多数据\ndefineExpose({\n  currentCategory,\n  showProTemplates,\n  currentSort\n})\n\n// 定义事件\nconst emit = defineEmits(['sort-change'])\n\n// 注册指令\nconst vClickOutside = clickOutside\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
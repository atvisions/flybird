{"ast":null,"code":"import { ref, onMounted, computed, watch, nextTick } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useAccountStore } from '@/stores/account';\nimport config from '@/config';\nimport defaultAvatarImage from '@/assets/images/default-avatar.png';\nimport defaultBackground from '@/assets/images/default-background.jpg';\nimport { showToast } from '@/components/ToastMessage';\nimport { CameraIcon,\n// 用于头像和背景上传\nPhotoIcon,\n// 作品集图标\nPencilSquareIcon,\n// 编辑图标\nTrophyIcon,\n// 会员图标\nSparklesIcon,\n// 升级会员图标\nPencilIcon,\n// 编辑昵称图标\nChevronRightIcon,\n// 箭头图标\nPlusIcon,\n// 添加图标\nTrashIcon,\n// 删除图标\nChatBubbleLeftRightIcon,\n// 话题图标\nQuestionMarkCircleIcon,\n// 问答图标\nInboxArrowDownIcon,\n// 草稿箱图标\nEyeIcon,\n// 查看图标\nBookmarkIcon,\n// 收藏图标\nArrowTopRightOnSquareIcon,\n// 外链图标\nGlobeAltIcon,\n// 个人主页图标\nXMarkIcon // 关闭图标\n} from '@heroicons/vue/24/outline';\nimport { user } from '@/api/user';\nimport { eventBus } from '@/utils/eventBus';\nexport default {\n  __name: 'UserHome',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const accountStore = useAccountStore();\n    const showEditModal = ref(false);\n    const editForm = ref({\n      username: '',\n      position: '',\n      bio: '',\n      avatar: null\n    });\n    const avatarInput = ref(null);\n    const usernameError = ref('');\n    const creationSection = ref(null);\n\n    // 使用 getters 获取用户信息\n    const userInfo = computed(() => ({\n      uid: accountStore.uid,\n      username: accountStore.username,\n      avatar: accountStore.avatar,\n      background: accountStore.background,\n      bio: accountStore.bio || null,\n      position: accountStore.position || null\n    }));\n\n    // 添加背景图 URL 的计算属性\n    const backgroundUrl = computed(() => {\n      const bgImage = userInfo.value?.background;\n      return bgImage ? formatImageUrl(bgImage) : defaultBackground;\n    });\n\n    // 格式化图片 URL\n    const formatImageUrl = url => {\n      if (!url || url === 'null') return defaultAvatarImage;\n      return url.startsWith('http') ? url : `${process.env.VUE_APP_API_BASE_URL}${url}`;\n    };\n\n    // 计算头像 URL\n    const userAvatar = computed(() => {\n      return formatImageUrl(userInfo.value?.avatar);\n    });\n\n    // 在编辑弹窗中显示头像\n    const editAvatarUrl = computed(() => {\n      return formatImageUrl(editForm.value.avatar || userInfo.value?.avatar);\n    });\n\n    // 获取用户信息\n    const fetchUserInfo = async () => {\n      try {\n        // 只在需要更新时请求接口\n        if (!accountStore.userInfo) {\n          await accountStore.fetchUserInfo();\n        }\n\n        // 获取统计数据\n        const stats = {\n          following_count: 0,\n          followers_count: 0,\n          likes_count: 0,\n          views_count: 0\n        };\n        statistics.value = [{\n          label: '关注',\n          value: stats.following_count || '0'\n        }, {\n          label: '粉丝',\n          value: stats.followers_count || '0'\n        }, {\n          label: '点赞',\n          value: stats.likes_count || '0'\n        }, {\n          label: '访问',\n          value: stats.views_count || '0'\n        }];\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    };\n\n    // 滚动到创作区域\n    const scrollToCreation = () => {\n      if (creationSection.value) {\n        const offset = 100; // 可以根据需要调整这个值\n        const elementPosition = creationSection.value.getBoundingClientRect().top;\n        const offsetPosition = elementPosition + window.pageYOffset - offset;\n        window.scrollTo({\n          top: offsetPosition,\n          behavior: 'smooth'\n        });\n      }\n    };\n\n    // 监听路由参数变化\n    watch(() => route.query.currentTab, newTab => {\n      if (newTab === 'articles' || newTab === 'drafts') {\n        // 等待 DOM 更新后滚动\n        nextTick(() => {\n          scrollToCreation();\n        });\n      }\n    }, {\n      immediate: true\n    });\n\n    // 组件挂载时获取数据\n    onMounted(async () => {\n      // 只在 store 中没有数据时获取\n      if (!accountStore.userInfo) {\n        await fetchUserInfo();\n      }\n\n      // 如果当前是文章或草稿标签，滚动到创作区域\n      if (route.query.currentTab === 'articles' || route.query.currentTab === 'drafts') {\n        scrollToCreation();\n      }\n    });\n\n    // 头像上传相关\n    const showAvatarUpload = ref(false);\n    const loading = ref(false);\n\n    // 处理头像错误\n    const handleImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n\n    // 处理背景图错误\n    const handleBackgroundError = e => {\n      e.target.src = defaultBackground;\n    };\n    const handleProfileUpdate = async () => {\n      if (!validateUsername()) return;\n\n      // 验证表单数据\n      if (!editForm.value.username.trim()) {\n        showToast('用户名不能为空', 'error');\n        return;\n      }\n      try {\n        loading.value = true;\n        // 准备更新数据\n        const updateData = {\n          username: editForm.value.username.trim(),\n          position: editForm.value.position?.trim() || '',\n          bio: editForm.value.bio?.trim() || ''\n        };\n        console.log('Submitting update:', updateData);\n\n        // 更新所有用户信息\n        await accountStore.updateUserInfo(updateData);\n        showToast('更新成功', 'success');\n        closeEditModal();\n      } catch (error) {\n        console.error('更新失败:', error);\n        if (error.response) {\n          console.error('Error details:', error.response.data);\n        }\n        showToast(error.message || '更新失败，请稍后重试', 'error');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 昵称修改相关方法\n    const openEditModal = () => {\n      editForm.value = {\n        username: accountStore.username || '',\n        position: accountStore.position || '',\n        bio: accountStore.bio || '',\n        avatar: accountStore.avatar || null\n      };\n      showEditModal.value = true;\n    };\n    const closeEditModal = () => {\n      showEditModal.value = false;\n      editForm.value = {\n        username: '',\n        position: '',\n        bio: ''\n      };\n      usernameError.value = '';\n    };\n\n    // 实时验证用户名\n    const validateUsername = () => {\n      const value = editForm.value.username;\n      if (!value) {\n        usernameError.value = '用户名不能为空';\n      } else if (value.length < 4 || value.length > 8) {\n        usernameError.value = '用户名长度必须在4-8个字符之间';\n      } else if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9]+$/.test(value)) {\n        usernameError.value = '用户名只能包含中文、英文字母和数字';\n      } else {\n        usernameError.value = '';\n      }\n      return !usernameError.value;\n    };\n    const handleAvatarChange = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n      const maxSize = 2 * 1024 * 1024; // 2MB\n      if (file.size > maxSize) {\n        showToast('图片大小不能超过2MB', 'error');\n        return;\n      }\n      try {\n        loading.value = true;\n        const formData = new FormData();\n        formData.append('avatar', file);\n\n        // 使用 accountStore 更新头像\n        await accountStore.updateAvatar(formData);\n        editForm.value.avatar = accountStore.avatar;\n        showToast('头像上传成功', 'success');\n      } catch (error) {\n        console.error('头像上传失败:', error);\n        showToast(error.message || '头像上传失败，请稍后重试', 'error');\n      } finally {\n        loading.value = false;\n        // 清空文件选择器\n        event.target.value = '';\n      }\n    };\n\n    // 格式化存储空间大小\n    const formatStorage = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n    };\n\n    // 存储空间使用数据\n    const storageUsed = ref(0); // 字节数\n    const storageUsedPercent = computed(() => {\n      const maxStorage = 10 * 1024 * 1024 * 1024; // 10GB in bytes\n      return Math.round(storageUsed.value / maxStorage * 100);\n    });\n\n    // 统计数据\n    const statistics = ref([{\n      label: '关注',\n      value: '0'\n    }, {\n      label: '粉丝',\n      value: '0'\n    }, {\n      label: '点赞',\n      value: '0'\n    }, {\n      label: '访问',\n      value: '0'\n    }]);\n\n    // 内容相关数据\n    const currentTab = ref(route.query.currentTab || 'articles');\n    const articles = ref([]);\n    const portfolios = ref([]);\n\n    // 收藏相关数据\n    const currentFavTab = ref('portfolios');\n    const favoritesTabs = [{\n      key: 'portfolios',\n      label: '作品集'\n    }, {\n      key: 'articles',\n      label: '文章'\n    }, {\n      key: 'topics',\n      label: '话题'\n    }];\n\n    // 内容标签\n    const contentTabs = [{\n      key: 'articles',\n      label: '文章',\n      count: 0\n    }, {\n      key: 'topics',\n      label: '话题',\n      count: 0\n    }, {\n      key: 'qa',\n      label: '问答',\n      count: 0\n    }, {\n      key: 'drafts',\n      label: '草稿箱',\n      count: 0\n    }];\n\n    // 获取当前收藏标签的标签文本\n    const getCurrentFavTabLabel = () => {\n      const tab = favoritesTabs.find(tab => tab.key === currentFavTab.value);\n      return tab ? tab.label : '';\n    };\n\n    // 获取收藏探索路由\n    const getFavoritesExploreRoute = () => {\n      const routes = {\n        portfolios: '/explore/portfolios',\n        articles: '/explore/articles',\n        topics: '/explore/topics'\n      };\n      return routes[currentFavTab.value] || '/explore';\n    };\n\n    // 处理图片错误\n    const handlePortfolioImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n    const handleArticleImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n\n    // 格式化日期\n    const formatDate = date => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    };\n\n    // 处理背景图上传\n    const handleBackgroundUpload = async () => {\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n      input.onchange = async e => {\n        const file = e.target.files[0];\n        if (!file) return;\n        try {\n          loading.value = true;\n          const formData = new FormData();\n          formData.append('background', file);\n          await accountStore.updateBackground(formData);\n          showToast('背景图上传成功', 'success');\n        } catch (error) {\n          console.error('背景图上传失败:', error);\n          showToast(error.message || '背景图上传失败，请稍后重试', 'error');\n        } finally {\n          loading.value = false;\n          input.value = '';\n        }\n      };\n      input.click();\n    };\n\n    // 用户主页链接\n    const userProfileUrl = computed(() => {\n      return `/u/${userInfo.value.uid}`;\n    });\n\n    // 监听路由参数变化，更新当前标签页\n    watch(() => route.query.currentTab, newTab => {\n      if (newTab) {\n        currentTab.value = newTab;\n      }\n    });\n\n    // 处理头像选择\n    const handleAvatarSelect = () => {\n      avatarInput.value?.click();\n    };\n    const __returned__ = {\n      router,\n      route,\n      accountStore,\n      showEditModal,\n      editForm,\n      avatarInput,\n      usernameError,\n      creationSection,\n      userInfo,\n      backgroundUrl,\n      formatImageUrl,\n      userAvatar,\n      editAvatarUrl,\n      fetchUserInfo,\n      scrollToCreation,\n      showAvatarUpload,\n      loading,\n      handleImageError,\n      handleBackgroundError,\n      handleProfileUpdate,\n      openEditModal,\n      closeEditModal,\n      validateUsername,\n      handleAvatarChange,\n      formatStorage,\n      storageUsed,\n      storageUsedPercent,\n      statistics,\n      currentTab,\n      articles,\n      portfolios,\n      currentFavTab,\n      favoritesTabs,\n      contentTabs,\n      getCurrentFavTabLabel,\n      getFavoritesExploreRoute,\n      handlePortfolioImageError,\n      handleArticleImageError,\n      formatDate,\n      handleBackgroundUpload,\n      userProfileUrl,\n      handleAvatarSelect,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      nextTick,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useAccountStore() {\n        return useAccountStore;\n      },\n      get config() {\n        return config;\n      },\n      get defaultAvatarImage() {\n        return defaultAvatarImage;\n      },\n      get defaultBackground() {\n        return defaultBackground;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get CameraIcon() {\n        return CameraIcon;\n      },\n      get PhotoIcon() {\n        return PhotoIcon;\n      },\n      get PencilSquareIcon() {\n        return PencilSquareIcon;\n      },\n      get TrophyIcon() {\n        return TrophyIcon;\n      },\n      get SparklesIcon() {\n        return SparklesIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get ChevronRightIcon() {\n        return ChevronRightIcon;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get TrashIcon() {\n        return TrashIcon;\n      },\n      get ChatBubbleLeftRightIcon() {\n        return ChatBubbleLeftRightIcon;\n      },\n      get QuestionMarkCircleIcon() {\n        return QuestionMarkCircleIcon;\n      },\n      get InboxArrowDownIcon() {\n        return InboxArrowDownIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get BookmarkIcon() {\n        return BookmarkIcon;\n      },\n      get ArrowTopRightOnSquareIcon() {\n        return ArrowTopRightOnSquareIcon;\n      },\n      get GlobeAltIcon() {\n        return GlobeAltIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get user() {\n        return user;\n      },\n      get eventBus() {\n        return eventBus;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","nextTick","useRouter","useRoute","ElMessage","useAccountStore","config","defaultAvatarImage","defaultBackground","showToast","CameraIcon","PhotoIcon","PencilSquareIcon","TrophyIcon","SparklesIcon","PencilIcon","ChevronRightIcon","PlusIcon","TrashIcon","ChatBubbleLeftRightIcon","QuestionMarkCircleIcon","InboxArrowDownIcon","EyeIcon","BookmarkIcon","ArrowTopRightOnSquareIcon","GlobeAltIcon","XMarkIcon","user","eventBus","router","route","accountStore","showEditModal","editForm","username","position","bio","avatar","avatarInput","usernameError","creationSection","userInfo","uid","background","backgroundUrl","bgImage","value","formatImageUrl","url","startsWith","process","env","VUE_APP_API_BASE_URL","userAvatar","editAvatarUrl","fetchUserInfo","stats","following_count","followers_count","likes_count","views_count","statistics","label","error","console","scrollToCreation","offset","elementPosition","getBoundingClientRect","top","offsetPosition","window","pageYOffset","scrollTo","behavior","query","currentTab","newTab","immediate","showAvatarUpload","loading","handleImageError","e","target","src","handleBackgroundError","handleProfileUpdate","validateUsername","trim","updateData","log","updateUserInfo","closeEditModal","response","data","message","openEditModal","length","test","handleAvatarChange","event","file","files","type","maxSize","size","formData","FormData","append","updateAvatar","formatStorage","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","storageUsed","storageUsedPercent","maxStorage","round","articles","portfolios","currentFavTab","favoritesTabs","key","contentTabs","count","getCurrentFavTabLabel","tab","find","getFavoritesExploreRoute","routes","topics","handlePortfolioImageError","handleArticleImageError","formatDate","date","Date","toLocaleDateString","year","month","day","handleBackgroundUpload","input","document","createElement","accept","onchange","updateBackground","click","userProfileUrl","handleAvatarSelect"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/UserHome.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch, nextTick } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useAccountStore } from '@/stores/account'\nimport config from '@/config'\nimport defaultAvatarImage from '@/assets/images/default-avatar.png'\nimport defaultBackground from '@/assets/images/default-background.jpg'\nimport { showToast } from '@/components/ToastMessage'\nimport {\n  CameraIcon,        // 用于头像和背景上传\n  PhotoIcon,         // 作品集图标\n  PencilSquareIcon,  // 编辑图标\n  TrophyIcon,        // 会员图标\n  SparklesIcon,      // 升级会员图标\n  PencilIcon,        // 编辑昵称图标\n  ChevronRightIcon,  // 箭头图标\n  PlusIcon,          // 添加图标\n  TrashIcon,         // 删除图标\n  ChatBubbleLeftRightIcon,  // 话题图标\n  QuestionMarkCircleIcon,   // 问答图标\n  InboxArrowDownIcon,       // 草稿箱图标\n  EyeIcon,                  // 查看图标\n  BookmarkIcon,            // 收藏图标\n  ArrowTopRightOnSquareIcon, // 外链图标\n  GlobeAltIcon,            // 个人主页图标\n  XMarkIcon               // 关闭图标\n} from '@heroicons/vue/24/outline'\nimport { user } from '@/api/user'\nimport { eventBus } from '@/utils/eventBus'\n\nconst router = useRouter()\nconst route = useRoute()\nconst accountStore = useAccountStore()\nconst showEditModal = ref(false)\nconst editForm = ref({\n  username: '',\n  position: '',\n  bio: '',\n  avatar: null\n})\nconst avatarInput = ref(null)\nconst usernameError = ref('')\nconst creationSection = ref(null)\n\n// 使用 getters 获取用户信息\nconst userInfo = computed(() => ({\n  uid: accountStore.uid,\n  username: accountStore.username,\n  avatar: accountStore.avatar,\n  background: accountStore.background,\n  bio: accountStore.bio || null,\n  position: accountStore.position || null\n}))\n\n// 添加背景图 URL 的计算属性\nconst backgroundUrl = computed(() => {\n  const bgImage = userInfo.value?.background\n  return bgImage ? formatImageUrl(bgImage) : defaultBackground\n})\n\n// 格式化图片 URL\nconst formatImageUrl = (url) => {\n  if (!url || url === 'null') return defaultAvatarImage\n  return url.startsWith('http') ? url : `${process.env.VUE_APP_API_BASE_URL}${url}`\n}\n\n// 计算头像 URL\nconst userAvatar = computed(() => {\n  return formatImageUrl(userInfo.value?.avatar)\n})\n\n// 在编辑弹窗中显示头像\nconst editAvatarUrl = computed(() => {\n  return formatImageUrl(editForm.value.avatar || userInfo.value?.avatar)\n})\n\n// 获取用户信息\nconst fetchUserInfo = async () => {\n  try {\n    // 只在需要更新时请求接口\n    if (!accountStore.userInfo) {\n      await accountStore.fetchUserInfo()\n    }\n    \n    // 获取统计数据\n    const stats = {\n      following_count: 0,\n      followers_count: 0,\n      likes_count: 0,\n      views_count: 0\n    }\n    \n    statistics.value = [\n      { label: '关注', value: stats.following_count || '0' },\n      { label: '粉丝', value: stats.followers_count || '0' },\n      { label: '点赞', value: stats.likes_count || '0' },\n      { label: '访问', value: stats.views_count || '0' }\n    ]\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n  }\n}\n\n// 滚动到创作区域\nconst scrollToCreation = () => {\n  if (creationSection.value) {\n    const offset = 100 // 可以根据需要调整这个值\n    const elementPosition = creationSection.value.getBoundingClientRect().top\n    const offsetPosition = elementPosition + window.pageYOffset - offset\n    \n    window.scrollTo({\n      top: offsetPosition,\n      behavior: 'smooth'\n    })\n  }\n}\n\n// 监听路由参数变化\nwatch(\n  () => route.query.currentTab,\n  (newTab) => {\n    if (newTab === 'articles' || newTab === 'drafts') {\n      // 等待 DOM 更新后滚动\n      nextTick(() => {\n        scrollToCreation()\n      })\n    }\n  },\n  { immediate: true }\n)\n\n// 组件挂载时获取数据\nonMounted(async () => {\n  // 只在 store 中没有数据时获取\n  if (!accountStore.userInfo) {\n    await fetchUserInfo()\n  }\n  \n  // 如果当前是文章或草稿标签，滚动到创作区域\n  if (route.query.currentTab === 'articles' || route.query.currentTab === 'drafts') {\n    scrollToCreation()\n  }\n})\n\n// 头像上传相关\nconst showAvatarUpload = ref(false)\nconst loading = ref(false)\n\n// 处理头像错误\nconst handleImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\n// 处理背景图错误\nconst handleBackgroundError = (e) => {\n  e.target.src = defaultBackground\n}\n\nconst handleProfileUpdate = async () => {\n  if (!validateUsername()) return\n  \n  // 验证表单数据\n  if (!editForm.value.username.trim()) {\n    showToast('用户名不能为空', 'error')\n    return\n  }\n\n  try {\n    loading.value = true\n    // 准备更新数据\n    const updateData = {\n      username: editForm.value.username.trim(),\n      position: editForm.value.position?.trim() || '',\n      bio: editForm.value.bio?.trim() || ''\n    }\n    \n    console.log('Submitting update:', updateData)\n      \n    // 更新所有用户信息\n    await accountStore.updateUserInfo(updateData)\n    showToast('更新成功', 'success')\n    closeEditModal()\n  } catch (error) {\n    console.error('更新失败:', error)\n    if (error.response) {\n      console.error('Error details:', error.response.data)\n    }\n    showToast(error.message || '更新失败，请稍后重试', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 昵称修改相关方法\nconst openEditModal = () => {\n  editForm.value = {\n    username: accountStore.username || '',\n    position: accountStore.position || '',\n    bio: accountStore.bio || '',\n    avatar: accountStore.avatar || null\n  }\n  showEditModal.value = true\n}\n\nconst closeEditModal = () => {\n  showEditModal.value = false\n  editForm.value = {\n    username: '',\n    position: '',\n    bio: ''\n  }\n  usernameError.value = ''\n}\n\n// 实时验证用户名\nconst validateUsername = () => {\n  const value = editForm.value.username\n  if (!value) {\n    usernameError.value = '用户名不能为空'\n  } else if (value.length < 4 || value.length > 8) {\n    usernameError.value = '用户名长度必须在4-8个字符之间'\n  } else if (!/^[\\u4e00-\\u9fa5a-zA-Z0-9]+$/.test(value)) {\n    usernameError.value = '用户名只能包含中文、英文字母和数字'\n  } else {\n    usernameError.value = ''\n  }\n  return !usernameError.value\n}\n\nconst handleAvatarChange = async (event) => {\n  const file = event.target.files[0]\n  if (!file) return\n  \n  // 验证文件\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n  \n  const maxSize = 2 * 1024 * 1024 // 2MB\n  if (file.size > maxSize) {\n    showToast('图片大小不能超过2MB', 'error')\n    return\n  }\n  \n  try {\n    loading.value = true\n    const formData = new FormData()\n    formData.append('avatar', file)\n    \n    // 使用 accountStore 更新头像\n    await accountStore.updateAvatar(formData)\n    editForm.value.avatar = accountStore.avatar\n    showToast('头像上传成功', 'success')\n  } catch (error) {\n    console.error('头像上传失败:', error)\n    showToast(error.message || '头像上传失败，请稍后重试', 'error')\n  } finally {\n    loading.value = false\n    // 清空文件选择器\n    event.target.value = ''\n  }\n}\n\n// 格式化存储空间大小\nconst formatStorage = (bytes) => {\n  if (!bytes) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`\n}\n\n// 存储空间使用数据\nconst storageUsed = ref(0)  // 字节数\nconst storageUsedPercent = computed(() => {\n  const maxStorage = 10 * 1024 * 1024 * 1024 // 10GB in bytes\n  return Math.round((storageUsed.value / maxStorage) * 100)\n})\n\n// 统计数据\nconst statistics = ref([\n  { label: '关注', value: '0' },\n  { label: '粉丝', value: '0' },\n  { label: '点赞', value: '0' },\n  { label: '访问', value: '0' }\n])\n\n// 内容相关数据\nconst currentTab = ref(route.query.currentTab || 'articles')\nconst articles = ref([])\nconst portfolios = ref([])\n\n// 收藏相关数据\nconst currentFavTab = ref('portfolios')\nconst favoritesTabs = [\n  { key: 'portfolios', label: '作品集' },\n  { key: 'articles', label: '文章' },\n  { key: 'topics', label: '话题' }\n]\n\n// 内容标签\nconst contentTabs = [\n  { key: 'articles', label: '文章', count: 0 },\n  { key: 'topics', label: '话题', count: 0 },\n  { key: 'qa', label: '问答', count: 0 },\n  { key: 'drafts', label: '草稿箱', count: 0 }\n]\n\n// 获取当前收藏标签的标签文本\nconst getCurrentFavTabLabel = () => {\n  const tab = favoritesTabs.find(tab => tab.key === currentFavTab.value)\n  return tab ? tab.label : ''\n}\n\n// 获取收藏探索路由\nconst getFavoritesExploreRoute = () => {\n  const routes = {\n    portfolios: '/explore/portfolios',\n    articles: '/explore/articles',\n    topics: '/explore/topics'\n  }\n  return routes[currentFavTab.value] || '/explore'\n}\n\n// 处理图片错误\nconst handlePortfolioImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\nconst handleArticleImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\n// 格式化日期\nconst formatDate = (date) => {\n  if (!date) return ''\n  return new Date(date).toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  })\n}\n\n// 处理背景图上传\nconst handleBackgroundUpload = async () => {\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.accept = 'image/*'\n  \n  input.onchange = async (e) => {\n    const file = e.target.files[0]\n    if (!file) return\n    \n    try {\n      loading.value = true\n      const formData = new FormData()\n      formData.append('background', file)\n      \n      await accountStore.updateBackground(formData)\n      showToast('背景图上传成功', 'success')\n    } catch (error) {\n      console.error('背景图上传失败:', error)\n      showToast(error.message || '背景图上传失败，请稍后重试', 'error')\n    } finally {\n      loading.value = false\n      input.value = ''\n    }\n  }\n  \n  input.click()\n}\n\n// 用户主页链接\nconst userProfileUrl = computed(() => {\n  return `/u/${userInfo.value.uid}`\n})\n\n// 监听路由参数变化，更新当前标签页\nwatch(\n  () => route.query.currentTab,\n  (newTab) => {\n    if (newTab) {\n      currentTab.value = newTab\n    }\n  }\n)\n\n// 处理头像选择\nconst handleAvatarSelect = () => {\n  avatarInput.value?.click()\n}\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
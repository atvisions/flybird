{"ast":null,"code":"//这里是\nimport request from '@/utils/request';\n\n// 档案数据管理\nconst profile = {\n  // 获取完整档案数据\n  getData() {\n    return request.get('/api/v1/users/profile/data/');\n  },\n  // 获取档案完整度（仅在档案页面使用）\n  getCompleteness() {\n    return request.get('/api/v1/users/profile/completeness/');\n  },\n  // 更新模块数据\n  updateModule(type, data) {\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type;\n    const id = data.id;\n    if (id) {\n      // 编辑现有数据\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/${id}/`,\n        method: 'put',\n        data\n      });\n    } else {\n      // 对于 basic_info，使用不同的处理方式，因为它是一对一关系\n      if (moduleType === 'basic_info') {\n        return request({\n          url: `/api/v1/users/profile/${moduleType}/`,\n          method: 'put',\n          data\n        });\n      }\n      // 其他模块的新增\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/`,\n        method: 'post',\n        data\n      });\n    }\n  },\n  // 删除模块项目\n  deleteModuleItem(type, id) {\n    // 处理特殊的模块类型名称\n    const moduleTypeMap = {\n      'skill': 'skills',\n      'certificate': 'certificates'\n      // 添加其他需要映射的类型...\n    };\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type;\n    return request({\n      url: `/api/v1/users/profile/${moduleType}/${id}/`,\n      method: 'delete'\n    });\n  },\n  uploadBackground(formData) {\n    return request({\n      url: '/api/v1/users/profile/background/upload/',\n      method: 'post',\n      headers: {\n        // 让 axios 自动设置 Content-Type 和 boundary\n        'Content-Type': undefined\n      },\n      data: formData\n    });\n  },\n  // 获取布局配置（保留特殊接口）\n  getLayout() {\n    return request.get('/api/v1/users/profile/layout/');\n  },\n  // 更新布局配置（保留特殊接口）\n  updateLayout(data) {\n    return request({\n      url: '/api/v1/users/profile/layout/',\n      method: 'put',\n      data\n    });\n  },\n  // 上传头像\n  uploadAvatar: formData => {\n    // 确保是 FormData 对象\n    if (!(formData instanceof FormData)) {\n      const error = new Error('Invalid formData');\n      error.code = 'INVALID_FORMDATA';\n      throw error;\n    }\n    return request({\n      url: '/api/v1/users/profile/avatar/upload/',\n      method: 'post',\n      data: formData,\n      // 添加请求配置\n      transformRequest: [function (data, headers) {\n        // 删除 Content-Type，让浏览器自动设置\n        delete headers['Content-Type'];\n        return data;\n      }]\n    });\n  }\n};\nexport default profile;","map":{"version":3,"names":["request","profile","getData","get","getCompleteness","updateModule","type","data","moduleType","id","url","method","deleteModuleItem","moduleTypeMap","uploadBackground","formData","headers","undefined","getLayout","updateLayout","uploadAvatar","FormData","error","Error","code","transformRequest"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/api/profile.js"],"sourcesContent":["//这里是\nimport request from '@/utils/request'\n\n// 档案数据管理\nconst profile = {\n  // 获取完整档案数据\n  getData() {\n    return request.get('/api/v1/users/profile/data/')\n  },\n\n  // 获取档案完整度（仅在档案页面使用）\n  getCompleteness() {\n    return request.get('/api/v1/users/profile/completeness/')\n  },\n\n  // 更新模块数据\n  updateModule(type, data) {\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type\n    const id = data.id\n    \n    if (id) {\n      // 编辑现有数据\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/${id}/`,\n        method: 'put',\n        data\n      })\n    } else {\n      // 对于 basic_info，使用不同的处理方式，因为它是一对一关系\n      if (moduleType === 'basic_info') {\n        return request({\n          url: `/api/v1/users/profile/${moduleType}/`,\n          method: 'put',\n          data\n        })\n      }\n      // 其他模块的新增\n      return request({\n        url: `/api/v1/users/profile/${moduleType}/`,\n        method: 'post',\n        data\n      })\n    }\n  },\n\n  // 删除模块项目\n  deleteModuleItem(type, id) {\n    // 处理特殊的模块类型名称\n    const moduleTypeMap = {\n      'skill': 'skills',\n      'certificate': 'certificates',\n      // 添加其他需要映射的类型...\n    }\n    // 确保技能模块使用正确的类型名\n    const moduleType = type === 'skill' ? 'skills' : type\n    return request({\n      url: `/api/v1/users/profile/${moduleType}/${id}/`,\n      method: 'delete'\n    })\n  },\n\n  uploadBackground(formData) {\n    return request({\n      url: '/api/v1/users/profile/background/upload/',\n      method: 'post',\n      headers: {\n        // 让 axios 自动设置 Content-Type 和 boundary\n        'Content-Type': undefined\n      },\n      data: formData\n    })\n  },\n\n  // 获取布局配置（保留特殊接口）\n  getLayout() {\n    return request.get('/api/v1/users/profile/layout/')\n  },\n\n  // 更新布局配置（保留特殊接口）\n  updateLayout(data) {\n    return request({\n      url: '/api/v1/users/profile/layout/',\n      method: 'put',\n      data\n    })\n  },\n\n  // 上传头像\n  uploadAvatar: (formData) => {\n    // 确保是 FormData 对象\n    if (!(formData instanceof FormData)) {\n      const error = new Error('Invalid formData')\n      error.code = 'INVALID_FORMDATA'\n      throw error\n    }\n    \n    return request({\n      url: '/api/v1/users/profile/avatar/upload/',\n      method: 'post',\n      data: formData,\n      // 添加请求配置\n      transformRequest: [function (data, headers) {\n        // 删除 Content-Type，让浏览器自动设置\n        delete headers['Content-Type']\n        return data\n      }]\n    })\n  },\n\n}\n\nexport default profile "],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,iBAAiB;;AAErC;AACA,MAAMC,OAAO,GAAG;EACd;EACAC,OAAOA,CAAA,EAAG;IACR,OAAOF,OAAO,CAACG,GAAG,CAAC,6BAA6B,CAAC;EACnD,CAAC;EAED;EACAC,eAAeA,CAAA,EAAG;IAChB,OAAOJ,OAAO,CAACG,GAAG,CAAC,qCAAqC,CAAC;EAC3D,CAAC;EAED;EACAE,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACvB;IACA,MAAMC,UAAU,GAAGF,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAGA,IAAI;IACrD,MAAMG,EAAE,GAAGF,IAAI,CAACE,EAAE;IAElB,IAAIA,EAAE,EAAE;MACN;MACA,OAAOT,OAAO,CAAC;QACbU,GAAG,EAAE,yBAAyBF,UAAU,IAAIC,EAAE,GAAG;QACjDE,MAAM,EAAE,KAAK;QACbJ;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,IAAIC,UAAU,KAAK,YAAY,EAAE;QAC/B,OAAOR,OAAO,CAAC;UACbU,GAAG,EAAE,yBAAyBF,UAAU,GAAG;UAC3CG,MAAM,EAAE,KAAK;UACbJ;QACF,CAAC,CAAC;MACJ;MACA;MACA,OAAOP,OAAO,CAAC;QACbU,GAAG,EAAE,yBAAyBF,UAAU,GAAG;QAC3CG,MAAM,EAAE,MAAM;QACdJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED;EACAK,gBAAgBA,CAACN,IAAI,EAAEG,EAAE,EAAE;IACzB;IACA,MAAMI,aAAa,GAAG;MACpB,OAAO,EAAE,QAAQ;MACjB,aAAa,EAAE;MACf;IACF,CAAC;IACD;IACA,MAAML,UAAU,GAAGF,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAGA,IAAI;IACrD,OAAON,OAAO,CAAC;MACbU,GAAG,EAAE,yBAAyBF,UAAU,IAAIC,EAAE,GAAG;MACjDE,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAEDG,gBAAgBA,CAACC,QAAQ,EAAE;IACzB,OAAOf,OAAO,CAAC;MACbU,GAAG,EAAE,0CAA0C;MAC/CC,MAAM,EAAE,MAAM;MACdK,OAAO,EAAE;QACP;QACA,cAAc,EAAEC;MAClB,CAAC;MACDV,IAAI,EAAEQ;IACR,CAAC,CAAC;EACJ,CAAC;EAED;EACAG,SAASA,CAAA,EAAG;IACV,OAAOlB,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC;EACrD,CAAC;EAED;EACAgB,YAAYA,CAACZ,IAAI,EAAE;IACjB,OAAOP,OAAO,CAAC;MACbU,GAAG,EAAE,+BAA+B;MACpCC,MAAM,EAAE,KAAK;MACbJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAa,YAAY,EAAGL,QAAQ,IAAK;IAC1B;IACA,IAAI,EAAEA,QAAQ,YAAYM,QAAQ,CAAC,EAAE;MACnC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MAC3CD,KAAK,CAACE,IAAI,GAAG,kBAAkB;MAC/B,MAAMF,KAAK;IACb;IAEA,OAAOtB,OAAO,CAAC;MACbU,GAAG,EAAE,sCAAsC;MAC3CC,MAAM,EAAE,MAAM;MACdJ,IAAI,EAAEQ,QAAQ;MACd;MACAU,gBAAgB,EAAE,CAAC,UAAUlB,IAAI,EAAES,OAAO,EAAE;QAC1C;QACA,OAAOA,OAAO,CAAC,cAAc,CAAC;QAC9B,OAAOT,IAAI;MACb,CAAC;IACH,CAAC,CAAC;EACJ;AAEF,CAAC;AAED,eAAeN,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
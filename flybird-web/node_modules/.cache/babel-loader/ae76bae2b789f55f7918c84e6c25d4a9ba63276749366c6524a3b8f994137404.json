{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { HeartIcon, ChatBubbleLeftIcon, EyeIcon, ChevronRightIcon, BookmarkIcon, ShareIcon, LinkIcon, QrCodeIcon, CurrencyYenIcon, ClockIcon, CheckBadgeIcon, CheckCircleIcon } from '@heroicons/vue/24/outline';\nimport { showToast } from '@/components/ToastMessage';\nexport default {\n  __name: 'QuestionDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const store = useStore();\n\n    // 判断是否是问题作者\n    const isAuthor = computed(() => {\n      return store.state.user?.id === question.value.author.id;\n    });\n\n    // 问题数据\n    const question = ref({\n      id: 1,\n      title: 'Vue 3 组合式 API 中如何优雅地处理异步请求？',\n      category: '技术问答',\n      bounty: 50,\n      bountyEndTime: '2024-03-20 23:59:59',\n      solved: false,\n      content: `在使用 Vue 3 的组合式 API 开发时，遇到了一些关于异步请求处理的问题：\n\n1. 如何优雅地处理加载状态？\n2. 请求失败后如何进行错误处理？\n3. 如何避免重复请求？\n4. 如何处理请求竞态问题？\n\n希望有经验的同学分享一下最佳实践。`,\n      author: {\n        id: 1,\n        name: '张三',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=author',\n        title: '前端工程师',\n        bio: '热爱技术，专注前端开发',\n        questions: 12,\n        answers: 34\n      },\n      createTime: '2024-03-15',\n      views: 1234,\n      answers: 2,\n      likes: 45,\n      tags: ['Vue.js', '异步编程', '最佳实践']\n    });\n\n    // 回答相关\n    const answerContent = ref('');\n    const answers = ref([{\n      id: 1,\n      author: {\n        name: '李四',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=user1'\n      },\n      content: '建议使用 vue-query 或 swrv 这类请求库，它们提供了很多开箱即用的功能，比如缓存、重试、请求竞态处理等。',\n      time: '2小时前',\n      likes: 5,\n      isLiked: false,\n      isAccepted: false\n    }, {\n      id: 2,\n      author: {\n        name: '王五',\n        avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=user2'\n      },\n      content: `关于异步请求处理，我建议以下最佳实践：\n\n1. 使用 async/await 配合 try/catch 处理异步流程\n2. 将请求逻辑封装在 composables 中，便于复用\n3. 使用 ref 或 reactive 管理加载状态和错误状态\n4. 实现请求取消机制，避免竞态问题\n5. 使用 loading 和 error 状态控制 UI 展示\n\n示例代码：\n\\`\\`\\`js\nconst useAsyncRequest = () => {\n  const data = ref(null)\n  const loading = ref(false)\n  const error = ref(null)\n\n  const execute = async () => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      data.value = await api.getData()\n    } catch (err) {\n      error.value = err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return { data, loading, error, execute }\n}\n\\`\\`\\`\n\n这样可以优雅地处理异步流程中的各种状态。`,\n      time: '1小时前',\n      likes: 12,\n      isLiked: false,\n      isAccepted: false\n    }]);\n\n    // 点赞和收藏状态\n    const isLiked = ref(false);\n    const isCollected = ref(false);\n\n    // 分享选项\n    const shareOptions = [{\n      icon: LinkIcon,\n      action: () => {\n        navigator.clipboard.writeText(window.location.href);\n        showToast('链接已复制', 'success');\n      }\n    }, {\n      icon: ShareIcon,\n      action: () => {\n        showToast('分享功能开发中', 'info');\n      }\n    }, {\n      icon: QrCodeIcon,\n      action: () => {\n        showToast('二维码分享功能开发中', 'info');\n      }\n    }];\n\n    // 相关问题\n    const relatedQuestions = ref([{\n      id: 1,\n      title: 'Vue 3 + TypeScript 项目最佳实践分享',\n      answers: 12,\n      createTime: '2天前'\n    }, {\n      id: 2,\n      title: '如何处理 Vue 3 组件中的副作用？',\n      answers: 8,\n      createTime: '3天前'\n    }, {\n      id: 3,\n      title: 'Vue 3 性能优化技巧总结',\n      answers: 15,\n      createTime: '4天前'\n    }]);\n\n    // 点赞问题\n    const toggleLike = () => {\n      if (!isLiked.value) {\n        question.value.likes++;\n      } else {\n        question.value.likes--;\n      }\n      isLiked.value = !isLiked.value;\n    };\n\n    // 收藏问题\n    const handleCollect = () => {\n      isCollected.value = !isCollected.value;\n      showToast(isCollected.value ? '收藏成功' : '已取消收藏', 'success');\n    };\n\n    // 点赞回答\n    const toggleAnswerLike = answer => {\n      if (!answer.isLiked) {\n        answer.likes++;\n      } else {\n        answer.likes--;\n      }\n      answer.isLiked = !answer.isLiked;\n    };\n\n    // 采纳回答\n    const acceptAnswer = answer => {\n      if (question.value.solved) {\n        showToast('该问题已采纳答案', 'warning');\n        return;\n      }\n\n      // TODO: 调用接口采纳回答\n      answer.isAccepted = true;\n      question.value.solved = true;\n      showToast('已采纳该回答', 'success');\n    };\n\n    // 回复用户\n    const replyToUser = answer => {\n      answerContent.value = `@${answer.author.name} `;\n    };\n\n    // 提交回答\n    const submitAnswer = () => {\n      if (!answerContent.value.trim()) {\n        showToast('请输入回答内容', 'warning');\n        return;\n      }\n      answers.value.push({\n        id: Date.now(),\n        author: {\n          name: '当前用户',\n          avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=current'\n        },\n        content: answerContent.value,\n        time: '刚刚',\n        likes: 0,\n        isLiked: false,\n        isAccepted: false\n      });\n      question.value.answers++;\n      answerContent.value = '';\n      showToast('回答发表成功', 'success');\n    };\n    const __returned__ = {\n      route,\n      store,\n      isAuthor,\n      question,\n      answerContent,\n      answers,\n      isLiked,\n      isCollected,\n      shareOptions,\n      relatedQuestions,\n      toggleLike,\n      handleCollect,\n      toggleAnswerLike,\n      acceptAnswer,\n      replyToUser,\n      submitAnswer,\n      ref,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get HeartIcon() {\n        return HeartIcon;\n      },\n      get ChatBubbleLeftIcon() {\n        return ChatBubbleLeftIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get ChevronRightIcon() {\n        return ChevronRightIcon;\n      },\n      get BookmarkIcon() {\n        return BookmarkIcon;\n      },\n      get ShareIcon() {\n        return ShareIcon;\n      },\n      get LinkIcon() {\n        return LinkIcon;\n      },\n      get QrCodeIcon() {\n        return QrCodeIcon;\n      },\n      get CurrencyYenIcon() {\n        return CurrencyYenIcon;\n      },\n      get ClockIcon() {\n        return ClockIcon;\n      },\n      get CheckBadgeIcon() {\n        return CheckBadgeIcon;\n      },\n      get CheckCircleIcon() {\n        return CheckCircleIcon;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRoute","useStore","HeartIcon","ChatBubbleLeftIcon","EyeIcon","ChevronRightIcon","BookmarkIcon","ShareIcon","LinkIcon","QrCodeIcon","CurrencyYenIcon","ClockIcon","CheckBadgeIcon","CheckCircleIcon","showToast","route","store","isAuthor","state","user","id","question","value","author","title","category","bounty","bountyEndTime","solved","content","name","avatar","bio","questions","answers","createTime","views","likes","tags","answerContent","time","isLiked","isAccepted","isCollected","shareOptions","icon","action","navigator","clipboard","writeText","window","location","href","relatedQuestions","toggleLike","handleCollect","toggleAnswerLike","answer","acceptAnswer","replyToUser","submitAnswer","trim","push","Date","now"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/QuestionDetail.vue"],"sourcesContent":["<template>\n  <div class=\"py-4 pb-24 lg:py-6 mt-[28px] md:mt-[72px]\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <!-- 面包屑导航 -->\n      <nav class=\"flex items-center space-x-2 text-sm mb-6\" aria-label=\"Breadcrumb\">\n        <router-link to=\"/community\" class=\"text-gray-500 hover:text-gray-700\">\n          社区\n        </router-link>\n        <ChevronRightIcon class=\"w-4 h-4 text-gray-400\" />\n        <router-link to=\"/community/questions\" class=\"text-gray-500 hover:text-gray-700\">\n          问答\n        </router-link>\n        <ChevronRightIcon class=\"w-4 h-4 text-gray-400\" />\n        <span class=\"text-gray-900 font-medium truncate max-w-[200px]\" :title=\"question.title\">\n          {{ question.title }}\n        </span>\n      </nav>\n\n      <!-- 内容区域两栏布局 -->\n      <div class=\"flex flex-col lg:flex-row gap-4 lg:gap-6\">\n        <!-- 左侧主要内容 -->\n        <div class=\"lg:flex-1 lg:max-w-[calc(100%-320px-24px)]\">\n          <!-- 问题内容卡片 -->\n          <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n            <!-- 问题头部 -->\n            <header class=\"mb-6\">\n              <div class=\"flex items-center gap-2 mb-3\">\n                <span class=\"px-2.5 py-1 bg-violet-100 text-violet-600 rounded-full text-xs font-medium\">\n                  {{ question.category }}\n                </span>\n                <span class=\"px-2.5 py-1 bg-amber-100 text-amber-600 rounded-full text-xs font-medium flex items-center\">\n                  <CurrencyYenIcon class=\"w-3.5 h-3.5 mr-0.5\" />\n                  {{ question.bounty }} 悬赏\n                </span>\n                <span v-if=\"question.solved\" class=\"px-2.5 py-1 bg-green-100 text-green-600 rounded-full text-xs font-medium\">\n                  已解决\n                </span>\n              </div>\n              <h1 class=\"text-xl font-bold text-gray-900 mb-4\">\n                {{ question.title }}\n              </h1>\n              \n              <!-- 作者信息和问题数据 -->\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <img \n                    :src=\"question.author.avatar\" \n                    :alt=\"question.author.name\"\n                    class=\"w-10 h-10 rounded-full mr-3\"\n                  >\n                  <div>\n                    <div class=\"font-medium text-gray-900\">{{ question.author.name }}</div>\n                    <div class=\"text-sm text-gray-500\">{{ question.createTime }}</div>\n                  </div>\n                </div>\n\n                <div class=\"flex items-center gap-4 text-sm text-gray-500\">\n                  <span class=\"flex items-center\">\n                    <EyeIcon class=\"w-4 h-4 mr-1\" />\n                    {{ question.views }} 浏览\n                  </span>\n                  <span class=\"flex items-center\">\n                    <ChatBubbleLeftIcon class=\"w-4 h-4 mr-1\" />\n                    {{ question.answers }} 回答\n                  </span>\n                </div>\n              </div>\n            </header>\n\n            <!-- 问题内容 -->\n            <div class=\"prose prose-sm max-w-none text-gray-600 mb-6\">\n              {{ question.content }}\n            </div>\n\n            <!-- 问题标签 -->\n            <div class=\"flex items-center gap-2 mb-6 flex-wrap\">\n              <span \n                v-for=\"tag in question.tags\" \n                :key=\"tag\"\n                class=\"px-2 py-0.5 bg-gray-100 text-gray-600 rounded-full text-xs hover:bg-gray-200 cursor-pointer transition-colors\"\n              >\n                {{ tag }}\n              </span>\n            </div>\n\n            <!-- 操作按钮 -->\n            <div class=\"flex items-center justify-between py-4 border-t border-gray-100\">\n              <div class=\"flex items-center gap-2\">\n                <button \n                  class=\"flex items-center px-4 py-2 rounded-lg transition-colors\"\n                  :class=\"isLiked ? 'text-red-500 bg-red-50' : 'text-gray-600 hover:bg-gray-50'\"\n                  @click=\"toggleLike\"\n                >\n                  <HeartIcon class=\"w-5 h-5 mr-2\" :class=\"{ 'fill-current': isLiked }\" />\n                  {{ isLiked ? '已点赞' : '点赞' }}\n                </button>\n                <button \n                  class=\"flex items-center px-4 py-2 text-gray-600 hover:bg-gray-50 rounded-lg transition-colors\"\n                  @click=\"handleCollect\"\n                >\n                  <BookmarkIcon class=\"w-5 h-5 mr-2\" :class=\"{ 'fill-current': isCollected }\" />\n                  {{ isCollected ? '已收藏' : '收藏' }}\n                </button>\n              </div>\n              \n              <div class=\"flex items-center gap-2\">\n                <button \n                  v-for=\"(item, index) in shareOptions\" \n                  :key=\"index\"\n                  class=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-50\"\n                  @click=\"item.action\"\n                >\n                  <component :is=\"item.icon\" class=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- 回答列表 -->\n          <div class=\"mt-6 bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n            <h2 class=\"text-lg font-bold text-gray-900 mb-4\">\n              {{ question.answers }} 个回答\n            </h2>\n\n            <!-- 回答输入框 -->\n            <div class=\"mb-6\">\n              <textarea\n                v-model=\"answerContent\"\n                rows=\"3\"\n                class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                placeholder=\"写下你的回答...\"\n              ></textarea>\n              <div class=\"mt-2 flex justify-end\">\n                <button \n                  class=\"px-4 py-2 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n                  @click=\"submitAnswer\"\n                >\n                  发表回答\n                </button>\n              </div>\n            </div>\n\n            <!-- 回答列表 -->\n            <div class=\"space-y-6\">\n              <div \n                v-for=\"answer in answers\" \n                :key=\"answer.id\"\n                class=\"flex gap-4\"\n              >\n                <img \n                  :src=\"answer.author.avatar\"\n                  :alt=\"answer.author.name\"\n                  class=\"w-10 h-10 rounded-full flex-shrink-0\"\n                >\n                <div class=\"flex-1\">\n                  <div class=\"bg-gray-50 rounded-lg p-4\" :class=\"{'ring-2 ring-green-500': answer.isAccepted}\">\n                    <div class=\"flex items-center justify-between mb-2\">\n                      <div class=\"flex items-center gap-2\">\n                        <span class=\"font-medium text-gray-900\">{{ answer.author.name }}</span>\n                        <span v-if=\"answer.isAccepted\" class=\"flex items-center px-2 py-0.5 bg-green-100 text-green-600 rounded text-xs font-medium\">\n                          <CheckCircleIcon class=\"w-3.5 h-3.5 mr-1\" />\n                          最佳答案\n                        </span>\n                      </div>\n                      <span class=\"text-sm text-gray-500\">{{ answer.time }}</span>\n                    </div>\n                    <p class=\"text-gray-600\">{{ answer.content }}</p>\n                    <!-- 悬赏金额提示 - 仅在被采纳的回答显示 -->\n                    <div v-if=\"answer.isAccepted && question.bounty\" class=\"mt-3 pt-3 border-t border-gray-200\">\n                      <div class=\"flex items-center text-amber-600 text-sm\">\n                        <CurrencyYenIcon class=\"w-4 h-4 mr-1\" />\n                        <span>获得 {{ question.bounty }} 悬赏金额</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"flex items-center gap-4 mt-2 text-sm\">\n                    <!-- 采纳按钮 - 仅问题作者且问题未解决时显示 -->\n                    <button \n                      v-if=\"isAuthor && !question.solved && !answer.isAccepted\"\n                      class=\"flex items-center text-green-600 hover:text-green-700 font-medium\"\n                      @click=\"acceptAnswer(answer)\"\n                    >\n                      <CheckCircleIcon class=\"w-4 h-4 mr-1\" />\n                      采纳回答\n                    </button>\n                    <button \n                      class=\"text-gray-500 hover:text-gray-700\"\n                      @click=\"replyToUser(answer)\"\n                    >\n                      回复\n                    </button>\n                    <button \n                      class=\"flex items-center text-gray-500 hover:text-gray-700\"\n                      @click=\"toggleAnswerLike(answer)\"\n                    >\n                      <HeartIcon \n                        class=\"w-4 h-4 mr-1\"\n                        :class=\"{ 'fill-current text-red-500': answer.isLiked }\"\n                      />\n                      {{ answer.likes }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 右侧边栏 -->\n        <div class=\"lg:w-[320px] space-y-6\">\n          <!-- 悬赏信息 -->\n          <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n            <div class=\"text-center\">\n              <div class=\"text-2xl font-bold text-amber-600 mb-2\">\n                <span class=\"text-base\">¥</span>{{ question.bounty }}\n              </div>\n              <div class=\"text-sm text-gray-500 mb-4\">悬赏金额</div>\n              <div class=\"space-y-2 text-left text-sm text-gray-600\">\n                <div class=\"flex items-center gap-2\">\n                  <ClockIcon class=\"w-4 h-4 text-gray-400\" />\n                  <span>悬赏截止时间：{{ question.bountyEndTime }}</span>\n                </div>\n                <div class=\"flex items-center gap-2\">\n                  <CheckBadgeIcon class=\"w-4 h-4 text-gray-400\" />\n                  <span>{{ question.solved ? '已解决' : '待解决' }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 作者信息卡片 -->\n          <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n            <div class=\"flex items-center space-x-4 mb-4\">\n              <img \n                :src=\"question.author.avatar\" \n                :alt=\"question.author.name\"\n                class=\"w-12 h-12 rounded-full\"\n              >\n              <div>\n                <div class=\"font-medium text-gray-900\">{{ question.author.name }}</div>\n                <div class=\"text-sm text-gray-500\">{{ question.author.title || '社区成员' }}</div>\n              </div>\n            </div>\n            <p class=\"text-sm text-gray-600 mb-4\">{{ question.author.bio || '这个作者很懒，还没有写简介' }}</p>\n            <div class=\"flex items-center justify-between text-sm text-gray-500\">\n              <div>提问 {{ question.author.questions || 0 }}</div>\n              <div>回答 {{ question.author.answers || 0 }}</div>\n            </div>\n            <button \n              class=\"mt-4 w-full h-9 rounded-lg border border-violet-600 text-violet-600 hover:bg-violet-50 transition-colors text-sm font-medium\"\n            >\n              关注作者\n            </button>\n          </div>\n\n          <!-- 相关问题 -->\n          <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n            <h2 class=\"text-lg font-bold text-gray-900 mb-4\">相关问题</h2>\n            <div class=\"space-y-4\">\n              <div v-for=\"question in relatedQuestions\" :key=\"question.id\"\n                class=\"group\"\n              >\n                <h3 \n                  class=\"text-sm font-medium text-gray-900 group-hover:text-violet-600 transition-colors line-clamp-2 mb-2 cursor-pointer\"\n                  @click=\"$router.push(`/community/question/${question.id}`)\"\n                >\n                  {{ question.title }}\n                </h3>\n                <div class=\"flex items-center text-xs text-gray-500\">\n                  <span class=\"flex items-center\">\n                    <ChatBubbleLeftIcon class=\"w-3 h-3 mr-1\" />{{ question.answers }}\n                  </span>\n                  <span class=\"mx-2\">·</span>\n                  <span>{{ question.createTime }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { \n  HeartIcon,\n  ChatBubbleLeftIcon,\n  EyeIcon,\n  ChevronRightIcon,\n  BookmarkIcon,\n  ShareIcon,\n  LinkIcon,\n  QrCodeIcon,\n  CurrencyYenIcon,\n  ClockIcon,\n  CheckBadgeIcon,\n  CheckCircleIcon\n} from '@heroicons/vue/24/outline'\nimport { showToast } from '@/components/ToastMessage'\n\nconst route = useRoute()\nconst store = useStore()\n\n// 判断是否是问题作者\nconst isAuthor = computed(() => {\n  return store.state.user?.id === question.value.author.id\n})\n\n// 问题数据\nconst question = ref({\n  id: 1,\n  title: 'Vue 3 组合式 API 中如何优雅地处理异步请求？',\n  category: '技术问答',\n  bounty: 50,\n  bountyEndTime: '2024-03-20 23:59:59',\n  solved: false,\n  content: `在使用 Vue 3 的组合式 API 开发时，遇到了一些关于异步请求处理的问题：\n\n1. 如何优雅地处理加载状态？\n2. 请求失败后如何进行错误处理？\n3. 如何避免重复请求？\n4. 如何处理请求竞态问题？\n\n希望有经验的同学分享一下最佳实践。`,\n  author: {\n    id: 1,\n    name: '张三',\n    avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=author',\n    title: '前端工程师',\n    bio: '热爱技术，专注前端开发',\n    questions: 12,\n    answers: 34\n  },\n  createTime: '2024-03-15',\n  views: 1234,\n  answers: 2,\n  likes: 45,\n  tags: ['Vue.js', '异步编程', '最佳实践']\n})\n\n// 回答相关\nconst answerContent = ref('')\nconst answers = ref([\n  {\n    id: 1,\n    author: {\n      name: '李四',\n      avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=user1'\n    },\n    content: '建议使用 vue-query 或 swrv 这类请求库，它们提供了很多开箱即用的功能，比如缓存、重试、请求竞态处理等。',\n    time: '2小时前',\n    likes: 5,\n    isLiked: false,\n    isAccepted: false\n  },\n  {\n    id: 2,\n    author: {\n      name: '王五',\n      avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=user2'\n    },\n    content: `关于异步请求处理，我建议以下最佳实践：\n\n1. 使用 async/await 配合 try/catch 处理异步流程\n2. 将请求逻辑封装在 composables 中，便于复用\n3. 使用 ref 或 reactive 管理加载状态和错误状态\n4. 实现请求取消机制，避免竞态问题\n5. 使用 loading 和 error 状态控制 UI 展示\n\n示例代码：\n\\`\\`\\`js\nconst useAsyncRequest = () => {\n  const data = ref(null)\n  const loading = ref(false)\n  const error = ref(null)\n\n  const execute = async () => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      data.value = await api.getData()\n    } catch (err) {\n      error.value = err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return { data, loading, error, execute }\n}\n\\`\\`\\`\n\n这样可以优雅地处理异步流程中的各种状态。`,\n    time: '1小时前',\n    likes: 12,\n    isLiked: false,\n    isAccepted: false\n  }\n])\n\n// 点赞和收藏状态\nconst isLiked = ref(false)\nconst isCollected = ref(false)\n\n// 分享选项\nconst shareOptions = [\n  {\n    icon: LinkIcon,\n    action: () => {\n      navigator.clipboard.writeText(window.location.href)\n      showToast('链接已复制', 'success')\n    }\n  },\n  {\n    icon: ShareIcon,\n    action: () => {\n      showToast('分享功能开发中', 'info')\n    }\n  },\n  {\n    icon: QrCodeIcon,\n    action: () => {\n      showToast('二维码分享功能开发中', 'info')\n    }\n  }\n]\n\n// 相关问题\nconst relatedQuestions = ref([\n  {\n    id: 1,\n    title: 'Vue 3 + TypeScript 项目最佳实践分享',\n    answers: 12,\n    createTime: '2天前'\n  },\n  {\n    id: 2,\n    title: '如何处理 Vue 3 组件中的副作用？',\n    answers: 8,\n    createTime: '3天前'\n  },\n  {\n    id: 3,\n    title: 'Vue 3 性能优化技巧总结',\n    answers: 15,\n    createTime: '4天前'\n  }\n])\n\n// 点赞问题\nconst toggleLike = () => {\n  if (!isLiked.value) {\n    question.value.likes++\n  } else {\n    question.value.likes--\n  }\n  isLiked.value = !isLiked.value\n}\n\n// 收藏问题\nconst handleCollect = () => {\n  isCollected.value = !isCollected.value\n  showToast(isCollected.value ? '收藏成功' : '已取消收藏', 'success')\n}\n\n// 点赞回答\nconst toggleAnswerLike = (answer) => {\n  if (!answer.isLiked) {\n    answer.likes++\n  } else {\n    answer.likes--\n  }\n  answer.isLiked = !answer.isLiked\n}\n\n// 采纳回答\nconst acceptAnswer = (answer) => {\n  if (question.value.solved) {\n    showToast('该问题已采纳答案', 'warning')\n    return\n  }\n  \n  // TODO: 调用接口采纳回答\n  answer.isAccepted = true\n  question.value.solved = true\n  showToast('已采纳该回答', 'success')\n}\n\n// 回复用户\nconst replyToUser = (answer) => {\n  answerContent.value = `@${answer.author.name} `\n}\n\n// 提交回答\nconst submitAnswer = () => {\n  if (!answerContent.value.trim()) {\n    showToast('请输入回答内容', 'warning')\n    return\n  }\n\n  answers.value.push({\n    id: Date.now(),\n    author: {\n      name: '当前用户',\n      avatar: 'https://api.dicebear.com/7.x/avataaars/svg?seed=current'\n    },\n    content: answerContent.value,\n    time: '刚刚',\n    likes: 0,\n    isLiked: false,\n    isAccepted: false\n  })\n\n  question.value.answers++\n  answerContent.value = ''\n  showToast('回答发表成功', 'success')\n}\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
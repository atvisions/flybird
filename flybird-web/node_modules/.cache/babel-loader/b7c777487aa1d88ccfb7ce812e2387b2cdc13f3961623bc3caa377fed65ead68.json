{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { defineStore } from 'pinia';\nimport { ref } from 'vue';\nimport { getComponents } from '@/api/resume';\nexport const useComponentStore = defineStore('template-components', () => {\n  // 状态\n  const components = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n\n  // 组件分类\n  const componentCategories = computed(() => {\n    const categories = {};\n    components.value.forEach(component => {\n      if (!categories[component.category]) {\n        categories[component.category] = [];\n      }\n      categories[component.category].push(component);\n    });\n    return categories;\n  });\n\n  // 获取组件列表\n  const loadComponents = async () => {\n    try {\n      loading.value = true;\n      const response = await getComponents();\n      components.value = response.data;\n    } catch (err) {\n      error.value = err.message;\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 根据类型获取组件\n  const getComponentByType = type => {\n    return components.value.find(c => c.type === type);\n  };\n\n  // 获取组件配置\n  const getComponentConfig = type => {\n    const component = getComponentByType(type);\n    return component ? component.config : null;\n  };\n\n  // 获取组件模板\n  const getComponentTemplate = type => {\n    const component = getComponentByType(type);\n    return component ? component.template : null;\n  };\n  return {\n    components,\n    loading,\n    error,\n    componentCategories,\n    loadComponents,\n    getComponentByType,\n    getComponentConfig,\n    getComponentTemplate\n  };\n});","map":{"version":3,"names":["defineStore","ref","getComponents","useComponentStore","components","loading","error","componentCategories","computed","categories","value","forEach","component","category","push","loadComponents","response","data","err","message","getComponentByType","type","find","c","getComponentConfig","config","getComponentTemplate","template"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/store/component.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref } from 'vue'\nimport { getComponents } from '@/api/resume'\n\nexport const useComponentStore = defineStore('template-components', () => {\n  // 状态\n  const components = ref([])\n  const loading = ref(false)\n  const error = ref(null)\n\n  // 组件分类\n  const componentCategories = computed(() => {\n    const categories = {}\n    components.value.forEach(component => {\n      if (!categories[component.category]) {\n        categories[component.category] = []\n      }\n      categories[component.category].push(component)\n    })\n    return categories\n  })\n\n  // 获取组件列表\n  const loadComponents = async () => {\n    try {\n      loading.value = true\n      const response = await getComponents()\n      components.value = response.data\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 根据类型获取组件\n  const getComponentByType = (type) => {\n    return components.value.find(c => c.type === type)\n  }\n\n  // 获取组件配置\n  const getComponentConfig = (type) => {\n    const component = getComponentByType(type)\n    return component ? component.config : null\n  }\n\n  // 获取组件模板\n  const getComponentTemplate = (type) => {\n    const component = getComponentByType(type)\n    return component ? component.template : null\n  }\n\n  return {\n    components,\n    loading,\n    error,\n    componentCategories,\n    loadComponents,\n    getComponentByType,\n    getComponentConfig,\n    getComponentTemplate\n  }\n}) "],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,aAAa,QAAQ,cAAc;AAE5C,OAAO,MAAMC,iBAAiB,GAAGH,WAAW,CAAC,qBAAqB,EAAE,MAAM;EACxE;EACA,MAAMI,UAAU,GAAGH,GAAG,CAAC,EAAE,CAAC;EAC1B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,KAAK,CAAC;EAC1B,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAI,CAAC;;EAEvB;EACA,MAAMM,mBAAmB,GAAGC,QAAQ,CAAC,MAAM;IACzC,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrBL,UAAU,CAACM,KAAK,CAACC,OAAO,CAACC,SAAS,IAAI;MACpC,IAAI,CAACH,UAAU,CAACG,SAAS,CAACC,QAAQ,CAAC,EAAE;QACnCJ,UAAU,CAACG,SAAS,CAACC,QAAQ,CAAC,GAAG,EAAE;MACrC;MACAJ,UAAU,CAACG,SAAS,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC;IAChD,CAAC,CAAC;IACF,OAAOH,UAAU;EACnB,CAAC,CAAC;;EAEF;EACA,MAAMM,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFV,OAAO,CAACK,KAAK,GAAG,IAAI;MACpB,MAAMM,QAAQ,GAAG,MAAMd,aAAa,CAAC,CAAC;MACtCE,UAAU,CAACM,KAAK,GAAGM,QAAQ,CAACC,IAAI;IAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZZ,KAAK,CAACI,KAAK,GAAGQ,GAAG,CAACC,OAAO;MACzB,MAAMD,GAAG;IACX,CAAC,SAAS;MACRb,OAAO,CAACK,KAAK,GAAG,KAAK;IACvB;EACF,CAAC;;EAED;EACA,MAAMU,kBAAkB,GAAIC,IAAI,IAAK;IACnC,OAAOjB,UAAU,CAACM,KAAK,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACF,IAAI,KAAKA,IAAI,CAAC;EACpD,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAIH,IAAI,IAAK;IACnC,MAAMT,SAAS,GAAGQ,kBAAkB,CAACC,IAAI,CAAC;IAC1C,OAAOT,SAAS,GAAGA,SAAS,CAACa,MAAM,GAAG,IAAI;EAC5C,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAIL,IAAI,IAAK;IACrC,MAAMT,SAAS,GAAGQ,kBAAkB,CAACC,IAAI,CAAC;IAC1C,OAAOT,SAAS,GAAGA,SAAS,CAACe,QAAQ,GAAG,IAAI;EAC9C,CAAC;EAED,OAAO;IACLvB,UAAU;IACVC,OAAO;IACPC,KAAK;IACLC,mBAAmB;IACnBQ,cAAc;IACdK,kBAAkB;IAClBI,kBAAkB;IAClBE;EACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
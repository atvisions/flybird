{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = {\n  class: \"modal-header\"\n};\nconst _hoisted_4 = {\n  class: \"modal-body\"\n};\nconst _hoisted_5 = {\n  class: \"tips-box mb-4\"\n};\nconst _hoisted_6 = {\n  class: \"flex items-start space-x-2\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"upload-area\"\n};\nconst _hoisted_8 = {\n  class: \"text-center\"\n};\nconst _hoisted_9 = {\n  class: \"cropper-container\"\n};\nconst _hoisted_10 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_11 = [\"disabled\"];\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.modelValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"上传头像\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: $setup.close\n  }, [_createVNode($setup[\"XMarkIcon\"], {\n    class: \"w-5 h-5\"\n  })])]), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 提示信息 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode($setup[\"InformationCircleIcon\"], {\n    class: \"w-5 h-5 text-blue-500 flex-shrink-0 mt-0.5\"\n  }), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n    class: \"text-sm text-gray-600\"\n  }, [_createElementVNode(\"p\", {\n    class: \"font-medium text-gray-900 mb-1\"\n  }, \"上传要求：\"), _createElementVNode(\"ul\", {\n    class: \"list-disc list-inside space-y-1\"\n  }, [_createElementVNode(\"li\", null, \"请上传您的真实证件照\"), _createElementVNode(\"li\", null, \"照片需要清晰、正面、免冠\"), _createElementVNode(\"li\", null, \"建议尺寸 400x400 像素\"), _createElementVNode(\"li\", null, \"支持 jpg、png 格式\")])], -1 /* HOISTED */))])]), _createCommentVNode(\" 文件选择区域 \"), !$setup.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n    ref: \"fileInput\",\n    type: \"file\",\n    accept: \"image/*\",\n    class: \"hidden\",\n    onChange: $setup.handleFileChange\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"div\", {\n    class: \"drop-zone\",\n    onClick: $setup.triggerFileInput,\n    onDrop: _withModifiers($setup.handleDrop, [\"prevent\"]),\n    onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_8, [_createVNode($setup[\"CameraIcon\"], {\n    class: \"w-8 h-8 mx-auto text-gray-400\"\n  }), _cache[3] || (_cache[3] = _createElementVNode(\"p\", {\n    class: \"mt-2 text-sm text-gray-500\"\n  }, \"点击或拖拽图片到此处上传\", -1 /* HOISTED */))])], 32 /* NEED_HYDRATION */)])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 裁切区域 \"), _createElementVNode(\"div\", _hoisted_9, [_createVNode($setup[\"Cropper\"], {\n    ref: \"cropperRef\",\n    class: \"cropper\",\n    src: $setup.previewUrl,\n    \"stencil-props\": {\n      aspectRatio: 1,\n      minWidth: 400,\n      minHeight: 400\n    },\n    \"default-size\": {\n      width: 400,\n      height: 400\n    },\n    \"image-restriction\": \"stencil\",\n    \"default-boundaries\": \"fill\",\n    \"resize-image\": {\n      width: 800,\n      height: 800\n    },\n    \"background-class\": \"bg-gray-100\",\n    \"round-boundaries\": true\n  }, null, 8 /* PROPS */, [\"src\"]), _createCommentVNode(\" 重新选择按钮 \"), _createElementVNode(\"button\", {\n    onClick: $setup.resetFile,\n    class: \"absolute top-2 right-2 px-2 py-1 text-xs bg-white/80 hover:bg-white text-gray-700 rounded shadow-sm transition-colors\"\n  }, \" 重新选择 \")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"btn btn-default\",\n    onClick: $setup.close,\n    disabled: $props.loading\n  }, \" 取消 \", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: $setup.handleCropUpload,\n    disabled: !$setup.selectedFile || $props.loading\n  }, _toDisplayString($props.loading ? '上传中...' : '确认'), 9 /* TEXT, PROPS */, _hoisted_12)])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","$props","modelValue","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","onClick","$setup","close","_createVNode","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","selectedFile","_hoisted_7","ref","type","accept","onChange","handleFileChange","triggerFileInput","onDrop","_withModifiers","handleDrop","onDragover","_cache","_hoisted_8","_Fragment","_hoisted_9","src","previewUrl","resetFile","_hoisted_10","disabled","loading","_hoisted_11","handleCropUpload","_hoisted_12"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/dialogs/AvatarUploadDialog.vue"],"sourcesContent":["<template>\n  <div v-if=\"modelValue\" class=\"modal-overlay\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h3>上传头像</h3>\n        <button class=\"close-btn\" @click=\"close\">\n          <XMarkIcon class=\"w-5 h-5\" />\n        </button>\n      </div>\n      \n      <div class=\"modal-body\">\n        <!-- 提示信息 -->\n        <div class=\"tips-box mb-4\">\n          <div class=\"flex items-start space-x-2\">\n            <InformationCircleIcon class=\"w-5 h-5 text-blue-500 flex-shrink-0 mt-0.5\" />\n            <div class=\"text-sm text-gray-600\">\n              <p class=\"font-medium text-gray-900 mb-1\">上传要求：</p>\n              <ul class=\"list-disc list-inside space-y-1\">\n                <li>请上传您的真实证件照</li>\n                <li>照片需要清晰、正面、免冠</li>\n                <li>建议尺寸 400x400 像素</li>\n                <li>支持 jpg、png 格式</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        <!-- 文件选择区域 -->\n        <div v-if=\"!selectedFile\" class=\"upload-area\">\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            accept=\"image/*\"\n            class=\"hidden\"\n            @change=\"handleFileChange\"\n          />\n          <div\n            class=\"drop-zone\"\n            @click=\"triggerFileInput\"\n            @drop.prevent=\"handleDrop\"\n            @dragover.prevent\n          >\n            <div class=\"text-center\">\n              <CameraIcon class=\"w-8 h-8 mx-auto text-gray-400\" />\n              <p class=\"mt-2 text-sm text-gray-500\">点击或拖拽图片到此处上传</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 裁切区域 -->\n        <div v-else class=\"cropper-container\">\n          <Cropper\n            ref=\"cropperRef\"\n            class=\"cropper\"\n            :src=\"previewUrl\"\n            :stencil-props=\"{\n              aspectRatio: 1,\n              minWidth: 400,\n              minHeight: 400\n            }\"\n            :default-size=\"{\n              width: 400,\n              height: 400\n            }\"\n            image-restriction=\"stencil\"\n            default-boundaries=\"fill\"\n            :resize-image=\"{\n              width: 800,\n              height: 800\n            }\"\n            background-class=\"bg-gray-100\"\n            :round-boundaries=\"true\"\n          />\n          <!-- 重新选择按钮 -->\n          <button \n            @click=\"resetFile\"\n            class=\"absolute top-2 right-2 px-2 py-1 text-xs bg-white/80 hover:bg-white text-gray-700 rounded shadow-sm transition-colors\"\n          >\n            重新选择\n          </button>\n        </div>\n      </div>\n\n      <div class=\"modal-footer\">\n        <button \n          class=\"btn btn-default\" \n          @click=\"close\"\n          :disabled=\"loading\"\n        >\n          取消\n        </button>\n        <button \n          class=\"btn btn-primary\" \n          @click=\"handleCropUpload\"\n          :disabled=\"!selectedFile || loading\"\n        >\n          {{ loading ? '上传中...' : '确认' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { CameraIcon, XMarkIcon, InformationCircleIcon } from '@heroicons/vue/24/outline'\nimport { Cropper } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css'\n\nconst props = defineProps({\n  modelValue: Boolean,\n  loading: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst fileInput = ref(null)\nconst selectedFile = ref(null)\nconst previewUrl = ref(null)\nconst cropperRef = ref(null)\n\nconst createPreview = (file) => {\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n  }\n  if (file) {\n    previewUrl.value = URL.createObjectURL(file)\n  }\n}\n\nconst triggerFileInput = () => {\n  fileInput.value?.click()\n}\n\nconst handleFileChange = (event) => {\n  const file = event.target.files[0]\n  if (file && file.type.startsWith('image/')) {\n    selectedFile.value = file\n    createPreview(file)\n  } else {\n    console.error('无效的文件类型:', file?.type)\n  }\n}\n\nconst handleDrop = (event) => {\n  const file = event.dataTransfer.files[0]\n  if (file && file.type.startsWith('image/')) {\n    selectedFile.value = file\n    createPreview(file)\n  }\n}\n\nconst resetFile = () => {\n  selectedFile.value = null\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n    previewUrl.value = null\n  }\n  if (fileInput.value) {\n    fileInput.value.value = ''\n  }\n}\n\nconst handleCropUpload = async () => {\n  if (!cropperRef.value || !selectedFile.value) return\n  \n  try {\n    const { canvas } = cropperRef.value.getResult()\n    \n    // 将 canvas 转换为 blob\n    const blob = await new Promise(resolve => {\n      canvas.toBlob(resolve, 'image/png')\n    })\n    \n    if (!blob) throw new Error('Failed to create blob')\n    \n    // 创建文件对象\n    const fileName = selectedFile.value.name.replace(/\\.[^/.]+$/, '') + '.png'\n    const croppedFile = new File([blob], fileName, { type: 'image/png' })\n    \n    // 发送文件\n    emit('upload', croppedFile)\n    \n  } catch (error) {\n    console.error('裁切失败:', error)\n  }\n}\n\nconst close = () => {\n  selectedFile.value = null\n  if (previewUrl.value) {\n    URL.revokeObjectURL(previewUrl.value)\n    previewUrl.value = null\n  }\n  emit('update:modelValue', false)\n}\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 50;\n}\n\n.modal-content {\n  position: relative;\n  width: 91.666667%;\n  max-width: 28rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-bottom: 1px solid #e5e7eb;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n}\n\n.modal-header h3 {\n  margin: 0;\n  color: #111827;\n  font-size: 1.125rem;\n  font-weight: 500;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  padding: 1rem 1.5rem;\n  background-color: #f9fafb;\n  border-top: 1px solid #e5e7eb;\n  border-bottom-left-radius: 0.5rem;\n  border-bottom-right-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.75rem;\n}\n\n.btn {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  border-radius: 0.375rem;\n  transition: all 0.15s ease-in-out;\n}\n\n.btn-default {\n  color: #374151;\n  background-color: white;\n  border: 1px solid #d1d5db;\n}\n\n.btn-default:not(:disabled):hover {\n  background-color: #f9fafb;\n}\n\n.btn-primary {\n  color: white;\n  background-color: #6366f1;\n  border: 1px solid transparent;\n}\n\n.btn-primary:not(:disabled):hover {\n  background-color: #4f46e5;\n}\n\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.close-btn {\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  padding: 0.25rem;\n  color: #6b7280;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 0.15s ease-in-out;\n}\n\n.close-btn:hover {\n  color: #374151;\n}\n\n.drop-zone {\n  border: 2px dashed #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 2rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  min-height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.drop-zone:hover {\n  border-color: #6366f1;\n  background-color: #f9fafb;\n}\n\n.cropper-container {\n  position: relative;\n  width: 100%;\n  height: 400px;\n  background-color: #f3f4f6;\n  border-radius: 0.5rem;\n  overflow: hidden;\n}\n\n.tips-box {\n  background-color: #f8fafc;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  padding: 1rem;\n}\n\n/* vue-advanced-cropper 样式 */\n.cropper {\n  height: 400px;\n  background-color: #f3f4f6;\n  border-radius: 0.5rem;\n  overflow: hidden;\n}\n\n/* 确保裁切区域正常显示 */\n:deep(.vue-advanced-cropper) {\n  background-color: #f3f4f6;\n}\n\n:deep(.vue-advanced-cropper__background) {\n  background-color: #f3f4f6;\n}\n\n:deep(.vue-advanced-cropper__foreground) {\n  border-radius: 0.5rem;\n  overflow: hidden;\n}\n\n:deep(.vue-advanced-cropper__stencil-wrapper) {\n  outline: none !important;\n}\n\n/* 优化裁切框样式 */\n:deep(.vue-advanced-cropper__stencil) {\n  border: 2px solid white;\n  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);\n}\n\n:deep(.vue-advanced-cropper__stencil-grid) {\n  border: none;\n}\n\n:deep(.vue-advanced-cropper__stencil-handler) {\n  background-color: white;\n  border-radius: 50%;\n  border: 2px solid white;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);\n}\n</style> "],"mappings":";;EAAAA,GAAA;EACyBC,KAAK,EAAC;;;EACtBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAc;;EAOpBA,KAAK,EAAC;AAAY;;EAEhBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAA4B;;EAbjDD,GAAA;EA4BkCC,KAAK,EAAC;;;EAcvBA,KAAK,EAAC;AAAa;;EAQhBA,KAAK,EAAC;AAAmB;;EAiClCA,KAAK,EAAC;AAAc;oBAnF/B;oBAAA;;SACaC,MAAA,CAAAC,UAAU,I,cAArBC,mBAAA,CAmGM,OAnGNC,UAmGM,GAlGJC,mBAAA,CAiGM,OAjGNC,UAiGM,GAhGJD,mBAAA,CAKM,OALNE,UAKM,G,0BAJJF,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAES;IAFDL,KAAK,EAAC,WAAW;IAAEQ,OAAK,EAAEC,MAAA,CAAAC;MAChCC,YAAA,CAA6BF,MAAA;IAAlBT,KAAK,EAAC;EAAS,G,KAI9BK,mBAAA,CAuEM,OAvENO,UAuEM,GAtEJC,mBAAA,UAAa,EACbR,mBAAA,CAaM,OAbNS,UAaM,GAZJT,mBAAA,CAWM,OAXNU,UAWM,GAVJJ,YAAA,CAA4EF,MAAA;IAArDT,KAAK,EAAC;EAA4C,I,0BACzEK,mBAAA,CAQM;IARDL,KAAK,EAAC;EAAuB,IAChCK,mBAAA,CAAmD;IAAhDL,KAAK,EAAC;EAAgC,GAAC,OAAK,GAC/CK,mBAAA,CAKK;IALDL,KAAK,EAAC;EAAiC,IACzCK,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAwB,YAApB,iBAAe,GACnBA,mBAAA,CAAsB,YAAlB,eAAa,E,4BAMzBQ,mBAAA,YAAe,E,CACHJ,MAAA,CAAAO,YAAY,I,cAAxBb,mBAAA,CAmBM,OAnBNc,UAmBM,GAlBJZ,mBAAA,CAME;IALAa,GAAG,EAAC,WAAW;IACfC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,SAAS;IAChBpB,KAAK,EAAC,QAAQ;IACbqB,QAAM,EAAEZ,MAAA,CAAAa;kDAEXjB,mBAAA,CAUM;IATJL,KAAK,EAAC,WAAW;IAChBQ,OAAK,EAAEC,MAAA,CAAAc,gBAAgB;IACvBC,MAAI,EAvCjBC,cAAA,CAuC2BhB,MAAA,CAAAiB,UAAU;IACxBC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAxCrBH,cAAA,CAwCY,QAAiB;MAEjBpB,mBAAA,CAGM,OAHNwB,UAGM,GAFJlB,YAAA,CAAoDF,MAAA;IAAxCT,KAAK,EAAC;EAA+B,I,0BACjDK,mBAAA,CAAsD;IAAnDL,KAAK,EAAC;EAA4B,GAAC,cAAY,qB,iDAMxDG,mBAAA,CA8BM2B,SAAA;IAhFd/B,GAAA;EAAA,IAiDQc,mBAAA,UAAa,EACbR,mBAAA,CA8BM,OA9BN0B,UA8BM,GA7BJpB,YAAA,CAqBEF,MAAA;IApBAS,GAAG,EAAC,YAAY;IAChBlB,KAAK,EAAC,SAAS;IACdgC,GAAG,EAAEvB,MAAA,CAAAwB,UAAU;IACf,eAAa,EAAE;;;;KAIf;IACA,cAAY,EAAE;;;KAGd;IACD,mBAAiB,EAAC,SAAS;IAC3B,oBAAkB,EAAC,MAAM;IACxB,cAAY,EAAE;;;KAGd;IACD,kBAAgB,EAAC,aAAa;IAC7B,kBAAgB,EAAE;oCAErBpB,mBAAA,YAAe,EACfR,mBAAA,CAKS;IAJNG,OAAK,EAAEC,MAAA,CAAAyB,SAAS;IACjBlC,KAAK,EAAC;KACP,QAED,E,uDAIJK,mBAAA,CAeM,OAfN8B,WAeM,GAdJ9B,mBAAA,CAMS;IALPL,KAAK,EAAC,iBAAiB;IACtBQ,OAAK,EAAEC,MAAA,CAAAC,KAAK;IACZ0B,QAAQ,EAAEnC,MAAA,CAAAoC;KACZ,MAED,iBA1FRC,WAAA,GA2FQjC,mBAAA,CAMS;IALPL,KAAK,EAAC,iBAAiB;IACtBQ,OAAK,EAAEC,MAAA,CAAA8B,gBAAgB;IACvBH,QAAQ,GAAG3B,MAAA,CAAAO,YAAY,IAAIf,MAAA,CAAAoC;sBAEzBpC,MAAA,CAAAoC,OAAO,0CAhGpBG,WAAA,E,SAAA3B,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
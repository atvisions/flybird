{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { PlusIcon, ArrowsUpDownIcon, ChevronDownIcon, FireIcon, ClockIcon, HandThumbUpIcon, ChatBubbleLeftIcon } from '@heroicons/vue/24/outline';\nexport default {\n  __name: 'TemplateNavigation',\n  props: {\n    currentCategory: {\n      type: String,\n      required: true\n    },\n    currentSort: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:currentCategory', 'update:currentSort'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const router = useRouter();\n    const route = useRoute();\n\n    // 判断是否在首页\n    const isHomePage = computed(() => {\n      return route.path === '/templates';\n    });\n\n    // 主导航数据\n    const mainNavs = [{\n      name: '全部模板',\n      path: '/templates'\n    }, {\n      name: '简历模板',\n      path: '/templates/resume'\n    }, {\n      name: '求职信',\n      path: '/templates/cover-letter'\n    }, {\n      name: '个人简介',\n      path: '/templates/bio'\n    }];\n\n    // 根据当前路由显示不同的分类选项\n    const currentCategories = computed(() => {\n      const path = route.path;\n      if (path.includes('resume')) {\n        return resumeCategories;\n      } else if (path.includes('cover-letter')) {\n        return coverLetterCategories;\n      } else if (path.includes('bio')) {\n        return bioCategories;\n      }\n      return allCategories;\n    });\n\n    // 处理分类变更\n    const handleCategoryChange = categoryId => {\n      emit('update:currentCategory', categoryId);\n    };\n\n    // 分类数据\n    const allCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'popular',\n      name: '最热门'\n    }, {\n      id: 'newest',\n      name: '最新'\n    }, {\n      id: 'recommended',\n      name: '推荐'\n    }];\n    const resumeCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'fresh',\n      name: '应届生'\n    }, {\n      id: 'intern',\n      name: '实习生'\n    }, {\n      id: 'tech',\n      name: '技术类'\n    }, {\n      id: 'design',\n      name: '设计类'\n    }, {\n      id: 'product',\n      name: '产品类'\n    }, {\n      id: 'operation',\n      name: '运营类'\n    }];\n    const coverLetterCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'job',\n      name: '求职信'\n    }, {\n      id: 'intern',\n      name: '实习信'\n    }, {\n      id: 'recommend',\n      name: '推荐信'\n    }, {\n      id: 'thank',\n      name: '感谢信'\n    }];\n    const bioCategories = [{\n      id: 'all',\n      name: '全部'\n    }, {\n      id: 'personal',\n      name: '个人简介'\n    }, {\n      id: 'project',\n      name: '项目简介'\n    }, {\n      id: 'team',\n      name: '团队简介'\n    }, {\n      id: 'company',\n      name: '公司简介'\n    }];\n\n    // 排序菜单状态\n    const showSortMenu = ref(false);\n\n    // 排序选项\n    const sortOptions = {\n      popular: {\n        label: '最受欢迎',\n        icon: FireIcon\n      },\n      newest: {\n        label: '最新发布',\n        icon: ClockIcon\n      },\n      comments: {\n        label: '最多评论',\n        icon: ChatBubbleLeftIcon\n      },\n      likes: {\n        label: '最多点赞',\n        icon: HandThumbUpIcon\n      }\n    };\n\n    // 处理排序\n    const handleSort = value => {\n      emit('update:currentSort', value);\n      showSortMenu.value = false;\n    };\n    const __returned__ = {\n      props,\n      emit,\n      router,\n      route,\n      isHomePage,\n      mainNavs,\n      currentCategories,\n      handleCategoryChange,\n      allCategories,\n      resumeCategories,\n      coverLetterCategories,\n      bioCategories,\n      showSortMenu,\n      sortOptions,\n      handleSort,\n      ref,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get ArrowsUpDownIcon() {\n        return ArrowsUpDownIcon;\n      },\n      get ChevronDownIcon() {\n        return ChevronDownIcon;\n      },\n      get FireIcon() {\n        return FireIcon;\n      },\n      get ClockIcon() {\n        return ClockIcon;\n      },\n      get HandThumbUpIcon() {\n        return HandThumbUpIcon;\n      },\n      get ChatBubbleLeftIcon() {\n        return ChatBubbleLeftIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRouter","useRoute","PlusIcon","ArrowsUpDownIcon","ChevronDownIcon","FireIcon","ClockIcon","HandThumbUpIcon","ChatBubbleLeftIcon","props","__props","emit","__emit","router","route","isHomePage","path","mainNavs","name","currentCategories","includes","resumeCategories","coverLetterCategories","bioCategories","allCategories","handleCategoryChange","categoryId","id","showSortMenu","sortOptions","popular","label","icon","newest","comments","likes","handleSort","value"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/resume/TemplateNavigation.vue"],"sourcesContent":["<template>\n  <!-- 主导航区域 -->\n  <div class=\"mt-6 bg-white rounded-xl border border-gray-100 p-4 hidden md:block mb-6\">\n    <div class=\"flex flex-col gap-4\">\n      <!-- 左侧主导航和右侧按钮 -->\n      <div class=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\n        <!-- 左侧主导航 -->\n        <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n          <router-link\n            v-for=\"nav in mainNavs\"\n            :key=\"nav.path\"\n            :to=\"nav.path\"\n            class=\"px-4 sm:px-8 py-3 mx-1 text-sm font-medium transition-colors relative group whitespace-nowrap\"\n            :class=\"[\n              $route.path === nav.path\n                ? 'text-gray-900'\n                : 'text-gray-500 hover:text-gray-700'\n            ]\"\n          >\n            {{ nav.name }}\n            <!-- 活跃状态指示器 -->\n            <div \n              class=\"absolute left-1/2 -translate-x-1/2 bottom-4.5 w-1.5 h-1.5 rounded-full transition-colors\"\n              :class=\"$route.path === nav.path ? 'bg-gray-900' : 'bg-transparent group-hover:bg-gray-200'\"\n            ></div>\n          </router-link>\n        </div>\n\n        <!-- 右侧操作按钮 -->\n        <div class=\"flex items-center gap-2 sm:gap-3\">\n          <button class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-rose-600 to-pink-600 text-white rounded-full hover:shadow-lg hover:shadow-rose-500/20 transition-all duration-300 text-sm font-medium flex items-center group\">\n            <PlusIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n            <span>创建简历</span>\n          </button>\n        </div>\n      </div>\n\n      <!-- 分隔线 -->\n      <div class=\"h-px bg-gray-200\"></div>\n      \n      <!-- 二级分类标签和排序 -->\n      <div class=\"flex items-center h-10\" :class=\"{ 'justify-between': !isHomePage }\">\n        <!-- 左侧分类标签 -->\n        <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\" :class=\"{ 'flex-1': isHomePage }\">\n          <button\n            v-for=\"category in currentCategories\"\n            :key=\"category.id\"\n            @click=\"handleCategoryChange(category.id)\"\n            class=\"h-10 px-4 mx-1 rounded-full text-sm font-medium transition-colors whitespace-nowrap flex items-center\"\n            :class=\"[\n              currentCategory === category.id\n                ? 'bg-gray-900 text-white'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            ]\"\n          >\n            {{ category.name }}\n          </button>\n        </div>\n\n        <!-- 右侧排序按钮 -->\n        <div v-if=\"!isHomePage\" class=\"relative flex-shrink-0 ml-4\">\n          <button \n            @click=\"showSortMenu = !showSortMenu\"\n            class=\"h-10 flex items-center px-4 bg-white border border-gray-200 rounded-lg text-sm font-medium hover:border-gray-300\"\n          >\n            <ArrowsUpDownIcon class=\"w-4 h-4 mr-2 text-gray-500\" />\n            {{ sortOptions[props.currentSort]?.label || '排序' }}\n            <ChevronDownIcon class=\"w-4 h-4 ml-2 text-gray-500\" />\n          </button>\n          \n          <div v-if=\"showSortMenu\"\n            class=\"absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-lg border border-gray-100 py-1 z-20\"\n          >\n            <button\n              v-for=\"(option, key) in sortOptions\"\n              :key=\"key\"\n              @click=\"handleSort(key)\"\n              class=\"w-full px-4 py-2 text-left text-sm hover:bg-gray-50 flex items-center\"\n              :class=\"{ 'text-gray-900 font-medium': props.currentSort === key, 'text-gray-600': props.currentSort !== key }\"\n            >\n              <component \n                :is=\"option.icon\" \n                class=\"w-4 h-4 mr-2\"\n                :class=\"props.currentSort === key ? 'text-gray-900' : 'text-gray-400'\"\n              />\n              {{ option.label }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { \n  PlusIcon, \n  ArrowsUpDownIcon, \n  ChevronDownIcon,\n  FireIcon,\n  ClockIcon,\n  HandThumbUpIcon,\n  ChatBubbleLeftIcon\n} from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  currentCategory: {\n    type: String,\n    required: true\n  },\n  currentSort: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:currentCategory', 'update:currentSort'])\n\nconst router = useRouter()\nconst route = useRoute()\n\n// 判断是否在首页\nconst isHomePage = computed(() => {\n  return route.path === '/templates'\n})\n\n// 主导航数据\nconst mainNavs = [\n  { name: '全部模板', path: '/templates' },\n  { name: '简历模板', path: '/templates/resume' },\n  { name: '求职信', path: '/templates/cover-letter' },\n  { name: '个人简介', path: '/templates/bio' }\n]\n\n// 根据当前路由显示不同的分类选项\nconst currentCategories = computed(() => {\n  const path = route.path\n  if (path.includes('resume')) {\n    return resumeCategories\n  } else if (path.includes('cover-letter')) {\n    return coverLetterCategories\n  } else if (path.includes('bio')) {\n    return bioCategories\n  }\n  return allCategories\n})\n\n// 处理分类变更\nconst handleCategoryChange = (categoryId) => {\n  emit('update:currentCategory', categoryId)\n}\n\n// 分类数据\nconst allCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'popular', name: '最热门' },\n  { id: 'newest', name: '最新' },\n  { id: 'recommended', name: '推荐' }\n]\n\nconst resumeCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'fresh', name: '应届生' },\n  { id: 'intern', name: '实习生' },\n  { id: 'tech', name: '技术类' },\n  { id: 'design', name: '设计类' },\n  { id: 'product', name: '产品类' },\n  { id: 'operation', name: '运营类' }\n]\n\nconst coverLetterCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'job', name: '求职信' },\n  { id: 'intern', name: '实习信' },\n  { id: 'recommend', name: '推荐信' },\n  { id: 'thank', name: '感谢信' }\n]\n\nconst bioCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'personal', name: '个人简介' },\n  { id: 'project', name: '项目简介' },\n  { id: 'team', name: '团队简介' },\n  { id: 'company', name: '公司简介' }\n]\n\n// 排序菜单状态\nconst showSortMenu = ref(false)\n\n// 排序选项\nconst sortOptions = {\n  popular: { label: '最受欢迎', icon: FireIcon },\n  newest: { label: '最新发布', icon: ClockIcon },\n  comments: { label: '最多评论', icon: ChatBubbleLeftIcon },\n  likes: { label: '最多点赞', icon: HandThumbUpIcon }\n}\n\n// 处理排序\nconst handleSort = (value) => {\n  emit('update:currentSort', value)\n  showSortMenu.value = false\n}\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
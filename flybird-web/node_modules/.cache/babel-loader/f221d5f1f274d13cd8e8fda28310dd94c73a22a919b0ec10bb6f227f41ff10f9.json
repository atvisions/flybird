{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport { formatTime } from '@/utils/time';\nimport { showToast } from '@/components/ToastMessage';\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue';\nimport { ChevronUpDownIcon, CheckIcon, CodeBracketIcon, ServerIcon, DevicePhoneMobileIcon, ChartBarIcon, DatabaseIcon, CpuChipIcon, BeakerIcon, PhotoIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nconst AUTOSAVE_INTERVAL = 30000; // 30秒\nconst DRAFT_KEY = 'article_draft';\n\n// 分类数据\n\nexport default {\n  __name: 'ArticleForm',\n  props: {\n    modelValue: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['update:modelValue', 'submit'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 编辑器实例\n    const editorRef = ref(null);\n\n    // 编辑器配置\n    const editorConfig = {\n      placeholder: '开始写作...',\n      MENU_CONF: {}\n    };\n\n    // 工具栏配置\n    const toolbarConfig = {\n      excludeKeys: ['group-video', 'insertTable', 'codeBlock', 'fullScreen']\n    };\n\n    // 表单数据\n    const form = ref({\n      title: '',\n      category: '',\n      content: '',\n      tags: [],\n      cover: '',\n      summary: '',\n      isPublic: true,\n      allowComment: true\n    });\n\n    // 最后保存时间\n    const lastSaveTime = ref(null);\n\n    // 自动保存相关\n    let autoSaveTimer = null;\n    const categories = [{\n      id: 'frontend',\n      name: '前端开发',\n      icon: CodeBracketIcon\n    }, {\n      id: 'backend',\n      name: '后端开发',\n      icon: ServerIcon\n    }, {\n      id: 'mobile',\n      name: '移动开发',\n      icon: DevicePhoneMobileIcon\n    }, {\n      id: 'algorithm',\n      name: '算法',\n      icon: ChartBarIcon\n    }, {\n      id: 'database',\n      name: '数据库',\n      icon: DatabaseIcon\n    }, {\n      id: 'devops',\n      name: '运维',\n      icon: CpuChipIcon\n    }, {\n      id: 'ai',\n      name: '人工智能',\n      icon: BeakerIcon\n    }];\n\n    // 选中的分类\n    const selectedCategory = ref(categories[0]);\n\n    // 监听分类变化\n    watch(selectedCategory, category => {\n      form.value.category = category.id;\n    });\n\n    // 处理封面图片上传\n    const handleCoverChange = e => {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n\n      // 验证文件大小（2MB）\n      if (file.size > 2 * 1024 * 1024) {\n        showToast('图片大小不能超过 2MB', 'error');\n        return;\n      }\n\n      // 读取文件预览\n      const reader = new FileReader();\n      reader.onload = e => {\n        form.value.cover = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 移除封面图片\n    const removeCover = () => {\n      form.value.cover = '';\n    };\n\n    // 保存草稿\n    const saveDraft = () => {\n      // 获取编辑器内容\n      const editorContent = editorRef.value?.getHtml() || '';\n\n      // 保存所有表单数据和编辑器内容\n      const draftData = _objectSpread(_objectSpread({}, form.value), {}, {\n        editorContent,\n        selectedCategory: selectedCategory.value // 保存选中的分类对象\n      });\n\n      // 保存到 localStorage\n      localStorage.setItem(DRAFT_KEY, JSON.stringify(draftData));\n      lastSaveTime.value = new Date();\n      showToast('已自动保存草稿', 'info');\n    };\n\n    // 加载草稿\n    const loadDraft = () => {\n      const draft = localStorage.getItem(DRAFT_KEY);\n      if (draft) {\n        try {\n          const draftData = JSON.parse(draft);\n          // 先设置编辑器内容\n          if (editorRef.value && draftData.editorContent) {\n            editorRef.value.setHtml(draftData.editorContent);\n          }\n\n          // 恢复表单数据\n          form.value = {\n            title: draftData.title || '',\n            category: draftData.category || '',\n            content: draftData.editorContent || '',\n            tags: draftData.tags || [],\n            cover: draftData.cover || '',\n            summary: draftData.summary || '',\n            isPublic: draftData.isPublic ?? true,\n            allowComment: draftData.allowComment ?? true\n          };\n\n          // 恢复选中的分类\n          if (draftData.selectedCategory) {\n            selectedCategory.value = draftData.selectedCategory;\n          }\n          lastSaveTime.value = new Date();\n          showToast('已恢复上次编辑的内容', 'info');\n        } catch (error) {\n          console.error('加载草稿失败:', error);\n        }\n      }\n    };\n\n    // 清除草稿\n    const clearDraft = () => {\n      localStorage.removeItem(DRAFT_KEY);\n    };\n\n    // 开始自动保存\n    const startAutoSave = () => {\n      stopAutoSave();\n      autoSaveTimer = setInterval(saveDraft, AUTOSAVE_INTERVAL);\n    };\n\n    // 停止自动保存\n    const stopAutoSave = () => {\n      if (autoSaveTimer) {\n        clearInterval(autoSaveTimer);\n        autoSaveTimer = null;\n      }\n    };\n\n    // 编辑器创建完成\n    const handleCreated = editor => {\n      editorRef.value = editor;\n      // 编辑器创建完成后加载草稿\n      loadDraft();\n    };\n\n    // 编辑器内容变化\n    const handleChange = () => {\n      if (editorRef.value) {\n        const html = editorRef.value.getHtml();\n        form.value.content = html;\n      }\n      emit('update:modelValue', form.value);\n    };\n\n    // 提交表单\n    const handleSubmit = () => {\n      // 表单验证\n      if (!form.value.title) {\n        showToast('请输入文章标题', 'warning');\n        return;\n      }\n      if (!form.value.category) {\n        showToast('请选择文章分类', 'warning');\n        return;\n      }\n      if (!form.value.content) {\n        showToast('请输入文章内容', 'warning');\n        return;\n      }\n      emit('submit', form.value);\n    };\n\n    // 监听父组件数据变化\n    watch(() => props.modelValue, newVal => {\n      if (newVal && Object.keys(newVal).length > 0) {\n        form.value = _objectSpread({}, newVal);\n      }\n    }, {\n      deep: true\n    });\n    onMounted(() => {\n      startAutoSave();\n    });\n    onBeforeUnmount(() => {\n      stopAutoSave();\n      saveDraft(); // 最后保存一次\n      if (editorRef.value) {\n        editorRef.value.destroy();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      editorRef,\n      editorConfig,\n      toolbarConfig,\n      form,\n      lastSaveTime,\n      get autoSaveTimer() {\n        return autoSaveTimer;\n      },\n      set autoSaveTimer(v) {\n        autoSaveTimer = v;\n      },\n      AUTOSAVE_INTERVAL,\n      DRAFT_KEY,\n      categories,\n      selectedCategory,\n      handleCoverChange,\n      removeCover,\n      saveDraft,\n      loadDraft,\n      clearDraft,\n      startAutoSave,\n      stopAutoSave,\n      handleCreated,\n      handleChange,\n      handleSubmit,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      get Editor() {\n        return Editor;\n      },\n      get Toolbar() {\n        return Toolbar;\n      },\n      get formatTime() {\n        return formatTime;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get Listbox() {\n        return Listbox;\n      },\n      get ListboxButton() {\n        return ListboxButton;\n      },\n      get ListboxOptions() {\n        return ListboxOptions;\n      },\n      get ListboxOption() {\n        return ListboxOption;\n      },\n      get ChevronUpDownIcon() {\n        return ChevronUpDownIcon;\n      },\n      get CheckIcon() {\n        return CheckIcon;\n      },\n      get CodeBracketIcon() {\n        return CodeBracketIcon;\n      },\n      get ServerIcon() {\n        return ServerIcon;\n      },\n      get DevicePhoneMobileIcon() {\n        return DevicePhoneMobileIcon;\n      },\n      get ChartBarIcon() {\n        return ChartBarIcon;\n      },\n      get DatabaseIcon() {\n        return DatabaseIcon;\n      },\n      get CpuChipIcon() {\n        return CpuChipIcon;\n      },\n      get BeakerIcon() {\n        return BeakerIcon;\n      },\n      get PhotoIcon() {\n        return PhotoIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","onBeforeUnmount","Editor","Toolbar","formatTime","showToast","Listbox","ListboxButton","ListboxOptions","ListboxOption","ChevronUpDownIcon","CheckIcon","CodeBracketIcon","ServerIcon","DevicePhoneMobileIcon","ChartBarIcon","DatabaseIcon","CpuChipIcon","BeakerIcon","PhotoIcon","XMarkIcon","AUTOSAVE_INTERVAL","DRAFT_KEY","props","__props","emit","__emit","editorRef","editorConfig","placeholder","MENU_CONF","toolbarConfig","excludeKeys","form","title","category","content","tags","cover","summary","isPublic","allowComment","lastSaveTime","autoSaveTimer","categories","id","name","icon","selectedCategory","value","handleCoverChange","e","file","target","files","type","startsWith","size","reader","FileReader","onload","result","readAsDataURL","removeCover","saveDraft","editorContent","getHtml","draftData","_objectSpread","localStorage","setItem","JSON","stringify","Date","loadDraft","draft","getItem","parse","setHtml","error","console","clearDraft","removeItem","startAutoSave","stopAutoSave","setInterval","clearInterval","handleCreated","editor","handleChange","html","handleSubmit","modelValue","newVal","Object","keys","length","deep","destroy"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/components/ArticleForm.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-6 p-4 lg:p-6 pb-24\">\n    <!-- 标题 -->\n    <div>\n      <input\n        type=\"text\"\n        v-model=\"form.title\"\n        class=\"block w-full text-xl font-medium border-0 focus:ring-0 p-0\"\n        placeholder=\"输入文章标题...\"\n      >\n    </div>\n\n    <!-- 分类 -->\n    <div>\n      <label class=\"block text-sm font-medium text-gray-700 mb-2\">文章分类</label>\n      <Listbox v-model=\"selectedCategory\">\n        <div class=\"relative\">\n          <ListboxButton\n            class=\"relative w-full cursor-pointer rounded-lg bg-white py-2.5 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus:ring-2 focus:ring-violet-500 sm:text-sm\"\n          >\n            <span class=\"flex items-center\">\n              <component \n                :is=\"selectedCategory.icon\" \n                class=\"h-5 w-5 flex-shrink-0 text-gray-400\"\n                aria-hidden=\"true\"\n              />\n              <span class=\"ml-3 block truncate\">{{ selectedCategory.name }}</span>\n            </span>\n            <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n              <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n            </span>\n          </ListboxButton>\n\n          <Transition\n            leave-active-class=\"transition duration-100 ease-in\"\n            leave-from-class=\"opacity-100\"\n            leave-to-class=\"opacity-0\"\n          >\n            <ListboxOptions\n              class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n            >\n              <ListboxOption\n                v-for=\"category in categories\"\n                :key=\"category.id\"\n                :value=\"category\"\n                v-slot=\"{ active, selected }\"\n                as=\"template\"\n              >\n                <li\n                  :class=\"[\n                    active ? 'bg-violet-600 text-white' : 'text-gray-900',\n                    'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                  ]\"\n                >\n                  <div class=\"flex items-center\">\n                    <component \n                      :is=\"category.icon\" \n                      :class=\"[\n                        active ? 'text-white' : 'text-gray-400',\n                        'h-5 w-5 flex-shrink-0'\n                      ]\"\n                      aria-hidden=\"true\"\n                    />\n                    <span\n                      :class=\"[\n                        selected ? 'font-semibold' : 'font-normal',\n                        'ml-3 block truncate'\n                      ]\"\n                    >\n                      {{ category.name }}\n                    </span>\n                  </div>\n\n                  <span\n                    v-if=\"selected\"\n                    :class=\"[\n                      active ? 'text-white' : 'text-violet-600',\n                      'absolute inset-y-0 right-0 flex items-center pr-4'\n                    ]\"\n                  >\n                    <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </span>\n                </li>\n              </ListboxOption>\n            </ListboxOptions>\n          </Transition>\n        </div>\n      </Listbox>\n    </div>\n\n    <!-- 缩略图 -->\n    <div>\n      <label class=\"block text-sm font-medium text-gray-700 mb-2\">文章封面</label>\n      <div class=\"flex items-center gap-4\">\n        <div \n          class=\"relative w-48 h-32 rounded-lg border-2 border-dashed border-gray-300 hover:border-violet-500 transition-colors overflow-hidden group\"\n          :class=\"{ 'border-solid border-violet-500': form.cover }\"\n        >\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            class=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10\"\n            @change=\"handleCoverChange\"\n          >\n          <div v-if=\"!form.cover\" class=\"absolute inset-0 flex flex-col items-center justify-center text-gray-400 group-hover:text-violet-500\">\n            <PhotoIcon class=\"w-8 h-8 mb-1\" />\n            <span class=\"text-xs\">点击上传封面</span>\n          </div>\n          <img \n            v-else \n            :src=\"form.cover\" \n            class=\"w-full h-full object-cover\"\n            alt=\"\"\n          >\n          <button \n            v-if=\"form.cover\"\n            type=\"button\"\n            class=\"absolute top-2 right-2 p-1 bg-black/50 rounded-full text-white opacity-0 group-hover:opacity-100 transition-opacity\"\n            @click.stop=\"removeCover\"\n          >\n            <XMarkIcon class=\"w-4 h-4\" />\n          </button>\n        </div>\n        <div class=\"flex-1 text-sm text-gray-500\">\n          <p>建议尺寸：1200x675 像素</p>\n          <p>支持 jpg、png 格式，最大 2MB</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- 文章摘要 -->\n    <div>\n      <label class=\"block text-sm font-medium text-gray-700 mb-2\">文章摘要</label>\n      <textarea\n        v-model=\"form.summary\"\n        rows=\"3\"\n        class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n        placeholder=\"写一段简短的介绍，会显示在文章列表中\"\n      ></textarea>\n    </div>\n\n    <!-- 编辑器 -->\n    <div>\n      <Toolbar\n        style=\"border-bottom: 1px solid #ccc\"\n        :editor=\"editorRef\"\n        :defaultConfig=\"toolbarConfig\"\n        mode=\"default\"\n      />\n      <Editor\n        v-model=\"form.content\"\n        style=\"height: 500px; overflow-y: hidden;\"\n        :defaultConfig=\"editorConfig\"\n        mode=\"default\"\n        @onCreated=\"handleCreated\"\n        @onChange=\"handleChange\"\n      />\n    </div>\n  </div>\n\n  <!-- 底部按钮 -->\n  <div class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-4 z-50\">\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex items-center justify-between\">\n        <span class=\"text-sm text-gray-500\">{{ lastSaveTime ? `上次保存: ${formatTime(lastSaveTime)}` : '文章将自动保存' }}</span>\n        <div class=\"flex items-center gap-4\">\n          <button \n            class=\"px-6 h-10 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors\"\n            @click=\"$router.back()\"\n          >\n            取消\n          </button>\n          <button \n            class=\"px-6 h-10 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n            @click=\"handleSubmit\"\n          >\n            发布文章\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from 'vue'\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue'\nimport { formatTime } from '@/utils/time'\nimport { showToast } from '@/components/ToastMessage'\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue'\nimport { \n  ChevronUpDownIcon, \n  CheckIcon,\n  CodeBracketIcon,\n  ServerIcon,\n  DevicePhoneMobileIcon,\n  ChartBarIcon,\n  DatabaseIcon,\n  CpuChipIcon,\n  BeakerIcon,\n  PhotoIcon,\n  XMarkIcon\n} from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'submit'])\n\n// 编辑器实例\nconst editorRef = ref(null)\n\n// 编辑器配置\nconst editorConfig = {\n  placeholder: '开始写作...',\n  MENU_CONF: {}\n}\n\n// 工具栏配置\nconst toolbarConfig = {\n  excludeKeys: [\n    'group-video',\n    'insertTable',\n    'codeBlock',\n    'fullScreen'\n  ]\n}\n\n// 表单数据\nconst form = ref({\n  title: '',\n  category: '',\n  content: '',\n  tags: [],\n  cover: '',\n  summary: '',\n  isPublic: true,\n  allowComment: true\n})\n\n// 最后保存时间\nconst lastSaveTime = ref(null)\n\n// 自动保存相关\nlet autoSaveTimer = null\nconst AUTOSAVE_INTERVAL = 30000 // 30秒\nconst DRAFT_KEY = 'article_draft'\n\n// 分类数据\nconst categories = [\n  { id: 'frontend', name: '前端开发', icon: CodeBracketIcon },\n  { id: 'backend', name: '后端开发', icon: ServerIcon },\n  { id: 'mobile', name: '移动开发', icon: DevicePhoneMobileIcon },\n  { id: 'algorithm', name: '算法', icon: ChartBarIcon },\n  { id: 'database', name: '数据库', icon: DatabaseIcon },\n  { id: 'devops', name: '运维', icon: CpuChipIcon },\n  { id: 'ai', name: '人工智能', icon: BeakerIcon }\n]\n\n// 选中的分类\nconst selectedCategory = ref(categories[0])\n\n// 监听分类变化\nwatch(selectedCategory, (category) => {\n  form.value.category = category.id\n})\n\n// 处理封面图片上传\nconst handleCoverChange = (e) => {\n  const file = e.target.files[0]\n  if (!file) return\n\n  // 验证文件类型\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n\n  // 验证文件大小（2MB）\n  if (file.size > 2 * 1024 * 1024) {\n    showToast('图片大小不能超过 2MB', 'error')\n    return\n  }\n\n  // 读取文件预览\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    form.value.cover = e.target.result\n  }\n  reader.readAsDataURL(file)\n}\n\n// 移除封面图片\nconst removeCover = () => {\n  form.value.cover = ''\n}\n\n// 保存草稿\nconst saveDraft = () => {\n  // 获取编辑器内容\n  const editorContent = editorRef.value?.getHtml() || ''\n  \n  // 保存所有表单数据和编辑器内容\n  const draftData = {\n    ...form.value,\n    editorContent,\n    selectedCategory: selectedCategory.value // 保存选中的分类对象\n  }\n  \n  // 保存到 localStorage\n  localStorage.setItem(DRAFT_KEY, JSON.stringify(draftData))\n  lastSaveTime.value = new Date()\n  showToast('已自动保存草稿', 'info')\n}\n\n// 加载草稿\nconst loadDraft = () => {\n  const draft = localStorage.getItem(DRAFT_KEY)\n  if (draft) {\n    try {\n      const draftData = JSON.parse(draft)\n      // 先设置编辑器内容\n      if (editorRef.value && draftData.editorContent) {\n        editorRef.value.setHtml(draftData.editorContent)\n      }\n      \n      // 恢复表单数据\n      form.value = {\n        title: draftData.title || '',\n        category: draftData.category || '',\n        content: draftData.editorContent || '',\n        tags: draftData.tags || [],\n        cover: draftData.cover || '',\n        summary: draftData.summary || '',\n        isPublic: draftData.isPublic ?? true,\n        allowComment: draftData.allowComment ?? true\n      }\n\n      // 恢复选中的分类\n      if (draftData.selectedCategory) {\n        selectedCategory.value = draftData.selectedCategory\n      }\n\n      lastSaveTime.value = new Date()\n      showToast('已恢复上次编辑的内容', 'info')\n    } catch (error) {\n      console.error('加载草稿失败:', error)\n    }\n  }\n}\n\n// 清除草稿\nconst clearDraft = () => {\n  localStorage.removeItem(DRAFT_KEY)\n}\n\n// 开始自动保存\nconst startAutoSave = () => {\n  stopAutoSave()\n  autoSaveTimer = setInterval(saveDraft, AUTOSAVE_INTERVAL)\n}\n\n// 停止自动保存\nconst stopAutoSave = () => {\n  if (autoSaveTimer) {\n    clearInterval(autoSaveTimer)\n    autoSaveTimer = null\n  }\n}\n\n// 编辑器创建完成\nconst handleCreated = (editor) => {\n  editorRef.value = editor\n  // 编辑器创建完成后加载草稿\n  loadDraft()\n}\n\n// 编辑器内容变化\nconst handleChange = () => {\n  if (editorRef.value) {\n    const html = editorRef.value.getHtml()\n    form.value.content = html\n  }\n  emit('update:modelValue', form.value)\n}\n\n// 提交表单\nconst handleSubmit = () => {\n  // 表单验证\n  if (!form.value.title) {\n    showToast('请输入文章标题', 'warning')\n    return\n  }\n  if (!form.value.category) {\n    showToast('请选择文章分类', 'warning')\n    return\n  }\n  if (!form.value.content) {\n    showToast('请输入文章内容', 'warning')\n    return\n  }\n\n  emit('submit', form.value)\n}\n\n// 监听父组件数据变化\nwatch(\n  () => props.modelValue,\n  (newVal) => {\n    if (newVal && Object.keys(newVal).length > 0) {\n      form.value = { ...newVal }\n    }\n  },\n  { deep: true }\n)\n\nonMounted(() => {\n  startAutoSave()\n})\n\nonBeforeUnmount(() => {\n  stopAutoSave()\n  saveDraft() // 最后保存一次\n  if (editorRef.value) {\n    editorRef.value.destroy()\n  }\n})\n</script>\n\n<style src=\"@wangeditor/editor/dist/css/style.css\"></style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
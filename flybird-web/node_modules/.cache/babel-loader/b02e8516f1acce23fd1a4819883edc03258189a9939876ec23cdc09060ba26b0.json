{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"component-panel\"\n};\nconst _hoisted_2 = {\n  class: \"panel-content\"\n};\nconst _hoisted_3 = {\n  class: \"component-list\"\n};\nconst _hoisted_4 = [\"onDragstart\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\");\n  const _component_el_collapse = _resolveComponent(\"el-collapse\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    class: \"panel-header\"\n  }, [_createElementVNode(\"h3\", null, \"组件库\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_collapse, {\n    modelValue: $setup.activeCategories,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.activeCategories = $event)\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.componentCategories, (components, category) => {\n      return _openBlock(), _createBlock(_component_el_collapse_item, {\n        key: category,\n        title: $setup.getCategoryLabel(category),\n        name: category\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(components, component => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: component.type,\n            class: \"component-item\",\n            draggable: \"true\",\n            onDragstart: $event => $setup.handleDragStart($event, component),\n            onClick: $event => _ctx.$emit('add-component', component)\n          }, [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent(component.icon)))]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"span\", null, _toDisplayString(component.name), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_4);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"title\", \"name\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_collapse","modelValue","$setup","activeCategories","_cache","$event","default","_withCtx","_Fragment","_renderList","componentCategories","components","category","_createBlock","_component_el_collapse_item","key","title","getCategoryLabel","name","_hoisted_3","component","type","draggable","onDragstart","handleDragStart","onClick","_ctx","$emit","_component_el_icon","_resolveDynamicComponent","icon","_","_toDisplayString","_hoisted_4"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/panels/ComponentPanel.vue"],"sourcesContent":["<template>\n  <div class=\"component-panel\">\n    <div class=\"panel-header\">\n      <h3>组件库</h3>\n    </div>\n    \n    <div class=\"panel-content\">\n      <el-collapse v-model=\"activeCategories\">\n        <el-collapse-item\n          v-for=\"(components, category) in componentCategories\"\n          :key=\"category\"\n          :title=\"getCategoryLabel(category)\"\n          :name=\"category\"\n        >\n          <div class=\"component-list\">\n            <div\n              v-for=\"component in components\"\n              :key=\"component.type\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\"\n              @click=\"$emit('add-component', component)\"\n            >\n              <el-icon><component :is=\"component.icon\" /></el-icon>\n              <span>{{ component.name }}</span>\n            </div>\n          </div>\n        </el-collapse-item>\n      </el-collapse>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useComponentStore } from '../../store/component'\n\nconst props = defineProps({\n  components: {\n    type: Array,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['add-component'])\n\n// 组件分类\nconst componentStore = useComponentStore()\nconst componentCategories = computed(() => componentStore.componentCategories)\n\n// 当前展开的分类\nconst activeCategories = ref(['basic', 'content'])\n\n// 获取分类标签\nconst getCategoryLabel = (category) => {\n  const labels = {\n    'basic': '基础组件',\n    'content': '内容组件',\n    'layout': '布局组件',\n    'display': '展示组件',\n    'custom': '自定义组件'\n  }\n  return labels[category] || category\n}\n\n// 处理拖拽开始\nconst handleDragStart = (event, component) => {\n  event.dataTransfer.setData('component', JSON.stringify(component))\n  event.dataTransfer.effectAllowed = 'copy'\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.component-panel {\n  @apply w-64 border-r border-gray-200 flex flex-col;\n  \n  .panel-header {\n    @apply h-12 px-4 flex items-center border-b border-gray-200;\n    \n    h3 {\n      @apply text-lg font-medium;\n    }\n  }\n  \n  .panel-content {\n    @apply flex-1 overflow-y-auto p-4;\n    \n    .component-list {\n      @apply grid grid-cols-2 gap-2;\n    }\n    \n    .component-item {\n      @apply flex flex-col items-center justify-center p-2 rounded cursor-pointer hover:bg-gray-100;\n      \n      .el-icon {\n        @apply text-2xl mb-1;\n      }\n      \n      span {\n        @apply text-sm text-gray-600;\n      }\n    }\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAKrBA,KAAK,EAAC;AAAe;;EAQfA,KAAK,EAAC;AAAgB;mBAdrC;;;;;uBACEC,mBAAA,CA6BM,OA7BNC,UA6BM,G,0BA5BJC,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAc,IACvBG,mBAAA,CAAY,YAAR,KAAG,E,sBAGTA,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,YAAA,CAqBcC,sBAAA;IA5BpBC,UAAA,EAO4BC,MAAA,CAAAC,gBAAgB;IAP5C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO4BH,MAAA,CAAAC,gBAAgB,GAAAE,MAAA;;IAP5CC,OAAA,EAAAC,QAAA,CASU,MAAqD,E,kBADvDZ,mBAAA,CAmBmBa,SAAA,QA3B3BC,WAAA,CAS2CP,MAAA,CAAAQ,mBAAmB,EAT9D,CASkBC,UAAU,EAAEC,QAAQ;2BAD9BC,YAAA,CAmBmBC,2BAAA;QAjBhBC,GAAG,EAAEH,QAAQ;QACbI,KAAK,EAAEd,MAAA,CAAAe,gBAAgB,CAACL,QAAQ;QAChCM,IAAI,EAAEN;;QAZjBN,OAAA,EAAAC,QAAA,CAcU,MAYM,CAZNV,mBAAA,CAYM,OAZNsB,UAYM,I,kBAXJxB,mBAAA,CAUMa,SAAA,QAzBlBC,WAAA,CAgBkCE,UAAU,EAAvBS,SAAS;+BADlBzB,mBAAA,CAUM;YARHoB,GAAG,EAAEK,SAAS,CAACC,IAAI;YACpB3B,KAAK,EAAC,gBAAgB;YACtB4B,SAAS,EAAC,MAAM;YACfC,WAAS,EAAAlB,MAAA,IAAEH,MAAA,CAAAsB,eAAe,CAACnB,MAAM,EAAEe,SAAS;YAC5CK,OAAK,EAAApB,MAAA,IAAEqB,IAAA,CAAAC,KAAK,kBAAkBP,SAAS;cAExCrB,YAAA,CAAqD6B,kBAAA;YAvBnEtB,OAAA,EAAAC,QAAA,CAuBuB,MAAkC,E,cAAlCM,YAAA,CAAkCgB,wBAvBzD,CAuBuCT,SAAS,CAACU,IAAI,I;YAvBrDC,CAAA;wCAwBclC,mBAAA,CAAiC,cAAAmC,gBAAA,CAAxBZ,SAAS,CAACF,IAAI,iB,kCAxBrCe,UAAA;;QAAAF,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
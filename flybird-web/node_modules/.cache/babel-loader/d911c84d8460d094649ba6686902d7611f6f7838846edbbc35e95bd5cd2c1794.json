{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, watch, onMounted } from 'vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'SaveTemplateDialog',\n  props: {\n    modelValue: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:modelValue', 'save'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 表单数据\n    const form = ref(null);\n    const valid = ref(false);\n    const loading = ref(false);\n    const formData = ref({\n      name: '',\n      category: null,\n      thumbnail: null,\n      description: '',\n      is_vip: false\n    });\n\n    // 模板分类\n    const templateStore = useTemplateStore();\n    const categories = ref([]);\n\n    // 获取分类数据\n    const fetchCategories = async () => {\n      try {\n        loading.value = true;\n        const response = await templateStore.getCategories();\n        console.log('获取到的分类数据:', response);\n        if (response && response.data) {\n          categories.value = response.data;\n          console.log('设置的分类数据:', categories.value);\n        } else {\n          console.error('获取分类失败: 无数据');\n          categories.value = [];\n        }\n      } catch (error) {\n        console.error('获取分类出错:', error);\n        categories.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 监听对话框显示状态\n    watch(() => props.modelValue, async val => {\n      if (val) {\n        // 每次打开对话框时都重新获取分类\n        await fetchCategories();\n      }\n      if (!val) {\n        // 重置表单\n        form.value?.reset();\n        formData.value = {\n          name: '',\n          category: null,\n          thumbnail: null,\n          description: '',\n          is_vip: false\n        };\n        valid.value = false;\n      }\n    });\n\n    // 处理文件变化\n    const handleFileChange = async files => {\n      if (files && files.length > 0) {\n        const file = files[0];\n        if (file.size > 2000000) {\n          formData.value.thumbnail = null;\n          return;\n        }\n      }\n      await validateForm();\n    };\n\n    // 手动验证表单\n    const validateForm = async () => {\n      if (form.value) {\n        const {\n          valid: isValid\n        } = await form.value.validate();\n        valid.value = isValid;\n      }\n    };\n\n    // 监听表单数据变化\n    watch(formData, async () => {\n      await validateForm();\n    }, {\n      deep: true\n    });\n\n    // 保存模板\n    const handleSave = async () => {\n      await validateForm();\n      if (!valid.value) return;\n      loading.value = true;\n      try {\n        // 检查必填字段\n        if (!formData.value.category) {\n          throw new Error('请选择分类');\n        }\n        if (!formData.value.thumbnail) {\n          throw new Error('请上传缩略图');\n        }\n\n        // 转换布尔值为字符串\n        const data = _objectSpread(_objectSpread({}, formData.value), {}, {\n          is_vip: formData.value.is_vip.toString()\n        });\n        emit('save', data);\n      } catch (error) {\n        console.error('保存失败:', error);\n        throw error;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 初始化时获取分类数据\n    onMounted(() => {\n      if (props.modelValue) {\n        fetchCategories();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      form,\n      valid,\n      loading,\n      formData,\n      templateStore,\n      categories,\n      fetchCategories,\n      handleFileChange,\n      validateForm,\n      handleSave,\n      ref,\n      watch,\n      onMounted,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","useTemplateStore","props","__props","emit","__emit","form","valid","loading","formData","name","category","thumbnail","description","is_vip","templateStore","categories","fetchCategories","value","response","getCategories","console","log","data","error","modelValue","val","reset","handleFileChange","files","length","file","size","validateForm","isValid","validate","deep","handleSave","Error","_objectSpread","toString"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/SaveTemplateDialog.vue"],"sourcesContent":["<template>\n  <v-dialog\n    :model-value=\"modelValue\"\n    @update:model-value=\"$emit('update:modelValue', $event)\"\n    max-width=\"600\"\n    persistent\n  >\n    <v-card>\n      <v-card-title class=\"text-h5\">保存为模板</v-card-title>\n      <v-card-text>\n        <v-form ref=\"form\" v-model=\"valid\">\n          <v-text-field\n            v-model=\"formData.name\"\n            label=\"模板名称\"\n            :rules=\"[v => !!v || '请输入模板名称']\"\n            required\n            validate-on=\"input\"\n          ></v-text-field>\n\n          <v-select\n            v-if=\"categories.length > 0\"\n            v-model=\"formData.category\"\n            :items=\"categories\"\n            item-title=\"name\"\n            item-value=\"id\"\n            label=\"选择分类\"\n            :rules=\"[v => !!v || '请选择分类']\"\n            required\n            validate-on=\"input\"\n          ></v-select>\n\n          <v-file-input\n            v-model=\"formData.thumbnail\"\n            label=\"缩略图\"\n            accept=\"image/*\"\n            :rules=\"[\n              v => !!v || '请上传缩略图',\n              v => !v || !v.length || v[0].size < 2000000 || '图片大小不能超过2MB'\n            ]\"\n            required\n            validate-on=\"input\"\n            @change=\"handleFileChange\"\n            show-size\n            prepend-icon=\"mdi-camera\"\n          ></v-file-input>\n\n          <v-textarea\n            v-model=\"formData.description\"\n            label=\"模板描述\"\n            :rules=\"[v => !!v || '请输入模板描述']\"\n            required\n            validate-on=\"input\"\n          ></v-textarea>\n\n          <v-switch\n            v-model=\"formData.is_vip\"\n            label=\"VIP模板\"\n            color=\"primary\"\n          ></v-switch>\n        </v-form>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-btn \n          color=\"grey-darken-1\" \n          variant=\"text\" \n          @click=\"$emit('update:modelValue', false)\"\n        >\n          取消\n        </v-btn>\n        <v-btn\n          color=\"primary\"\n          variant=\"text\"\n          :loading=\"loading\"\n          :disabled=\"!valid\"\n          @click=\"handleSave\"\n        >\n          保存\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted } from 'vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'save'])\n\n// 表单数据\nconst form = ref(null)\nconst valid = ref(false)\nconst loading = ref(false)\nconst formData = ref({\n  name: '',\n  category: null,\n  thumbnail: null,\n  description: '',\n  is_vip: false\n})\n\n// 模板分类\nconst templateStore = useTemplateStore()\nconst categories = ref([])\n\n// 获取分类数据\nconst fetchCategories = async () => {\n  try {\n    loading.value = true\n    const response = await templateStore.getCategories()\n    console.log('获取到的分类数据:', response)\n    if (response && response.data) {\n      categories.value = response.data\n      console.log('设置的分类数据:', categories.value)\n    } else {\n      console.error('获取分类失败: 无数据')\n      categories.value = []\n    }\n  } catch (error) {\n    console.error('获取分类出错:', error)\n    categories.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 监听对话框显示状态\nwatch(() => props.modelValue, async (val) => {\n  if (val) {\n    // 每次打开对话框时都重新获取分类\n    await fetchCategories()\n  }\n  if (!val) {\n    // 重置表单\n    form.value?.reset()\n    formData.value = {\n      name: '',\n      category: null,\n      thumbnail: null,\n      description: '',\n      is_vip: false\n    }\n    valid.value = false\n  }\n})\n\n// 处理文件变化\nconst handleFileChange = async (files) => {\n  if (files && files.length > 0) {\n    const file = files[0]\n    if (file.size > 2000000) {\n      formData.value.thumbnail = null\n      return\n    }\n  }\n  await validateForm()\n}\n\n// 手动验证表单\nconst validateForm = async () => {\n  if (form.value) {\n    const { valid: isValid } = await form.value.validate()\n    valid.value = isValid\n  }\n}\n\n// 监听表单数据变化\nwatch(formData, async () => {\n  await validateForm()\n}, { deep: true })\n\n// 保存模板\nconst handleSave = async () => {\n  await validateForm()\n  if (!valid.value) return\n\n  loading.value = true\n  try {\n    // 检查必填字段\n    if (!formData.value.category) {\n      throw new Error('请选择分类')\n    }\n    if (!formData.value.thumbnail) {\n      throw new Error('请上传缩略图')\n    }\n\n    // 转换布尔值为字符串\n    const data = {\n      ...formData.value,\n      is_vip: formData.value.is_vip.toString()\n    }\n    emit('save', data)\n  } catch (error) {\n    console.error('保存失败:', error)\n    throw error\n  } finally {\n    loading.value = false\n  }\n}\n\n// 初始化时获取分类数据\nonMounted(() => {\n  if (props.modelValue) {\n    fetchCategories()\n  }\n})\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { membership } from '@/api';\nimport { showToast } from '@/components/ToastMessage';\nconst maxRetries = 5;\nconst retryInterval = 2000;\nexport default {\n  __name: 'PaymentResult',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const status = ref('pending');\n    const errorMessage = ref('');\n    let retryCount = 0;\n    const verifyPayment = async orderNo => {\n      try {\n        status.value = 'pending';\n        const response = await membership.verifyPayment(orderNo);\n        if (response?.data?.code === 200) {\n          status.value = 'success';\n          showToast('支付成功', 'success');\n          window.dispatchEvent(new Event('payment-success'));\n          return true;\n        } else if (response?.data?.code === 400) {\n          if (retryCount < maxRetries) {\n            retryCount++;\n            console.log(`支付验证重试 ${retryCount}/${maxRetries}`);\n            await new Promise(resolve => setTimeout(resolve, retryInterval));\n            return await verifyPayment(orderNo);\n          }\n          status.value = 'fail';\n          errorMessage.value = response?.data?.message || '支付验证失败';\n          showToast(errorMessage.value, 'error');\n          return false;\n        }\n        status.value = 'fail';\n        errorMessage.value = response?.data?.message || '支付验证失败';\n        showToast(errorMessage.value, 'error');\n        return false;\n      } catch (error) {\n        console.error('支付验证失败:', error);\n        status.value = 'fail';\n        errorMessage.value = error?.response?.data?.message || '系统错误';\n        showToast('支付验证失败', 'error');\n        return false;\n      }\n    };\n    onMounted(async () => {\n      // 从URL参数中获取支付状态\n      const reason = route.query.reason;\n      if (reason) {\n        status.value = 'fail';\n        errorMessage.value = errorMessages[reason] || '支付失败，请重试';\n      } else {\n        // 处理支付宝回调\n        const orderNo = route.query.out_trade_no;\n        if (orderNo) {\n          status.value = 'pending';\n          await verifyPayment(orderNo);\n        }\n      }\n    });\n    const __returned__ = {\n      route,\n      status,\n      errorMessage,\n      maxRetries,\n      retryInterval,\n      get retryCount() {\n        return retryCount;\n      },\n      set retryCount(v) {\n        retryCount = v;\n      },\n      verifyPayment,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get membership() {\n        return membership;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","membership","showToast","maxRetries","retryInterval","route","status","errorMessage","retryCount","verifyPayment","orderNo","value","response","data","code","window","dispatchEvent","Event","console","log","Promise","resolve","setTimeout","message","error","reason","query","errorMessages","out_trade_no"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/payment/PaymentResult.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <HeadView />\n    \n    <!-- 等待状态 -->\n    <div v-if=\"status === 'pending'\" class=\"max-w-3xl mx-auto px-4 py-16\">\n      <div class=\"text-center\">\n        <div class=\"mb-8\">\n          <svg class=\"mx-auto h-16 w-16 text-blue-500 animate-spin\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" fill=\"none\" />\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n          </svg>\n        </div>\n        <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">正在处理支付结果</h2>\n        <p class=\"text-gray-600\">请稍候，正在验证支付状态...</p>\n      </div>\n    </div>\n\n    <!-- 成功状态 -->\n    <div v-else-if=\"status === 'success'\">\n      <div class=\"max-w-3xl mx-auto px-4 py-16\">\n        <!-- 支付成功 -->\n        <div class=\"text-center\">\n          <div class=\"mb-8\">\n            <svg class=\"mx-auto h-16 w-16 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付成功</h2>\n          <p class=\"text-gray-600 mb-8\">您的会员已经开通，立即开始享受会员权益吧！</p>\n          <div class=\"flex justify-center space-x-4\">\n            <router-link \n              to=\"/member\" \n              class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n            >\n              查看会员信息\n            </router-link>\n            <router-link \n              to=\"/\" \n              class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              返回首页\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 失败状态 -->\n    <div v-else>\n      <div class=\"max-w-3xl mx-auto px-4 py-16\">\n        <!-- 支付失败 -->\n        <div class=\"text-center\">\n          <div class=\"mb-8\">\n            <svg class=\"mx-auto h-16 w-16 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">支付失败</h2>\n          <p class=\"text-gray-600 mb-2\">抱歉，支付过程中出现了问题</p>\n          <p class=\"text-gray-500 text-sm mb-8\">{{ errorMessage }}</p>\n          <div class=\"flex justify-center space-x-4\">\n            <router-link \n              to=\"/pro\" \n              class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700\"\n            >\n              重新支付\n            </router-link>\n            <router-link \n              to=\"/\" \n              class=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              返回首页\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <FootView />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRoute } from 'vue-router'\nimport { membership } from '@/api'\nimport { showToast } from '@/components/ToastMessage'\n\nconst route = useRoute()\nconst status = ref('pending')\nconst errorMessage = ref('')\nconst maxRetries = 5\nconst retryInterval = 2000\nlet retryCount = 0\n\nconst verifyPayment = async (orderNo) => {\n  try {\n    status.value = 'pending'\n    const response = await membership.verifyPayment(orderNo)\n    \n    if (response?.data?.code === 200) {\n      status.value = 'success'\n      showToast('支付成功', 'success')\n      window.dispatchEvent(new Event('payment-success'))\n      return true\n    } else if (response?.data?.code === 400) {\n      if (retryCount < maxRetries) {\n        retryCount++\n        console.log(`支付验证重试 ${retryCount}/${maxRetries}`)\n        await new Promise(resolve => setTimeout(resolve, retryInterval))\n        return await verifyPayment(orderNo)\n      }\n      status.value = 'fail'\n      errorMessage.value = response?.data?.message || '支付验证失败'\n      showToast(errorMessage.value, 'error')\n      return false\n    }\n    status.value = 'fail'\n    errorMessage.value = response?.data?.message || '支付验证失败'\n    showToast(errorMessage.value, 'error')\n    return false\n  } catch (error) {\n    console.error('支付验证失败:', error)\n    status.value = 'fail'\n    errorMessage.value = error?.response?.data?.message || '系统错误'\n    showToast('支付验证失败', 'error')\n    return false\n  }\n}\n\nonMounted(async () => {\n  // 从URL参数中获取支付状态\n  const reason = route.query.reason\n  if (reason) {\n    status.value = 'fail'\n    errorMessage.value = errorMessages[reason] || '支付失败，请重试'\n  } else {\n    // 处理支付宝回调\n    const orderNo = route.query.out_trade_no\n    if (orderNo) {\n      status.value = 'pending'\n      await verifyPayment(orderNo)\n    }\n  }\n})\n</script> "],"mappings":"AAoFA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,QAAQ,QAAQ,YAAW;AACpC,SAASC,UAAU,QAAQ,OAAM;AACjC,SAASC,SAAS,QAAQ,2BAA0B;AAKpD,MAAMC,UAAU,GAAG;AACnB,MAAMC,aAAa,GAAG,IAAG;;;;;;;IAJzB,MAAMC,KAAK,GAAGL,QAAQ,CAAC;IACvB,MAAMM,MAAM,GAAGR,GAAG,CAAC,SAAS;IAC5B,MAAMS,YAAY,GAAGT,GAAG,CAAC,EAAE;IAG3B,IAAIU,UAAU,GAAG;IAEjB,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;MACvC,IAAI;QACFJ,MAAM,CAACK,KAAK,GAAG,SAAQ;QACvB,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAACQ,aAAa,CAACC,OAAO;QAEvD,IAAIE,QAAQ,EAAEC,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UAChCR,MAAM,CAACK,KAAK,GAAG,SAAQ;UACvBT,SAAS,CAAC,MAAM,EAAE,SAAS;UAC3Ba,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,iBAAiB,CAAC;UACjD,OAAO,IAAG;QACZ,CAAC,MAAM,IAAIL,QAAQ,EAAEC,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;UACvC,IAAIN,UAAU,GAAGL,UAAU,EAAE;YAC3BK,UAAU,EAAC;YACXU,OAAO,CAACC,GAAG,CAAC,UAAUX,UAAU,IAAIL,UAAU,EAAE;YAChD,MAAM,IAAIiB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEjB,aAAa,CAAC;YAC/D,OAAO,MAAMK,aAAa,CAACC,OAAO;UACpC;UACAJ,MAAM,CAACK,KAAK,GAAG,MAAK;UACpBJ,YAAY,CAACI,KAAK,GAAGC,QAAQ,EAAEC,IAAI,EAAEU,OAAO,IAAI,QAAO;UACvDrB,SAAS,CAACK,YAAY,CAACI,KAAK,EAAE,OAAO;UACrC,OAAO,KAAI;QACb;QACAL,MAAM,CAACK,KAAK,GAAG,MAAK;QACpBJ,YAAY,CAACI,KAAK,GAAGC,QAAQ,EAAEC,IAAI,EAAEU,OAAO,IAAI,QAAO;QACvDrB,SAAS,CAACK,YAAY,CAACI,KAAK,EAAE,OAAO;QACrC,OAAO,KAAI;MACb,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BlB,MAAM,CAACK,KAAK,GAAG,MAAK;QACpBJ,YAAY,CAACI,KAAK,GAAGa,KAAK,EAAEZ,QAAQ,EAAEC,IAAI,EAAEU,OAAO,IAAI,MAAK;QAC5DrB,SAAS,CAAC,QAAQ,EAAE,OAAO;QAC3B,OAAO,KAAI;MACb;IACF;IAEAH,SAAS,CAAC,YAAY;MACpB;MACA,MAAM0B,MAAM,GAAGpB,KAAK,CAACqB,KAAK,CAACD,MAAK;MAChC,IAAIA,MAAM,EAAE;QACVnB,MAAM,CAACK,KAAK,GAAG,MAAK;QACpBJ,YAAY,CAACI,KAAK,GAAGgB,aAAa,CAACF,MAAM,CAAC,IAAI,UAAS;MACzD,CAAC,MAAM;QACL;QACA,MAAMf,OAAO,GAAGL,KAAK,CAACqB,KAAK,CAACE,YAAW;QACvC,IAAIlB,OAAO,EAAE;UACXJ,MAAM,CAACK,KAAK,GAAG,SAAQ;UACvB,MAAMF,aAAa,CAACC,OAAO;QAC7B;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    isAuthenticated: false,\n    userInfo: null\n  },\n  mutations: {\n    SET_AUTH_STATUS(state, status) {\n      state.isAuthenticated = status;\n    },\n    SET_USER_INFO(state, info) {\n      state.userInfo = info;\n    }\n  },\n  actions: {\n    // 会员相关的 actions\n    async createOrder({\n      commit\n    }, orderData) {\n      try {\n        const response = await membership.createOrder(orderData);\n        return response.data;\n      } catch (error) {\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","isAuthenticated","userInfo","mutations","SET_AUTH_STATUS","status","SET_USER_INFO","info","actions","createOrder","commit","orderData","response","membership","data","error"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    isAuthenticated: false,\n    userInfo: null,\n  },\n  mutations: {\n    SET_AUTH_STATUS(state, status) {\n      state.isAuthenticated = status\n    },\n    SET_USER_INFO(state, info) {\n      state.userInfo = info\n    }\n  },\n  actions: {\n    // 会员相关的 actions\n    async createOrder({ commit }, orderData) {\n      try {\n        const response = await membership.createOrder(orderData)\n        return response.data\n      } catch (error) {\n        throw error\n      }\n    }\n  }\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,QAAQ,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACTC,eAAeA,CAACJ,KAAK,EAAEK,MAAM,EAAE;MAC7BL,KAAK,CAACC,eAAe,GAAGI,MAAM;IAChC,CAAC;IACDC,aAAaA,CAACN,KAAK,EAAEO,IAAI,EAAE;MACzBP,KAAK,CAACE,QAAQ,GAAGK,IAAI;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAEC,SAAS,EAAE;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,UAAU,CAACJ,WAAW,CAACE,SAAS,CAAC;QACxD,OAAOC,QAAQ,CAACE,IAAI;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAMA,KAAK;MACb;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
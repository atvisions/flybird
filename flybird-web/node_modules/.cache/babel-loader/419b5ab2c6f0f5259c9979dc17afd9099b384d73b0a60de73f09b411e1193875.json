{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport { getComponents } from '@/api/resume';\n\n// 默认组件数据\nconst defaultComponents = [{\n  type: 'basic_info',\n  name: '基本信息',\n  category: 'basic',\n  icon: 'user',\n  demo_data: {\n    name: '张三',\n    title: '高级前端工程师',\n    email: 'zhangsan@example.com',\n    phone: '13800138000'\n  },\n  config: {\n    fields: [{\n      name: 'name',\n      label: '姓名',\n      type: 'text'\n    }, {\n      name: 'title',\n      label: '职位',\n      type: 'text'\n    }, {\n      name: 'email',\n      label: '邮箱',\n      type: 'email'\n    }, {\n      name: 'phone',\n      label: '电话',\n      type: 'tel'\n    }]\n  }\n}, {\n  type: 'education',\n  name: '教育经历',\n  category: 'content',\n  icon: 'graduation-cap',\n  demo_data: {\n    items: [{\n      school: '示例大学',\n      degree: '本科',\n      major: '计算机科学',\n      start_date: '2016-09',\n      end_date: '2020-06'\n    }]\n  },\n  config: {\n    fields: [{\n      name: 'school',\n      label: '学校',\n      type: 'text'\n    }, {\n      name: 'degree',\n      label: '学位',\n      type: 'text'\n    }, {\n      name: 'major',\n      label: '专业',\n      type: 'text'\n    }, {\n      name: 'start_date',\n      label: '开始时间',\n      type: 'date'\n    }, {\n      name: 'end_date',\n      label: '结束时间',\n      type: 'date'\n    }]\n  }\n}];\nexport const useComponentStore = defineStore('template-components', () => {\n  // 状态\n  const components = ref([]);\n  const loading = ref(false);\n  const error = ref(null);\n\n  // 组件分类\n  const componentCategories = computed(() => {\n    const categories = {};\n    components.value.forEach(component => {\n      if (!categories[component.category]) {\n        categories[component.category] = [];\n      }\n      categories[component.category].push(component);\n    });\n    return categories;\n  });\n\n  // 获取组件列表\n  const loadComponents = async () => {\n    try {\n      loading.value = true;\n      try {\n        const response = await getComponents();\n        components.value = response.data;\n      } catch (err) {\n        console.warn('Failed to load components from API, using default data:', err);\n        components.value = defaultComponents;\n      }\n    } catch (err) {\n      error.value = err.message;\n      throw err;\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  // 根据类型获取组件\n  const getComponentByType = type => {\n    return components.value.find(c => c.type === type);\n  };\n\n  // 获取组件配置\n  const getComponentConfig = type => {\n    const component = getComponentByType(type);\n    return component ? component.config : null;\n  };\n\n  // 获取组件模板\n  const getComponentTemplate = type => {\n    const component = getComponentByType(type);\n    return component ? component.template : null;\n  };\n  return {\n    components,\n    loading,\n    error,\n    componentCategories,\n    loadComponents,\n    getComponentByType,\n    getComponentConfig,\n    getComponentTemplate\n  };\n});","map":{"version":3,"names":["defineStore","ref","computed","getComponents","defaultComponents","type","name","category","icon","demo_data","title","email","phone","config","fields","label","items","school","degree","major","start_date","end_date","useComponentStore","components","loading","error","componentCategories","categories","value","forEach","component","push","loadComponents","response","data","err","console","warn","message","getComponentByType","find","c","getComponentConfig","getComponentTemplate","template"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/store/component.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { getComponents } from '@/api/resume'\n\n// 默认组件数据\nconst defaultComponents = [\n  {\n    type: 'basic_info',\n    name: '基本信息',\n    category: 'basic',\n    icon: 'user',\n    demo_data: {\n      name: '张三',\n      title: '高级前端工程师',\n      email: 'zhangsan@example.com',\n      phone: '13800138000'\n    },\n    config: {\n      fields: [\n        { name: 'name', label: '姓名', type: 'text' },\n        { name: 'title', label: '职位', type: 'text' },\n        { name: 'email', label: '邮箱', type: 'email' },\n        { name: 'phone', label: '电话', type: 'tel' }\n      ]\n    }\n  },\n  {\n    type: 'education',\n    name: '教育经历',\n    category: 'content',\n    icon: 'graduation-cap',\n    demo_data: {\n      items: [\n        {\n          school: '示例大学',\n          degree: '本科',\n          major: '计算机科学',\n          start_date: '2016-09',\n          end_date: '2020-06'\n        }\n      ]\n    },\n    config: {\n      fields: [\n        { name: 'school', label: '学校', type: 'text' },\n        { name: 'degree', label: '学位', type: 'text' },\n        { name: 'major', label: '专业', type: 'text' },\n        { name: 'start_date', label: '开始时间', type: 'date' },\n        { name: 'end_date', label: '结束时间', type: 'date' }\n      ]\n    }\n  }\n]\n\nexport const useComponentStore = defineStore('template-components', () => {\n  // 状态\n  const components = ref([])\n  const loading = ref(false)\n  const error = ref(null)\n\n  // 组件分类\n  const componentCategories = computed(() => {\n    const categories = {}\n    components.value.forEach(component => {\n      if (!categories[component.category]) {\n        categories[component.category] = []\n      }\n      categories[component.category].push(component)\n    })\n    return categories\n  })\n\n  // 获取组件列表\n  const loadComponents = async () => {\n    try {\n      loading.value = true\n      try {\n        const response = await getComponents()\n        components.value = response.data\n      } catch (err) {\n        console.warn('Failed to load components from API, using default data:', err)\n        components.value = defaultComponents\n      }\n    } catch (err) {\n      error.value = err.message\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 根据类型获取组件\n  const getComponentByType = (type) => {\n    return components.value.find(c => c.type === type)\n  }\n\n  // 获取组件配置\n  const getComponentConfig = (type) => {\n    const component = getComponentByType(type)\n    return component ? component.config : null\n  }\n\n  // 获取组件模板\n  const getComponentTemplate = (type) => {\n    const component = getComponentByType(type)\n    return component ? component.template : null\n  }\n\n  return {\n    components,\n    loading,\n    error,\n    componentCategories,\n    loadComponents,\n    getComponentByType,\n    getComponentConfig,\n    getComponentTemplate\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
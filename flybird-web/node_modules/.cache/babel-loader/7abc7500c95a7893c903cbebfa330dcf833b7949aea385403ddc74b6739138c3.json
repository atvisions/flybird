{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { auth } from '@/api/auth';\nimport { storage } from '@/utils/storage';\nimport { useStore } from 'vuex';\nimport request from '@/utils/request';\nexport function useLogin() {\n  const store = useStore();\n  const form = ref({\n    account: '',\n    password: '',\n    code: '',\n    rememberMe: false\n  });\n  const state = reactive({\n    loading: false,\n    sendingCode: false,\n    showPassword: false,\n    accountError: '',\n    passwordError: ''\n  });\n\n  // 验证账号\n  const validateAccount = () => {\n    state.accountError = '';\n    if (!form.value.account) {\n      state.accountError = '请输入账号';\n      return false;\n    }\n    // 验证账号格式：手机号/邮箱/UID\n    const phoneRegex = /^1[3-9]\\d{9}$/;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const uidRegex = /^\\d+$/;\n    if (!phoneRegex.test(form.value.account) && !emailRegex.test(form.value.account) && !uidRegex.test(form.value.account)) {\n      state.accountError = '请输入正确的手机号/邮箱/UID';\n      return false;\n    }\n    return true;\n  };\n\n  // 验证密码\n  const validatePassword = () => {\n    state.passwordError = '';\n    if (!form.value.password) {\n      state.passwordError = '请输入密码';\n      return false;\n    }\n    if (form.value.password.length < 6) {\n      state.passwordError = '密码长度不能少于6位';\n      return false;\n    }\n    return true;\n  };\n\n  // 密码登录\n  const handlePasswordLogin = async () => {\n    if (!validateAccount() || !validatePassword()) {\n      return false;\n    }\n    try {\n      state.loading = true;\n      const response = await auth.passwordLogin({\n        account: form.value.account,\n        password: form.value.password\n      });\n      if (response.data?.code === 200) {\n        const {\n          access,\n          refresh\n        } = response.data.data;\n\n        // 保存认证信息\n        storage.saveAuth({\n          access,\n          refresh\n        }, form.value.rememberMe);\n\n        // 设置请求头的 token\n        request.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n\n        // 更新 store 中的登录状态\n        await store.dispatch('fetchUserInfo');\n        store.commit('SET_TOKEN', access);\n        store.commit('SET_REFRESH_TOKEN', refresh);\n        store.commit('SET_LOGGED_IN', true);\n\n        // 如果选择记住我，保存账号\n        if (form.value.rememberMe) {\n          storage.saveAccount(form.value.account);\n        }\n        return true;\n      }\n      return false;\n    } finally {\n      state.loading = false;\n    }\n  };\n\n  // 验证码登录\n  const handleCodeLogin = async () => {\n    // ... 验证码登录逻辑 ...\n  };\n  return {\n    form,\n    state,\n    handlePasswordLogin,\n    validateAccount,\n    validatePassword\n  };\n}","map":{"version":3,"names":["ref","reactive","auth","storage","useStore","request","useLogin","store","form","account","password","code","rememberMe","state","loading","sendingCode","showPassword","accountError","passwordError","validateAccount","value","phoneRegex","emailRegex","uidRegex","test","validatePassword","length","handlePasswordLogin","response","passwordLogin","data","access","refresh","saveAuth","defaults","headers","common","dispatch","commit","saveAccount","handleCodeLogin"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/composables/useLogin.js"],"sourcesContent":["import { ref, reactive } from 'vue'\nimport { auth } from '@/api/auth'\nimport { storage } from '@/utils/storage'\nimport { useStore } from 'vuex'\nimport request from '@/utils/request'\n\nexport function useLogin() {\n  const store = useStore()\n  const form = ref({\n    account: '',\n    password: '',\n    code: '',\n    rememberMe: false\n  })\n\n  const state = reactive({\n    loading: false,\n    sendingCode: false,\n    showPassword: false,\n    accountError: '',\n    passwordError: ''\n  })\n\n  // 验证账号\n  const validateAccount = () => {\n    state.accountError = ''\n    if (!form.value.account) {\n      state.accountError = '请输入账号'\n      return false\n    }\n    // 验证账号格式：手机号/邮箱/UID\n    const phoneRegex = /^1[3-9]\\d{9}$/\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const uidRegex = /^\\d+$/\n    \n    if (!phoneRegex.test(form.value.account) && \n        !emailRegex.test(form.value.account) && \n        !uidRegex.test(form.value.account)) {\n      state.accountError = '请输入正确的手机号/邮箱/UID'\n      return false\n    }\n    return true\n  }\n\n  // 验证密码\n  const validatePassword = () => {\n    state.passwordError = ''\n    if (!form.value.password) {\n      state.passwordError = '请输入密码'\n      return false\n    }\n    if (form.value.password.length < 6) {\n      state.passwordError = '密码长度不能少于6位'\n      return false\n    }\n    return true\n  }\n\n  // 密码登录\n  const handlePasswordLogin = async () => {\n    if (!validateAccount() || !validatePassword()) {\n      return false\n    }\n\n    try {\n      state.loading = true\n      const response = await auth.passwordLogin({\n        account: form.value.account,\n        password: form.value.password\n      })\n\n      if (response.data?.code === 200) {\n        const { access, refresh } = response.data.data\n        \n        // 保存认证信息\n        storage.saveAuth({\n          access,\n          refresh\n        }, form.value.rememberMe)\n\n        // 设置请求头的 token\n        request.defaults.headers.common['Authorization'] = `Bearer ${access}`\n        \n        // 更新 store 中的登录状态\n        await store.dispatch('fetchUserInfo')\n        store.commit('SET_TOKEN', access)\n        store.commit('SET_REFRESH_TOKEN', refresh)\n        store.commit('SET_LOGGED_IN', true)\n\n        // 如果选择记住我，保存账号\n        if (form.value.rememberMe) {\n          storage.saveAccount(form.value.account)\n        }\n\n        return true\n      }\n      return false\n    } finally {\n      state.loading = false\n    }\n  }\n\n  // 验证码登录\n  const handleCodeLogin = async () => {\n    // ... 验证码登录逻辑 ...\n  }\n\n  return {\n    form,\n    state,\n    handlePasswordLogin,\n    validateAccount,\n    validatePassword\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
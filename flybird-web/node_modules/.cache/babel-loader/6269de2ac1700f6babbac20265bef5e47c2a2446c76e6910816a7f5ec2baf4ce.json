{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { showToast } from '@/components/ToastMessage';\nimport defaultAvatarImage from '@/assets/images/default-avatar.png';\nimport defaultBackground from '@/assets/images/default-background.jpg';\nimport { CameraIcon, PencilIcon, XMarkIcon, InformationCircleIcon } from '@heroicons/vue/24/outline';\nimport { user } from '@/api/user';\nexport default {\n  __name: 'UserHome',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n\n    // 用户信息的计算属性\n    const userInfo = computed(() => {\n      return {\n        uid: store.state.userInfo?.data?.uid,\n        username: store.state.userInfo?.data?.username || '未设置用户名',\n        avatar: store.state.userInfo?.data?.avatar,\n        background_image: store.state.userInfo?.data?.background_image,\n        bio: store.state.userInfo?.data?.bio || null,\n        position: store.state.userInfo?.data?.position || null\n      };\n    });\n\n    // 计算背景图 URL\n    const backgroundUrl = computed(() => {\n      const bgImage = userInfo.value?.background_image;\n      return bgImage ? formatImageUrl(bgImage) : defaultBackground;\n    });\n\n    // 处理背景图上传\n    const handleBackgroundUpload = async () => {\n      // 创建文件输入框\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = 'image/*';\n\n      // 监听文件选择\n      input.onchange = async e => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        // 验证文件\n        if (!file.type.startsWith('image/')) {\n          showToast('请选择图片文件', 'error');\n          return;\n        }\n        const maxSize = 5 * 1024 * 1024; // 5MB\n        if (file.size > maxSize) {\n          showToast('图片大小不能超过5MB', 'error');\n          return;\n        }\n        try {\n          loading.value = true;\n          const response = await user.uploadBackground(file);\n          if (response.data?.code === 200) {\n            showToast('背景图上传成功', 'success');\n            // 更新 store 中的用户信息\n            store.commit('SET_USER_INFO', _objectSpread(_objectSpread({}, store.state.userInfo), {}, {\n              data: _objectSpread(_objectSpread({}, store.state.userInfo.data), {}, {\n                background_image: response.data.data.background_image\n              })\n            }));\n          } else {\n            throw new Error(response.data?.message || '上传失败');\n          }\n        } catch (error) {\n          console.error('背景图上传失败:', error);\n          showToast(error.message || '背景图上传失败，请稍后重试', 'error');\n        } finally {\n          loading.value = false;\n          input.value = ''; // 清空文件选择器\n        }\n      };\n\n      // 触发文件选择\n      input.click();\n    };\n\n    // No changes to rest of the script section\n\n    const __returned__ = {\n      router,\n      route,\n      store,\n      userInfo,\n      backgroundUrl,\n      handleBackgroundUpload,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get defaultAvatarImage() {\n        return defaultAvatarImage;\n      },\n      get defaultBackground() {\n        return defaultBackground;\n      },\n      get CameraIcon() {\n        return CameraIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get InformationCircleIcon() {\n        return InformationCircleIcon;\n      },\n      get user() {\n        return user;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","useRoute","useStore","showToast","defaultAvatarImage","defaultBackground","CameraIcon","PencilIcon","XMarkIcon","InformationCircleIcon","user","router","route","store","userInfo","uid","state","data","username","avatar","background_image","bio","position","backgroundUrl","bgImage","value","formatImageUrl","handleBackgroundUpload","input","document","createElement","type","accept","onchange","e","file","target","files","startsWith","maxSize","size","loading","response","uploadBackground","code","commit","_objectSpread","Error","message","error","console","click"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/components/UserHome.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { showToast } from '@/components/ToastMessage'\nimport defaultAvatarImage from '@/assets/images/default-avatar.png'\nimport defaultBackground from '@/assets/images/default-background.jpg'\nimport {\n  CameraIcon,\n  PencilIcon,\n  XMarkIcon,\n  InformationCircleIcon\n} from '@heroicons/vue/24/outline'\nimport { user } from '@/api/user'\n\nconst router = useRouter()\nconst route = useRoute()\nconst store = useStore()\n\n// 用户信息的计算属性\nconst userInfo = computed(() => {\n  return {\n    uid: store.state.userInfo?.data?.uid,\n    username: store.state.userInfo?.data?.username || '未设置用户名',\n    avatar: store.state.userInfo?.data?.avatar,\n    background_image: store.state.userInfo?.data?.background_image,\n    bio: store.state.userInfo?.data?.bio || null,\n    position: store.state.userInfo?.data?.position || null\n  }\n})\n\n// 计算背景图 URL\nconst backgroundUrl = computed(() => {\n  const bgImage = userInfo.value?.background_image\n  return bgImage ? formatImageUrl(bgImage) : defaultBackground\n})\n\n// 处理背景图上传\nconst handleBackgroundUpload = async () => {\n  // 创建文件输入框\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.accept = 'image/*'\n  \n  // 监听文件选择\n  input.onchange = async (e) => {\n    const file = e.target.files[0]\n    if (!file) return\n    \n    // 验证文件\n    if (!file.type.startsWith('image/')) {\n      showToast('请选择图片文件', 'error')\n      return\n    }\n    \n    const maxSize = 5 * 1024 * 1024 // 5MB\n    if (file.size > maxSize) {\n      showToast('图片大小不能超过5MB', 'error')\n      return\n    }\n    \n    try {\n      loading.value = true\n      const response = await user.uploadBackground(file)\n      if (response.data?.code === 200) {\n        showToast('背景图上传成功', 'success')\n        // 更新 store 中的用户信息\n        store.commit('SET_USER_INFO', {\n          ...store.state.userInfo,\n          data: {\n            ...store.state.userInfo.data,\n            background_image: response.data.data.background_image\n          }\n        })\n      } else {\n        throw new Error(response.data?.message || '上传失败')\n      }\n    } catch (error) {\n      console.error('背景图上传失败:', error)\n      showToast(error.message || '背景图上传失败，请稍后重试', 'error')\n    } finally {\n      loading.value = false\n      input.value = ''  // 清空文件选择器\n    }\n  }\n  \n  // 触发文件选择\n  input.click()\n}\n\n// No changes to rest of the script section\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
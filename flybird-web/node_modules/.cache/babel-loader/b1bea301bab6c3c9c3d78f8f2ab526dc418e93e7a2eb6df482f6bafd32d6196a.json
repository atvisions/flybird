{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, watch } from 'vue';\nexport default {\n  __name: 'PropertyPanel',\n  props: {\n    modelValue: {\n      type: Object,\n      required: true\n    },\n    selectedElement: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:model-value'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const localValue = ref(null);\n\n    // 可用的数据绑定字段\n    const availableFields = [{\n      title: '个人信息',\n      value: 'profile.avatar',\n      text: '头像'\n    }, {\n      title: '个人信息',\n      value: 'profile.name',\n      text: '姓名'\n    }, {\n      title: '个人信息',\n      value: 'profile.email',\n      text: '邮箱'\n    }, {\n      title: '个人信息',\n      value: 'profile.phone',\n      text: '电话'\n    }, {\n      title: '教育经历',\n      value: 'education.school',\n      text: '学校'\n    }, {\n      title: '教育经历',\n      value: 'education.major',\n      text: '专业'\n    }, {\n      title: '教育经历',\n      value: 'education.degree',\n      text: '学位'\n    }];\n\n    // 更新元素属性\n    const updateElementProperty = (property, value) => {\n      if (props.selectedElement) {\n        emit('update:selected-element', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n          [property]: value\n        }));\n      }\n    };\n\n    // 更新元素样式\n    const updateElementStyle = (property, value) => {\n      if (props.selectedElement) {\n        emit('update:selected-element', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n          styles: _objectSpread(_objectSpread({}, props.selectedElement.styles), {}, {\n            [property]: value\n          })\n        }));\n      }\n    };\n\n    // 更新数据绑定\n    const updateDataBinding = field => {\n      if (props.selectedElement) {\n        emit('update:selected-element', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n          dataBinding: field ? {\n            field\n          } : null\n        }));\n      }\n    };\n\n    // 监听 props 变化，更新本地数据\n    watch(() => props.modelValue, newValue => {\n      if (newValue) {\n        localValue.value = JSON.parse(JSON.stringify(newValue));\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // 更新组件字段\n    const updateComponentField = (component, key, value) => {\n      component.config.fields[key] = value;\n      emitUpdate();\n    };\n\n    // 更新组件布局\n    const updateComponentLayout = (component, key, value) => {\n      component.config.layout[key] = value;\n      emitUpdate();\n    };\n\n    // 更新组件样式\n    const updateComponentStyle = (component, key, value) => {\n      component.config.styles[key] = value;\n      emitUpdate();\n    };\n\n    // 更新布局配置\n    const updateLayout = (key, value) => {\n      localValue.value.layout[key] = value;\n      emitUpdate();\n    };\n\n    // 更新布局区域\n    const updateArea = (index, key, value) => {\n      localValue.value.layout.areas[index][key] = value;\n      emitUpdate();\n    };\n\n    // 更新主题颜色\n    const updateThemeColor = (key, value) => {\n      localValue.value.theme.colors[key] = value;\n      emitUpdate();\n    };\n\n    // 更新主题间距\n    const updateThemeSpacing = (key, value) => {\n      localValue.value.theme.spacing[key] = value;\n      emitUpdate();\n    };\n\n    // 更新字体配置\n    const updateTypography = (type, key, value) => {\n      localValue.value.theme.typography[type][key] = value;\n      emitUpdate();\n    };\n\n    // 发送更新事件\n    const emitUpdate = () => {\n      emit('update:modelValue', localValue.value);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      localValue,\n      availableFields,\n      updateElementProperty,\n      updateElementStyle,\n      updateDataBinding,\n      updateComponentField,\n      updateComponentLayout,\n      updateComponentStyle,\n      updateLayout,\n      updateArea,\n      updateThemeColor,\n      updateThemeSpacing,\n      updateTypography,\n      emitUpdate,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","props","__props","emit","__emit","localValue","availableFields","title","value","text","updateElementProperty","property","selectedElement","_objectSpread","updateElementStyle","styles","updateDataBinding","field","dataBinding","modelValue","newValue","JSON","parse","stringify","immediate","deep","updateComponentField","component","key","config","fields","emitUpdate","updateComponentLayout","layout","updateComponentStyle","updateLayout","updateArea","index","areas","updateThemeColor","theme","colors","updateThemeSpacing","spacing","updateTypography","type","typography"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/PropertyPanel.vue"],"sourcesContent":["<template>\n  <v-card class=\"h-100\">\n    <v-card-title class=\"text-body-1 py-2\">属性设置</v-card-title>\n    <v-divider></v-divider>\n    <v-card-text class=\"flex-grow-1 overflow-y-auto pa-2\">\n      <template v-if=\"localValue\">\n        <!-- 组件配置 -->\n        <div v-if=\"localValue.components\" class=\"setting-section\">\n          <div class=\"setting-title\">组件配置</div>\n          <v-expansion-panels>\n            <v-expansion-panel\n              v-for=\"component in localValue.components\"\n              :key=\"component.id\"\n            >\n              <v-expansion-panel-title>\n                {{ component.type }}\n              </v-expansion-panel-title>\n              <v-expansion-panel-text>\n                <!-- 组件字段配置 -->\n                <v-row dense v-if=\"component.config.fields\">\n                  <v-col cols=\"12\" v-for=\"(value, key) in component.config.fields\" :key=\"key\">\n                    <v-text-field\n                      :model-value=\"value\"\n                      @update:model-value=\"val => updateComponentField(component, key, val)\"\n                      :label=\"key\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n                <!-- 组件布局配置 -->\n                <v-row dense v-if=\"component.config.layout\">\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      :model-value=\"component.config.layout.x\"\n                      @update:model-value=\"val => updateComponentLayout(component, 'x', val)\"\n                      label=\"X坐标\"\n                      type=\"number\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      :model-value=\"component.config.layout.y\"\n                      @update:model-value=\"val => updateComponentLayout(component, 'y', val)\"\n                      label=\"Y坐标\"\n                      type=\"number\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      :model-value=\"component.config.layout.w\"\n                      @update:model-value=\"val => updateComponentLayout(component, 'w', val)\"\n                      label=\"宽度\"\n                      type=\"number\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"6\">\n                    <v-text-field\n                      :model-value=\"component.config.layout.h\"\n                      @update:model-value=\"val => updateComponentLayout(component, 'h', val)\"\n                      label=\"高度\"\n                      type=\"number\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n                <!-- 组件样式配置 -->\n                <v-row dense v-if=\"component.config.styles\">\n                  <v-col cols=\"12\">\n                    <v-text-field\n                      :model-value=\"component.config.styles.padding\"\n                      @update:model-value=\"val => updateComponentStyle(component, 'padding', val)\"\n                      label=\"内边距\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\">\n                    <v-text-field\n                      :model-value=\"component.config.styles.background\"\n                      @update:model-value=\"val => updateComponentStyle(component, 'background', val)\"\n                      label=\"背景色\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                  <v-col cols=\"12\">\n                    <v-text-field\n                      :model-value=\"component.config.styles.borderRadius\"\n                      @update:model-value=\"val => updateComponentStyle(component, 'borderRadius', val)\"\n                      label=\"圆角\"\n                      density=\"compact\"\n                      hide-details\n                      class=\"mb-2\"\n                    ></v-text-field>\n                  </v-col>\n                </v-row>\n              </v-expansion-panel-text>\n            </v-expansion-panel>\n          </v-expansion-panels>\n        </div>\n\n        <!-- 布局配置 -->\n        <div v-if=\"localValue.layout\" class=\"setting-section\">\n          <div class=\"setting-title\">布局配置</div>\n          <v-row dense>\n            <v-col cols=\"12\">\n              <v-text-field\n                :model-value=\"localValue.layout.gap\"\n                @update:model-value=\"val => updateLayout('gap', val)\"\n                label=\"间距\"\n                type=\"text\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-text-field\n                :model-value=\"localValue.layout.columns\"\n                @update:model-value=\"val => updateLayout('columns', val)\"\n                label=\"列数\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n          </v-row>\n          <!-- 布局区域配置 -->\n          <div v-if=\"localValue.layout.areas\" class=\"mt-4\">\n            <div class=\"subtitle-2 mb-2\">布局区域</div>\n            <v-expansion-panels>\n              <v-expansion-panel\n                v-for=\"(area, index) in localValue.layout.areas\"\n                :key=\"index\"\n              >\n                <v-expansion-panel-title>\n                  {{ area.name }}\n                </v-expansion-panel-title>\n                <v-expansion-panel-text>\n                  <v-row dense>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                        :model-value=\"area.x\"\n                        @update:model-value=\"val => updateArea(index, 'x', val)\"\n                        label=\"X坐标\"\n                        type=\"number\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                        :model-value=\"area.y\"\n                        @update:model-value=\"val => updateArea(index, 'y', val)\"\n                        label=\"Y坐标\"\n                        type=\"number\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                        :model-value=\"area.w\"\n                        @update:model-value=\"val => updateArea(index, 'w', val)\"\n                        label=\"宽度\"\n                        type=\"number\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                        :model-value=\"area.h\"\n                        @update:model-value=\"val => updateArea(index, 'h', val)\"\n                        label=\"高度\"\n                        type=\"number\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                </v-expansion-panel-text>\n              </v-expansion-panel>\n            </v-expansion-panels>\n          </div>\n        </div>\n\n        <!-- 主题配置 -->\n        <div v-if=\"localValue.theme\" class=\"setting-section\">\n          <div class=\"setting-title\">主题配置</div>\n          <!-- 颜色配置 -->\n          <div v-if=\"localValue.theme.colors\">\n            <div class=\"subtitle-2 mb-2\">颜色</div>\n            <v-row dense>\n              <v-col cols=\"6\" v-for=\"(value, key) in localValue.theme.colors\" :key=\"key\">\n                <v-color-picker\n                  :model-value=\"value\"\n                  @update:model-value=\"val => updateThemeColor(key, val)\"\n                  :label=\"key\"\n                  hide-inputs\n                  mode=\"hex\"\n                  class=\"mb-2\"\n                ></v-color-picker>\n              </v-col>\n            </v-row>\n          </div>\n          <!-- 间距配置 -->\n          <div v-if=\"localValue.theme.spacing\" class=\"mt-4\">\n            <div class=\"subtitle-2 mb-2\">间距</div>\n            <v-row dense>\n              <v-col cols=\"6\" v-for=\"(value, key) in localValue.theme.spacing\" :key=\"key\">\n                <v-text-field\n                  :model-value=\"value\"\n                  @update:model-value=\"val => updateThemeSpacing(key, val)\"\n                  :label=\"key\"\n                  density=\"compact\"\n                  hide-details\n                  class=\"mb-2\"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </div>\n          <!-- 字体配置 -->\n          <div v-if=\"localValue.theme.typography\" class=\"mt-4\">\n            <div class=\"subtitle-2 mb-2\">字体</div>\n            <v-expansion-panels>\n              <v-expansion-panel\n                v-for=\"(config, type) in localValue.theme.typography\"\n                :key=\"type\"\n              >\n                <v-expansion-panel-title>\n                  {{ type }}字体\n                </v-expansion-panel-title>\n                <v-expansion-panel-text>\n                  <v-row dense>\n                    <v-col cols=\"12\">\n                      <v-select\n                        :model-value=\"config.font\"\n                        @update:model-value=\"val => updateTypography(type, 'font', val)\"\n                        label=\"字体\"\n                        :items=\"['Arial', 'Helvetica', 'Times New Roman']\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-select>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-text-field\n                        :model-value=\"config.size\"\n                        @update:model-value=\"val => updateTypography(type, 'size', val)\"\n                        label=\"大小\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"6\">\n                      <v-select\n                        :model-value=\"config.weight\"\n                        @update:model-value=\"val => updateTypography(type, 'weight', val)\"\n                        label=\"粗细\"\n                        :items=\"['normal', 'bold']\"\n                        density=\"compact\"\n                        hide-details\n                        class=\"mb-2\"\n                      ></v-select>\n                    </v-col>\n                  </v-row>\n                </v-expansion-panel-text>\n              </v-expansion-panel>\n            </v-expansion-panels>\n          </div>\n        </div>\n\n        <!-- 设计元素配置 -->\n        <div v-if=\"selectedElement\" class=\"setting-section\">\n          <div class=\"setting-title\">元素配置</div>\n          \n          <!-- 位置和大小 -->\n          <v-row dense>\n            <v-col cols=\"6\">\n              <v-text-field\n                :model-value=\"selectedElement.x\"\n                @update:model-value=\"val => updateElementProperty('x', Number(val))\"\n                label=\"X坐标\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                :model-value=\"selectedElement.y\"\n                @update:model-value=\"val => updateElementProperty('y', Number(val))\"\n                label=\"Y坐标\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                :model-value=\"selectedElement.width\"\n                @update:model-value=\"val => updateElementProperty('width', Number(val))\"\n                label=\"宽度\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"6\">\n              <v-text-field\n                :model-value=\"selectedElement.height\"\n                @update:model-value=\"val => updateElementProperty('height', Number(val))\"\n                label=\"高度\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n          </v-row>\n\n          <!-- 旋转 -->\n          <v-row dense>\n            <v-col cols=\"12\">\n              <v-text-field\n                :model-value=\"selectedElement.rotation\"\n                @update:model-value=\"val => updateElementProperty('rotation', Number(val))\"\n                label=\"旋转角度\"\n                type=\"number\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n          </v-row>\n\n          <!-- 数据绑定 -->\n          <v-row dense v-if=\"selectedElement.type === 'image' || selectedElement.type === 'text'\">\n            <v-col cols=\"12\">\n              <v-select\n                :model-value=\"selectedElement.dataBinding?.field\"\n                @update:model-value=\"val => updateDataBinding(val)\"\n                :items=\"availableFields\"\n                label=\"数据绑定\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-select>\n            </v-col>\n          </v-row>\n\n          <!-- 样式设置 -->\n          <v-row dense>\n            <v-col cols=\"12\">\n              <v-text-field\n                :model-value=\"selectedElement.styles?.borderRadius\"\n                @update:model-value=\"val => updateElementStyle('borderRadius', val)\"\n                label=\"圆角\"\n                density=\"compact\"\n                hide-details\n                class=\"mb-2\"\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"12\">\n              <v-color-picker\n                :model-value=\"selectedElement.styles?.backgroundColor\"\n                @update:model-value=\"val => updateElementStyle('backgroundColor', val)\"\n                label=\"背景色\"\n                hide-inputs\n                mode=\"hex\"\n                class=\"mb-2\"\n              ></v-color-picker>\n            </v-col>\n          </v-row>\n        </div>\n      </template>\n      <div v-else class=\"text-center text-medium-emphasis pa-4\">\n        请选择一个模板或布局组件\n      </div>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    required: true\n  },\n  selectedElement: {\n    type: Object,\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:model-value'])\n\nconst localValue = ref(null)\n\n// 可用的数据绑定字段\nconst availableFields = [\n  { title: '个人信息', value: 'profile.avatar', text: '头像' },\n  { title: '个人信息', value: 'profile.name', text: '姓名' },\n  { title: '个人信息', value: 'profile.email', text: '邮箱' },\n  { title: '个人信息', value: 'profile.phone', text: '电话' },\n  { title: '教育经历', value: 'education.school', text: '学校' },\n  { title: '教育经历', value: 'education.major', text: '专业' },\n  { title: '教育经历', value: 'education.degree', text: '学位' }\n]\n\n// 更新元素属性\nconst updateElementProperty = (property, value) => {\n  if (props.selectedElement) {\n    emit('update:selected-element', {\n      ...props.selectedElement,\n      [property]: value\n    })\n  }\n}\n\n// 更新元素样式\nconst updateElementStyle = (property, value) => {\n  if (props.selectedElement) {\n    emit('update:selected-element', {\n      ...props.selectedElement,\n      styles: {\n        ...props.selectedElement.styles,\n        [property]: value\n      }\n    })\n  }\n}\n\n// 更新数据绑定\nconst updateDataBinding = (field) => {\n  if (props.selectedElement) {\n    emit('update:selected-element', {\n      ...props.selectedElement,\n      dataBinding: field ? { field } : null\n    })\n  }\n}\n\n// 监听 props 变化，更新本地数据\nwatch(() => props.modelValue, (newValue) => {\n  if (newValue) {\n    localValue.value = JSON.parse(JSON.stringify(newValue))\n  }\n}, { immediate: true, deep: true })\n\n// 更新组件字段\nconst updateComponentField = (component, key, value) => {\n  component.config.fields[key] = value\n  emitUpdate()\n}\n\n// 更新组件布局\nconst updateComponentLayout = (component, key, value) => {\n  component.config.layout[key] = value\n  emitUpdate()\n}\n\n// 更新组件样式\nconst updateComponentStyle = (component, key, value) => {\n  component.config.styles[key] = value\n  emitUpdate()\n}\n\n// 更新布局配置\nconst updateLayout = (key, value) => {\n  localValue.value.layout[key] = value\n  emitUpdate()\n}\n\n// 更新布局区域\nconst updateArea = (index, key, value) => {\n  localValue.value.layout.areas[index][key] = value\n  emitUpdate()\n}\n\n// 更新主题颜色\nconst updateThemeColor = (key, value) => {\n  localValue.value.theme.colors[key] = value\n  emitUpdate()\n}\n\n// 更新主题间距\nconst updateThemeSpacing = (key, value) => {\n  localValue.value.theme.spacing[key] = value\n  emitUpdate()\n}\n\n// 更新字体配置\nconst updateTypography = (type, key, value) => {\n  localValue.value.theme.typography[type][key] = value\n  emitUpdate()\n}\n\n// 发送更新事件\nconst emitUpdate = () => {\n  emit('update:modelValue', localValue.value)\n}\n</script>\n\n<style scoped>\n.setting-section {\n  margin-bottom: 16px;\n}\n\n.setting-title {\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  color: rgba(0, 0, 0, 0.87);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
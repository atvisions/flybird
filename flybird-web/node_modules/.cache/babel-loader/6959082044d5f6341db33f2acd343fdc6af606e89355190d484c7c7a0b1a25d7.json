{"ast":null,"code":"import { Picture } from '@element-plus/icons-vue';\nexport default {\n  __name: 'ComponentRenderer',\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    styles: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    const props = __props;\n\n    // 导出组件\n    __expose({\n      type: props.type,\n      data: props.data,\n      styles: props.styles\n    });\n    const __returned__ = {\n      props,\n      get Picture() {\n        return Picture;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Picture","props","__props","__expose","type","data","styles"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/widgets/ComponentRenderer.vue"],"sourcesContent":["<template>\n  <div class=\"component-renderer\">\n    <!-- 基础组件 -->\n    <template v-if=\"type === 'text'\">\n      <p :style=\"{ textAlign: data.align }\">{{ data.content }}</p>\n    </template>\n    \n    <template v-else-if=\"type === 'title'\">\n      <div :style=\"{ textAlign: data.align }\">\n        <h1 v-if=\"data.level === 'h1'\">{{ data.content }}</h1>\n        <h2 v-else-if=\"data.level === 'h2'\">{{ data.content }}</h2>\n        <h3 v-else-if=\"data.level === 'h3'\">{{ data.content }}</h3>\n        <h4 v-else>{{ data.content }}</h4>\n      </div>\n    </template>\n    \n    <template v-else-if=\"type === 'image'\">\n      <el-image\n        :src=\"data.src\"\n        :alt=\"data.alt\"\n        :style=\"{ width: data.width, height: data.height }\"\n        fit=\"contain\"\n      >\n        <template #error>\n          <div class=\"image-slot\">\n            <el-icon><Picture /></el-icon>\n          </div>\n        </template>\n      </el-image>\n    </template>\n    \n    <template v-else-if=\"type === 'divider'\">\n      <el-divider\n        :style=\"{\n          borderStyle: data.style || 'solid',\n          margin: data.margin || '10px 0'\n        }\"\n      />\n    </template>\n    \n    <!-- 布局组件 -->\n    <template v-else-if=\"type === 'column'\">\n      <div\n        class=\"column-container\"\n        :style=\"{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${data.columns || 2}, 1fr)`,\n          gap: data.gap || '20px'\n        }\"\n      >\n        <slot />\n      </div>\n    </template>\n    \n    <template v-else-if=\"type === 'section'\">\n      <div class=\"section-container\">\n        <h3 v-if=\"data.title\">{{ data.title }}</h3>\n        <p v-if=\"data.subtitle\" class=\"text-gray-500\">{{ data.subtitle }}</p>\n        <slot />\n      </div>\n    </template>\n    \n    <template v-else-if=\"type === 'card'\">\n      <el-card\n        :shadow=\"data.shadow || 'always'\"\n        :header=\"data.title\"\n      >\n        <slot />\n      </el-card>\n    </template>\n    \n    <!-- 内容组件 -->\n    <template v-else-if=\"type === 'basic_info'\">\n      <div class=\"basic-info\">\n        <div class=\"flex items-center mb-4\">\n          <el-avatar\n            v-if=\"data.avatar\"\n            :src=\"data.avatar\"\n            :size=\"64\"\n          />\n          <div class=\"ml-4\">\n            <h2 class=\"text-xl font-bold\">{{ data.name }}</h2>\n            <div class=\"text-gray-500\">\n              <p>{{ data.gender }} | {{ data.birth_date }}</p>\n              <p>{{ data.phone }} | {{ data.email }}</p>\n              <p>{{ data.location }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"summary\">\n          <p class=\"text-gray-700\">{{ data.summary }}</p>\n        </div>\n      </div>\n    </template>\n    \n    <template v-else-if=\"type === 'job_intention'\">\n      <div class=\"job-intention\">\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label class=\"text-gray-500\">求职类型</label>\n            <p>{{ data.job_type }}</p>\n          </div>\n          <div>\n            <label class=\"text-gray-500\">求职状态</label>\n            <p>{{ data.job_status }}</p>\n          </div>\n          <div>\n            <label class=\"text-gray-500\">期望薪资</label>\n            <p>{{ data.expected_salary }}</p>\n          </div>\n          <div>\n            <label class=\"text-gray-500\">期望城市</label>\n            <p>{{ data.expected_city }}</p>\n          </div>\n        </div>\n        <div class=\"mt-4\">\n          <label class=\"text-gray-500\">期望行业</label>\n          <div class=\"flex flex-wrap gap-2\">\n            <el-tag\n              v-for=\"industry in data.industries\"\n              :key=\"industry\"\n              size=\"small\"\n            >\n              {{ industry }}\n            </el-tag>\n          </div>\n        </div>\n        <div class=\"mt-4\">\n          <label class=\"text-gray-500\">期望职位</label>\n          <div class=\"flex flex-wrap gap-2\">\n            <el-tag\n              v-for=\"position in data.positions\"\n              :key=\"position\"\n              size=\"small\"\n              type=\"success\"\n            >\n              {{ position }}\n            </el-tag>\n          </div>\n        </div>\n      </div>\n    </template>\n    \n    <!-- 默认显示 -->\n    <template v-else>\n      <div class=\"unknown-component\">\n        <el-alert\n          title=\"未知组件类型\"\n          type=\"warning\"\n          :description=\"'组件类型：' + type\"\n          show-icon\n        />\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { Picture } from '@element-plus/icons-vue'\n\nconst props = defineProps({\n  type: {\n    type: String,\n    required: true\n  },\n  data: {\n    type: Object,\n    default: () => ({})\n  },\n  styles: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\n// 导出组件\ndefineExpose({\n  type: props.type,\n  data: props.data,\n  styles: props.styles\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.component-renderer {\n  @apply p-4;\n  \n  .image-slot {\n    @apply flex items-center justify-center w-full h-full bg-gray-100;\n    \n    .el-icon {\n      @apply text-4xl text-gray-400;\n    }\n  }\n  \n  .section-container {\n    @apply space-y-4;\n  }\n  \n  .unknown-component {\n    @apply p-4;\n  }\n  \n  .basic-info {\n    @apply bg-white p-6 rounded-lg shadow-sm;\n  }\n  \n  .job-intention {\n    @apply bg-white p-6 rounded-lg shadow-sm;\n  }\n  \n  .column-container {\n    @apply bg-white p-4 rounded-lg shadow-sm;\n  }\n}\n</style> "],"mappings":"AA8JA,SAASA,OAAO,QAAQ,yBAAwB;;;;;;;;;;;;;;;;;;;;IAEhD,MAAMC,KAAK,GAAGC,OAAA;;IAed;IACAC,QAAY,CAAC;MACXC,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,IAAI,EAAEJ,KAAK,CAACI,IAAI;MAChBC,MAAM,EAAEL,KAAK,CAACK;IAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
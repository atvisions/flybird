{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n  getters: {\n    avatar: state => state.userInfo?.avatar || defaultAvatar,\n    nickname: state => state.userInfo?.nickname || '未设置昵称',\n    background: state => state.backgroundImage,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          console.log('User info response:', response.data);\n          const userData = response.data.data;\n          this.userInfo = _objectSpread(_objectSpread({}, userData), {}, {\n            avatar: userData.avatar || null,\n            nickname: userData.nickname || null,\n            phone: userData.phone || null,\n            email: userData.email || null\n          });\n          if (userData.background) {\n            this.backgroundImage = userData.background;\n          }\n          return this.userInfo;\n        }\n        return null;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData);\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData);\n        if (response?.data?.code === 200) {\n          const {\n            background\n          } = response.data.data;\n          if (background) {\n            this.backgroundImage = background;\n          }\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = _objectSpread(_objectSpread(_objectSpread({}, this.userInfo), userData), {}, {\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            nickname: userData.nickname || this.userInfo?.nickname || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null\n          });\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.backgroundImage = null;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","user","defaultAvatar","useAccountStore","state","userInfo","avatarUpdateTime","backgroundImage","getters","avatar","nickname","background","phone","email","actions","fetchUserInfo","response","getUserInfo","data","code","console","log","userData","_objectSpread","error","updateAvatar","formData","Date","now","Error","message","updateBackground","updateUserInfo","clearUserInfo"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n\n  getters: {\n    avatar: (state) => state.userInfo?.avatar || defaultAvatar,\n    nickname: (state) => state.userInfo?.nickname || '未设置昵称',\n    background: (state) => state.backgroundImage,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          console.log('User info response:', response.data)\n          \n          const userData = response.data.data\n          \n          this.userInfo = {\n            ...userData,\n            avatar: userData.avatar || null,\n            nickname: userData.nickname || null,\n            phone: userData.phone || null,\n            email: userData.email || null\n          }\n          \n          if (userData.background) {\n            this.backgroundImage = userData.background\n          }\n          \n          return this.userInfo\n        }\n        return null\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData)\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData)\n        if (response?.data?.code === 200) {\n          const { background } = response.data.data\n          if (background) {\n            this.backgroundImage = background\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data)\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          this.userInfo = {\n            ...this.userInfo,\n            ...userData,\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            nickname: userData.nickname || this.userInfo?.nickname || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.backgroundImage = null\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport HeadView from '@/components/HeadView.vue';\nimport FooterView from '@/components/FooterView.vue';\nimport ToastMessage from '@/components/ToastMessage.vue';\nimport { useAuthStore } from '@/stores/auth';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n\n    // 计算是否显示头部和底部\n    const showHeaderAndFooter = computed(() => {\n      const path = router.currentRoute.value.path;\n      return !path.includes('/login') && !path.includes('/register');\n    });\n\n    // 计算是否显示登录按钮\n    const showLoginButton = computed(() => !authStore.isAuthenticated);\n    onMounted(() => {\n      // 检查认证状态\n      if (!authStore.isAuthenticated) {\n        const currentPath = router.currentRoute.value.path;\n        if (currentPath !== '/login' && currentPath !== '/register') {\n          // 保存当前路径用于登录后重定向\n          const redirect = encodeURIComponent(currentPath);\n          router.push(`/login?redirect=${redirect}`);\n        }\n      }\n    });\n    const __returned__ = {\n      router,\n      authStore,\n      showHeaderAndFooter,\n      showLoginButton,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      HeadView,\n      FooterView,\n      ToastMessage,\n      get useAuthStore() {\n        return useAuthStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","HeadView","FooterView","ToastMessage","useAuthStore","router","authStore","showHeaderAndFooter","path","currentRoute","value","includes","showLoginButton","isAuthenticated","currentPath","redirect","encodeURIComponent","push"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <!-- 头部导航 -->\n    <HeadView v-if=\"showHeaderAndFooter\" />\n    \n    <!-- 主要内容区域 -->\n    <main>\n      <router-view></router-view>\n    </main>\n    \n    <!-- 底部 -->\n    <FooterView v-if=\"showHeaderAndFooter\" />\n    \n    <!-- Toast 消息组件 -->\n    <ToastMessage />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport HeadView from '@/components/HeadView.vue'\nimport FooterView from '@/components/FooterView.vue'\nimport ToastMessage from '@/components/ToastMessage.vue'\nimport { useAuthStore } from '@/stores/auth'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\n\n// 计算是否显示头部和底部\nconst showHeaderAndFooter = computed(() => {\n  const path = router.currentRoute.value.path\n  return !path.includes('/login') && !path.includes('/register')\n})\n\n// 计算是否显示登录按钮\nconst showLoginButton = computed(() => !authStore.isAuthenticated)\n\nonMounted(() => {\n  // 检查认证状态\n  if (!authStore.isAuthenticated) {\n    const currentPath = router.currentRoute.value.path\n    if (currentPath !== '/login' && currentPath !== '/register') {\n      // 保存当前路径用于登录后重定向\n      const redirect = encodeURIComponent(currentPath)\n      router.push(`/login?redirect=${redirect}`)\n    }\n  }\n})\n</script>\n\n<style>\n.app-wrapper {\n  position: relative;\n  min-height: 100vh;\n}\n\n.bg-image {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 0;\n  pointer-events: none;\n}\n\n/* 可选：添加一个半透明遮罩让内容更易读 */\n.bg-image::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n}\n\n/* 确保内容在背景之上 */\n.app-wrapper > *:not(.bg-image) {\n  position: relative;\n  z-index: 1;\n}\n</style>"],"mappings":"AAmBA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AAC7C,SAASC,SAAS,QAAQ,YAAW;AACrC,OAAOC,QAAQ,MAAM,2BAA0B;AAC/C,OAAOC,UAAU,MAAM,6BAA4B;AACnD,OAAOC,YAAY,MAAM,+BAA8B;AACvD,SAASC,YAAY,QAAQ,eAAc;;;;;;;IAE3C,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACzB,MAAMM,SAAS,GAAGF,YAAY,CAAC;;IAE/B;IACA,MAAMG,mBAAmB,GAAGT,QAAQ,CAAC,MAAM;MACzC,MAAMU,IAAI,GAAGH,MAAM,CAACI,YAAY,CAACC,KAAK,CAACF,IAAG;MAC1C,OAAO,CAACA,IAAI,CAACG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAACH,IAAI,CAACG,QAAQ,CAAC,WAAW;IAC/D,CAAC;;IAED;IACA,MAAMC,eAAe,GAAGd,QAAQ,CAAC,MAAM,CAACQ,SAAS,CAACO,eAAe;IAEjEd,SAAS,CAAC,MAAM;MACd;MACA,IAAI,CAACO,SAAS,CAACO,eAAe,EAAE;QAC9B,MAAMC,WAAW,GAAGT,MAAM,CAACI,YAAY,CAACC,KAAK,CAACF,IAAG;QACjD,IAAIM,WAAW,KAAK,QAAQ,IAAIA,WAAW,KAAK,WAAW,EAAE;UAC3D;UACA,MAAMC,QAAQ,GAAGC,kBAAkB,CAACF,WAAW;UAC/CT,MAAM,CAACY,IAAI,CAAC,mBAAmBF,QAAQ,EAAE;QAC3C;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
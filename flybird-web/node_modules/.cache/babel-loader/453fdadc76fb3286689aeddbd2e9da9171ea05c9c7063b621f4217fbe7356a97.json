{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport { account } from '@/api/account';\nimport { showToast } from '@/components/ToastMessage';\nexport const useUserStore = defineStore('user', () => {\n  const token = ref(localStorage.getItem('token') || '');\n  const userInfo = ref(null);\n\n  // 判断是否登录\n  const isLoggedIn = computed(() => {\n    return !!token.value;\n  });\n\n  // 判断是否是会员\n  const isPro = computed(() => {\n    return userInfo.value?.is_pro || false;\n  });\n\n  // 设置用户信息\n  const setUserInfo = info => {\n    userInfo.value = info;\n  };\n\n  // 设置 token\n  const setToken = newToken => {\n    token.value = newToken;\n    localStorage.setItem('token', newToken);\n  };\n\n  // 清除用户信息\n  const clearUser = () => {\n    token.value = '';\n    userInfo.value = null;\n    localStorage.removeItem('token');\n  };\n\n  // 获取用户信息\n  const getUserInfo = async () => {\n    try {\n      const response = await account.getUserInfo();\n      if (response?.data?.code === 200) {\n        const userData = response.data.data;\n        userInfo.value = _objectSpread(_objectSpread({}, userData), {}, {\n          id: userData.id,\n          uid: userData.uid,\n          username: userData.username,\n          phone: userData.phone || null,\n          email: userData.email || null,\n          avatar: userData.avatar || null,\n          position: userData.position || null,\n          bio: userData.bio || null,\n          is_vip: userData.is_vip || false,\n          vip_type: userData.vip_type || 'none',\n          vip_expire_time: userData.vip_expire_time || null,\n          vip_status: userData.vip_status || '普通用户',\n          is_staff: userData.is_staff || false,\n          background_image: userData.background_image || null\n        });\n        return userInfo.value;\n      }\n      return null;\n    } catch (error) {\n      console.error('获取用户信息失败:', error);\n      showToast('获取用户信息失败', 'error');\n      throw error;\n    }\n  };\n  return {\n    token,\n    userInfo,\n    isLoggedIn,\n    isPro,\n    setUserInfo,\n    setToken,\n    clearUser,\n    getUserInfo\n  };\n});","map":{"version":3,"names":["defineStore","ref","computed","account","showToast","useUserStore","token","localStorage","getItem","userInfo","isLoggedIn","value","isPro","is_pro","setUserInfo","info","setToken","newToken","setItem","clearUser","removeItem","getUserInfo","response","data","code","userData","_objectSpread","id","uid","username","phone","email","avatar","position","bio","is_vip","vip_type","vip_expire_time","vip_status","is_staff","background_image","error","console"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/user.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { account } from '@/api/account'\nimport { showToast } from '@/components/ToastMessage'\n\nexport const useUserStore = defineStore('user', () => {\n  const token = ref(localStorage.getItem('token') || '')\n  const userInfo = ref(null)\n  \n  // 判断是否登录\n  const isLoggedIn = computed(() => {\n    return !!token.value\n  })\n  \n  // 判断是否是会员\n  const isPro = computed(() => {\n    return userInfo.value?.is_pro || false\n  })\n  \n  // 设置用户信息\n  const setUserInfo = (info) => {\n    userInfo.value = info\n  }\n  \n  // 设置 token\n  const setToken = (newToken) => {\n    token.value = newToken\n    localStorage.setItem('token', newToken)\n  }\n  \n  // 清除用户信息\n  const clearUser = () => {\n    token.value = ''\n    userInfo.value = null\n    localStorage.removeItem('token')\n  }\n\n  // 获取用户信息\n  const getUserInfo = async () => {\n    try {\n      const response = await account.getUserInfo()\n      if (response?.data?.code === 200) {\n        const userData = response.data.data\n        userInfo.value = {\n          ...userData,\n          id: userData.id,\n          uid: userData.uid,\n          username: userData.username,\n          phone: userData.phone || null,\n          email: userData.email || null,\n          avatar: userData.avatar || null,\n          position: userData.position || null,\n          bio: userData.bio || null,\n          is_vip: userData.is_vip || false,\n          vip_type: userData.vip_type || 'none',\n          vip_expire_time: userData.vip_expire_time || null,\n          vip_status: userData.vip_status || '普通用户',\n          is_staff: userData.is_staff || false,\n          background_image: userData.background_image || null\n        }\n        return userInfo.value\n      }\n      return null\n    } catch (error) {\n      console.error('获取用户信息失败:', error)\n      showToast('获取用户信息失败', 'error')\n      throw error\n    }\n  }\n  \n  return {\n    token,\n    userInfo,\n    isLoggedIn,\n    isPro,\n    setUserInfo,\n    setToken,\n    clearUser,\n    getUserInfo\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed, onMounted, onUnmounted, watch } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { showToast } from '@/components/ToastMessage';\nimport { useDeleteAccount } from '@/composables/useDeleteAccount';\nimport { usePhone } from '@/composables/usePhone';\nimport { useEmail } from '@/composables/useEmail';\nimport { useChangePassword } from '@/composables/useChangePassword';\nimport { account } from '@/api/account';\nimport { useAuthStore } from '@/stores/auth';\nimport { useUserStore } from '@/stores/user';\nimport { useAccountStore } from '@/stores/account';\nexport default {\n  __name: 'AccountSettings',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const userStore = useUserStore();\n    const accountStore = useAccountStore();\n\n    // 从 accountStore 获取用户信息\n    const email = computed(() => accountStore.userInfo?.email);\n    const phone = computed(() => accountStore.userInfo?.phone);\n\n    // 处理邮箱更新\n    const handleEmailUpdate = async () => {\n      if (!isEmailFormValid.value) {\n        showToast('请填写完整信息', 'warning');\n        return;\n      }\n      try {\n        emailManager.state.loading = true;\n        const response = await account.bindEmail({\n          email: emailManager.state.value,\n          code: emailManager.state.code,\n          password: emailManager.state.password\n        });\n        if (response?.data?.message) {\n          showToast(response.data.message, 'success');\n          closeEmailModal();\n          await accountStore.fetchUserInfo();\n        }\n      } catch (error) {\n        console.error('邮箱更新失败:', error);\n        const errorMsg = error.response?.data?.detail || error.message || '邮箱更新失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        emailManager.state.loading = false;\n      }\n    };\n\n    // 处理确认注销\n    const handleConfirmDelete = async () => {\n      if (!deleteFormState.value.password) {\n        showToast('请输入密码', 'warning');\n        return;\n      }\n      try {\n        deleteFormState.value.loading = true;\n        const response = await account.deleteAccount({\n          password: deleteFormState.value.password\n        });\n        if (response?.data?.code === 200) {\n          showToast('账号已注销', 'success');\n          // 使用 auth store 的 logout 方法清除所有状态\n          await authStore.logout();\n          // 清除其他可能的状态\n          localStorage.removeItem('isLoggedIn');\n          // 强制刷新页面以确保所有状态都被清除\n          window.location.href = '/login';\n        }\n      } catch (error) {\n        console.error('注销失败:', error);\n        const errorMsg = error.response?.data?.detail || error.response?.data?.message || error.message || '注销失败';\n        showToast(errorMsg, 'error');\n      } finally {\n        deleteFormState.value.loading = false;\n      }\n    };\n\n    // 更新手机号\n    const handlePhoneUpdate = async () => {\n      const phoneRegex = /^1[3-9]\\d{9}$/;\n      if (!phoneManager.state.value || !phoneRegex.test(phoneManager.state.value)) {\n        showToast('请输入正确的手机号', 'warning');\n        return;\n      }\n      if (!phoneManager.state.code || phoneManager.state.code.length !== 6) {\n        showToast('请输入6位验证码', 'warning');\n        return;\n      }\n      try {\n        phoneManager.state.loading = true;\n        const response = await account.changePhone({\n          phone: phoneManager.state.value.trim(),\n          code: phoneManager.state.code.trim()\n        });\n        if (response?.data?.code === 200 || response?.status === 200) {\n          showToast(response.data?.message || '手机号修改成功', 'success');\n          closePhoneModal();\n          await accountStore.fetchUserInfo();\n        }\n      } catch (error) {\n        console.error('手机号更新失败:', error);\n        let errorMsg = '手机号更新失败';\n        if (error.response?.data) {\n          const errorData = error.response.data;\n          if (typeof errorData.detail === 'object') {\n            errorMsg = Object.values(errorData.detail)[0];\n          } else if (typeof errorData.detail === 'string') {\n            errorMsg = errorData.detail;\n          } else if (errorData.message) {\n            errorMsg = errorData.message;\n          }\n        }\n        showToast(errorMsg, 'error');\n      } finally {\n        phoneManager.state.loading = false;\n      }\n    };\n\n    // 获取用户信息\n    const fetchUserInfo = async () => {\n      try {\n        userInfoLoading.value = true;\n        await accountStore.fetchUserInfo();\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        showToast('获取用户信息失败', 'error');\n      } finally {\n        userInfoLoading.value = false;\n      }\n    };\n\n    // 在组件挂载时获取用户信息\n    onMounted(() => {\n      fetchUserInfo();\n      watch(showPasswordModal, newVal => {\n        console.log('Password modal state changed:', newVal);\n      });\n    });\n\n    // No changes to rest of the script section\n\n    const __returned__ = {\n      router,\n      authStore,\n      userStore,\n      accountStore,\n      email,\n      phone,\n      handleEmailUpdate,\n      handleConfirmDelete,\n      handlePhoneUpdate,\n      fetchUserInfo,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      watch,\n      get useRouter() {\n        return useRouter;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get useDeleteAccount() {\n        return useDeleteAccount;\n      },\n      get usePhone() {\n        return usePhone;\n      },\n      get useEmail() {\n        return useEmail;\n      },\n      get useChangePassword() {\n        return useChangePassword;\n      },\n      get account() {\n        return account;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get useUserStore() {\n        return useUserStore;\n      },\n      get useAccountStore() {\n        return useAccountStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","useRouter","showToast","useDeleteAccount","usePhone","useEmail","useChangePassword","account","useAuthStore","useUserStore","useAccountStore","router","authStore","userStore","accountStore","email","userInfo","phone","handleEmailUpdate","isEmailFormValid","value","emailManager","state","loading","response","bindEmail","code","password","data","message","closeEmailModal","fetchUserInfo","error","console","errorMsg","detail","handleConfirmDelete","deleteFormState","deleteAccount","logout","localStorage","removeItem","window","location","href","handlePhoneUpdate","phoneRegex","phoneManager","test","length","changePhone","trim","status","closePhoneModal","errorData","Object","values","userInfoLoading","showPasswordModal","newVal","log"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/AccountSettings.vue"],"sourcesContent":["<template>\n  <!-- No changes to template section -->\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { showToast } from '@/components/ToastMessage'\nimport { useDeleteAccount } from '@/composables/useDeleteAccount'\nimport { usePhone } from '@/composables/usePhone'\nimport { useEmail } from '@/composables/useEmail'\nimport { useChangePassword } from '@/composables/useChangePassword'\nimport { account } from '@/api/account'\nimport { useAuthStore } from '@/stores/auth'\nimport { useUserStore } from '@/stores/user'\nimport { useAccountStore } from '@/stores/account'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\nconst userStore = useUserStore()\nconst accountStore = useAccountStore()\n\n// 从 accountStore 获取用户信息\nconst email = computed(() => accountStore.userInfo?.email)\nconst phone = computed(() => accountStore.userInfo?.phone)\n\n// 处理邮箱更新\nconst handleEmailUpdate = async () => {\n  if (!isEmailFormValid.value) {\n    showToast('请填写完整信息', 'warning')\n    return\n  }\n\n  try {\n    emailManager.state.loading = true\n    const response = await account.bindEmail({\n      email: emailManager.state.value,\n      code: emailManager.state.code,\n      password: emailManager.state.password\n    })\n\n    if (response?.data?.message) {\n      showToast(response.data.message, 'success')\n      closeEmailModal()\n      await accountStore.fetchUserInfo()\n    }\n  } catch (error) {\n    console.error('邮箱更新失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.message || \n                    '邮箱更新失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    emailManager.state.loading = false\n  }\n}\n\n// 处理确认注销\nconst handleConfirmDelete = async () => {\n  if (!deleteFormState.value.password) {\n    showToast('请输入密码', 'warning')\n    return\n  }\n  \n  try {\n    deleteFormState.value.loading = true\n    const response = await account.deleteAccount({\n      password: deleteFormState.value.password\n    })\n    \n    if (response?.data?.code === 200) {\n      showToast('账号已注销', 'success')\n      // 使用 auth store 的 logout 方法清除所有状态\n      await authStore.logout()\n      // 清除其他可能的状态\n      localStorage.removeItem('isLoggedIn')\n      // 强制刷新页面以确保所有状态都被清除\n      window.location.href = '/login'\n    }\n  } catch (error) {\n    console.error('注销失败:', error)\n    const errorMsg = error.response?.data?.detail || \n                    error.response?.data?.message || \n                    error.message || \n                    '注销失败'\n    showToast(errorMsg, 'error')\n  } finally {\n    deleteFormState.value.loading = false\n  }\n}\n\n// 更新手机号\nconst handlePhoneUpdate = async () => {\n  const phoneRegex = /^1[3-9]\\d{9}$/\n  if (!phoneManager.state.value || !phoneRegex.test(phoneManager.state.value)) {\n    showToast('请输入正确的手机号', 'warning')\n    return\n  }\n  \n  if (!phoneManager.state.code || phoneManager.state.code.length !== 6) {\n    showToast('请输入6位验证码', 'warning')\n    return\n  }\n\n  try {\n    phoneManager.state.loading = true\n    const response = await account.changePhone({\n      phone: phoneManager.state.value.trim(),\n      code: phoneManager.state.code.trim()\n    })\n\n    if (response?.data?.code === 200 || response?.status === 200) {\n      showToast(response.data?.message || '手机号修改成功', 'success')\n      closePhoneModal()\n      await accountStore.fetchUserInfo()\n    }\n  } catch (error) {\n    console.error('手机号更新失败:', error)\n    let errorMsg = '手机号更新失败'\n    \n    if (error.response?.data) {\n      const errorData = error.response.data\n      if (typeof errorData.detail === 'object') {\n        errorMsg = Object.values(errorData.detail)[0]\n      } else if (typeof errorData.detail === 'string') {\n        errorMsg = errorData.detail\n      } else if (errorData.message) {\n        errorMsg = errorData.message\n      }\n    }\n    \n    showToast(errorMsg, 'error')\n  } finally {\n    phoneManager.state.loading = false\n  }\n}\n\n// 获取用户信息\nconst fetchUserInfo = async () => {\n  try {\n    userInfoLoading.value = true\n    await accountStore.fetchUserInfo()\n  } catch (error) {\n    console.error('获取用户信息失败:', error)\n    showToast('获取用户信息失败', 'error')\n  } finally {\n    userInfoLoading.value = false\n  }\n}\n\n// 在组件挂载时获取用户信息\nonMounted(() => {\n  fetchUserInfo()\n  watch(showPasswordModal, (newVal) => {\n    console.log('Password modal state changed:', newVal)\n  })\n})\n\n// No changes to rest of the script section\n</script>\n\n<style scoped>\n/* No changes to style section */\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
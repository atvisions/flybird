{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { account } from '@/api/account';\nimport { showToast } from '@/components/ToastMessage';\nexport function useDeleteAccount() {\n  const router = useRouter();\n  const store = useStore();\n  const loading = ref(false);\n  const handleDeleteAccount = async password => {\n    try {\n      loading.value = true;\n      const response = await account.deleteAccount({\n        password\n      });\n      if (response.data?.code === 200) {\n        showToast('账号注销成功', 'success');\n\n        // 清理本地存储和状态\n        await store.dispatch('logout');\n\n        // 等待一下再跳转\n        setTimeout(() => {\n          router.push('/login');\n        }, 1500);\n      }\n    } catch (error) {\n      console.error('注销账号失败:', error);\n      showToast(error.response?.data?.message || '注销账号失败', 'error');\n      throw error; // 向上传递错误，让调用者也能处理\n    } finally {\n      loading.value = false;\n    }\n  };\n  return {\n    loading,\n    handleDeleteAccount\n  };\n}","map":{"version":3,"names":["ref","useRouter","useStore","account","showToast","useDeleteAccount","router","store","loading","handleDeleteAccount","password","value","response","deleteAccount","data","code","dispatch","setTimeout","push","error","console","message"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/composables/useDeleteAccount.js"],"sourcesContent":["import { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { account } from '@/api/account'\nimport { showToast } from '@/components/ToastMessage'\n\nexport function useDeleteAccount() {\n  const router = useRouter()\n  const store = useStore()\n  const loading = ref(false)\n\n  const handleDeleteAccount = async (password) => {\n    try {\n      loading.value = true\n      const response = await account.deleteAccount({ password })\n      \n      if (response.data?.code === 200) {\n        showToast('账号注销成功', 'success')\n        \n        // 清理本地存储和状态\n        await store.dispatch('logout')\n        \n        // 等待一下再跳转\n        setTimeout(() => {\n          router.push('/login')\n        }, 1500)\n      }\n    } catch (error) {\n      console.error('注销账号失败:', error)\n      showToast(error.response?.data?.message || '注销账号失败', 'error')\n      throw error // 向上传递错误，让调用者也能处理\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return {\n    loading,\n    handleDeleteAccount\n  }\n} "],"mappings":"AAAA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,SAAS,QAAQ,2BAA2B;AAErD,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,MAAMC,MAAM,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAMM,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAMM,OAAO,GAAGR,GAAG,CAAC,KAAK,CAAC;EAE1B,MAAMS,mBAAmB,GAAG,MAAOC,QAAQ,IAAK;IAC9C,IAAI;MACFF,OAAO,CAACG,KAAK,GAAG,IAAI;MACpB,MAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,aAAa,CAAC;QAAEH;MAAS,CAAC,CAAC;MAE1D,IAAIE,QAAQ,CAACE,IAAI,EAAEC,IAAI,KAAK,GAAG,EAAE;QAC/BX,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC;;QAE9B;QACA,MAAMG,KAAK,CAACS,QAAQ,CAAC,QAAQ,CAAC;;QAE9B;QACAC,UAAU,CAAC,MAAM;UACfX,MAAM,CAACY,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/Bf,SAAS,CAACe,KAAK,CAACP,QAAQ,EAAEE,IAAI,EAAEO,OAAO,IAAI,QAAQ,EAAE,OAAO,CAAC;MAC7D,MAAMF,KAAK,EAAC;IACd,CAAC,SAAS;MACRX,OAAO,CAACG,KAAK,GAAG,KAAK;IACvB;EACF,CAAC;EAED,OAAO;IACLH,OAAO;IACPC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport profile from '@/api/profile';\nimport { ElMessage } from 'element-plus';\nexport function useModules(layoutData) {\n  const loading = ref(false);\n  const modules = ref([]);\n  const fetchModulesData = async () => {\n    loading.value = true;\n    try {\n      const response = await profile.getData();\n      if (response.data?.code === 200) {\n        const data = response.data.data;\n        modules.value = [{\n          type: 'basic_info',\n          data: data.basic_info || {},\n          name: '基本信息',\n          editable: true\n        }, {\n          type: 'job_intention',\n          data: data.job_intention || {},\n          name: '求职意向',\n          editable: true\n        }, {\n          type: 'work_experience',\n          data: data.work_experience || [],\n          name: '工作经历',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'education',\n          data: data.education || [],\n          name: '教育经历',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'project',\n          data: data.project || [],\n          name: '项目经历',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'skill',\n          data: data.skill || [],\n          name: '专业技能',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'certificate',\n          data: data.certificate || [],\n          name: '证书奖项',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'language',\n          data: data.language || [],\n          name: '语言能力',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'portfolio',\n          data: data.portfolio || [],\n          name: '作品展示',\n          editable: true,\n          isArray: true\n        }, {\n          type: 'social_link',\n          data: data.social_link || [],\n          name: '社交主页',\n          editable: true,\n          isArray: true\n        }];\n      }\n    } catch (error) {\n      console.error('获取模块数据失败:', error);\n      ElMessage.error('获取模块数据失败');\n    } finally {\n      loading.value = false;\n    }\n  };\n  return {\n    loading,\n    modules,\n    fetchModulesData\n  };\n}","map":{"version":3,"names":["ref","onMounted","profile","ElMessage","useModules","layoutData","loading","modules","fetchModulesData","value","response","getData","data","code","type","basic_info","name","editable","job_intention","work_experience","isArray","education","project","skill","certificate","language","portfolio","social_link","error","console"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/composables/useModules.js"],"sourcesContent":["import { ref, onMounted } from 'vue'\nimport profile from '@/api/profile'\nimport { ElMessage } from 'element-plus'\n\nexport function useModules(layoutData) {\n  const loading = ref(false)\n  const modules = ref([])\n\n  const fetchModulesData = async () => {\n    loading.value = true\n    try {\n      const response = await profile.getData()\n      if (response.data?.code === 200) {\n        const data = response.data.data\n        modules.value = [\n          { \n            type: 'basic_info', \n            data: data.basic_info || {},\n            name: '基本信息',\n            editable: true\n          },\n          { \n            type: 'job_intention', \n            data: data.job_intention || {},\n            name: '求职意向',\n            editable: true\n          },\n          { \n            type: 'work_experience', \n            data: data.work_experience || [],\n            name: '工作经历',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'education', \n            data: data.education || [],\n            name: '教育经历',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'project', \n            data: data.project || [],\n            name: '项目经历',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'skill', \n            data: data.skill || [],\n            name: '专业技能',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'certificate', \n            data: data.certificate || [],\n            name: '证书奖项',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'language', \n            data: data.language || [],\n            name: '语言能力',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'portfolio', \n            data: data.portfolio || [],\n            name: '作品展示',\n            editable: true,\n            isArray: true\n          },\n          { \n            type: 'social_link', \n            data: data.social_link || [],\n            name: '社交主页',\n            editable: true,\n            isArray: true\n          }\n        ]\n      }\n    } catch (error) {\n      console.error('获取模块数据失败:', error)\n      ElMessage.error('获取模块数据失败')\n    } finally {\n      loading.value = false\n    }\n  }\n\n  return {\n    loading,\n    modules,\n    fetchModulesData\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport DesignElement from './DesignElement.vue';\nexport default {\n  __name: 'Canvas',\n  props: {\n    scale: {\n      type: Number,\n      default: 1\n    }\n  },\n  emits: ['element-select'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n\n    // 状态\n    const isDragOver = ref(false);\n    const elements = ref([]);\n    const selectedElement = ref(null);\n\n    // 数据字段\n    const dataFields = ref([]);\n\n    // 获取数据字段定义\n    const fetchDataFields = async () => {\n      try {\n        // TODO: 替换为实际的API调用\n        const response = await fetch('/api/resume/fields');\n        const data = await response.json();\n        dataFields.value = data.fields;\n      } catch (error) {\n        console.error('获取数据字段失败:', error);\n        // 使用一些默认字段作为备选\n        dataFields.value = [{\n          label: '姓名',\n          field: 'name'\n        }, {\n          label: '电话',\n          field: 'phone'\n        }, {\n          label: '邮箱',\n          field: 'email'\n        }];\n      }\n    };\n\n    // 处理画布点击\n    const handleCanvasClick = e => {\n      if (e.target === e.currentTarget) {\n        selectedElement.value = null;\n        emit('element-select', null);\n      }\n    };\n\n    // 处理元素选择\n    const handleElementSelect = element => {\n      selectedElement.value = element;\n      emit('element-select', element);\n    };\n\n    // 处理元素更新\n    const handleElementUpdate = updatedElement => {\n      const index = elements.value.findIndex(el => el.id === updatedElement.id);\n      if (index > -1) {\n        elements.value[index] = _objectSpread({}, updatedElement);\n        if (selectedElement.value?.id === updatedElement.id) {\n          selectedElement.value = _objectSpread({}, updatedElement);\n        }\n      }\n    };\n\n    // 处理删除元素\n    const handleDeleteElement = () => {\n      if (selectedElement.value) {\n        const index = elements.value.findIndex(el => el.id === selectedElement.value.id);\n        if (index > -1) {\n          elements.value.splice(index, 1);\n          selectedElement.value = null;\n          emit('element-select', null);\n        }\n      }\n    };\n\n    // 处理键盘事件\n    const handleKeyDown = e => {\n      if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n        e.preventDefault();\n        handleDeleteElement();\n      }\n    };\n\n    // 添加和移除全局键盘事件监听\n    onMounted(() => {\n      document.addEventListener('keydown', handleKeyDown);\n      fetchDataFields();\n    });\n    onUnmounted(() => {\n      document.removeEventListener('keydown', handleKeyDown);\n    });\n\n    // 处理元素拖拽\n    const handleElementDrop = event => {\n      const elementType = event.dataTransfer.getData('element-type');\n      if (!elementType) return;\n      try {\n        const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'));\n        const rect = event.currentTarget.getBoundingClientRect();\n        const x = (event.clientX - rect.left) / props.scale;\n        const y = (event.clientY - rect.top) / props.scale;\n        const newElement = {\n          id: Date.now().toString(),\n          type: elementType,\n          x,\n          y,\n          width: elementConfig.width || 100,\n          height: elementConfig.height || 100,\n          rotation: 0,\n          content: elementConfig.content,\n          placeholder: elementConfig.placeholder,\n          styles: elementConfig.styles || {}\n        };\n        elements.value.push(newElement);\n        // 自动选中新添加的元素\n        selectedElement.value = newElement;\n        emit('element-select', newElement);\n        isDragOver.value = false;\n      } catch (error) {\n        console.error('处理元素拖放时出错:', error);\n      }\n    };\n\n    // 处理拖拽进入\n    const handleDragEnter = event => {\n      event.preventDefault();\n      isDragOver.value = true;\n    };\n\n    // 处理拖拽离开\n    const handleDragLeave = event => {\n      event.preventDefault();\n      isDragOver.value = false;\n    };\n\n    // 导出布局数据\n    const exportLayoutData = () => {\n      return {\n        elements: elements.value.map(element => _objectSpread(_objectSpread({}, element), {}, {\n          dataBinding: element.dataBinding\n        }))\n      };\n    };\n\n    // 加载模板\n    const loadTemplate = (template, profileData) => {\n      // 加载设计元素\n      elements.value = (template.elements || []).map(element => {\n        // 如果元素有数据绑定,注入实际数据\n        if (element.dataBinding) {\n          const {\n            field\n          } = element.dataBinding;\n\n          // 根据元素类型设置实际内容\n          switch (element.type) {\n            case 'image':\n              element.content = profileData?.[field];\n              break;\n            case 'text':\n              element.content = profileData?.[field];\n              break;\n          }\n        }\n        return element;\n      });\n    };\n\n    // 更新元素数据绑定\n    const updateElementDataBinding = (elementId, binding) => {\n      const element = elements.value.find(el => el.id === elementId);\n      if (element) {\n        element.dataBinding = binding;\n        // 更新选中元素的状态\n        if (selectedElement.value?.id === elementId) {\n          selectedElement.value = _objectSpread({}, element);\n        }\n      }\n    };\n\n    // 暴露方法给父组件\n    __expose({\n      loadTemplate,\n      exportLayoutData,\n      updateElementDataBinding,\n      handleElementUpdate\n    });\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      elements,\n      selectedElement,\n      dataFields,\n      fetchDataFields,\n      handleCanvasClick,\n      handleElementSelect,\n      handleElementUpdate,\n      handleDeleteElement,\n      handleKeyDown,\n      handleElementDrop,\n      handleDragEnter,\n      handleDragLeave,\n      exportLayoutData,\n      loadTemplate,\n      updateElementDataBinding,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      DesignElement\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","DesignElement","props","__props","emit","__emit","isDragOver","elements","selectedElement","dataFields","fetchDataFields","response","fetch","data","json","value","fields","error","console","label","field","handleCanvasClick","e","target","currentTarget","handleElementSelect","element","handleElementUpdate","updatedElement","index","findIndex","el","id","_objectSpread","handleDeleteElement","splice","handleKeyDown","key","preventDefault","document","addEventListener","removeEventListener","handleElementDrop","event","elementType","dataTransfer","getData","elementConfig","JSON","parse","rect","getBoundingClientRect","x","clientX","left","scale","y","clientY","top","newElement","Date","now","toString","type","width","height","rotation","content","placeholder","styles","push","handleDragEnter","handleDragLeave","exportLayoutData","map","dataBinding","loadTemplate","template","profileData","updateElementDataBinding","elementId","binding","find","__expose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/Canvas.vue"],"sourcesContent":["<template>\n  <div class=\"canvas-container\">\n    <div class=\"canvas-wrapper\">\n      <div \n        class=\"canvas-content\" \n        :style=\"{ transform: `scale(${scale})` }\"\n        @dragover.prevent\n        @drop.prevent=\"handleElementDrop\"\n        @dragenter.prevent=\"handleDragEnter\"\n        @dragleave.prevent=\"handleDragLeave\"\n        @click.self=\"handleCanvasClick\"\n        tabindex=\"0\"\n        @keydown.delete.prevent=\"handleDeleteElement\"\n        @keydown.backspace.prevent=\"handleDeleteElement\"\n      >\n        <!-- 设计元素列表 -->\n        <template v-for=\"element in elements\" :key=\"element.id\">\n          <DesignElement\n            :element=\"element\"\n            :is-selected=\"selectedElement?.id === element.id\"\n            :scale=\"scale\"\n            :data-fields=\"dataFields\"\n            @select=\"handleElementSelect\"\n            @update=\"handleElementUpdate\"\n          />\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport DesignElement from './DesignElement.vue'\n\nconst props = defineProps({\n  scale: {\n    type: Number,\n    default: 1\n  }\n})\n\nconst emit = defineEmits(['element-select'])\n\n// 状态\nconst isDragOver = ref(false)\nconst elements = ref([])\nconst selectedElement = ref(null)\n\n// 数据字段\nconst dataFields = ref([])\n\n// 获取数据字段定义\nconst fetchDataFields = async () => {\n  try {\n    // TODO: 替换为实际的API调用\n    const response = await fetch('/api/resume/fields')\n    const data = await response.json()\n    dataFields.value = data.fields\n  } catch (error) {\n    console.error('获取数据字段失败:', error)\n    // 使用一些默认字段作为备选\n    dataFields.value = [\n      { label: '姓名', field: 'name' },\n      { label: '电话', field: 'phone' },\n      { label: '邮箱', field: 'email' }\n    ]\n  }\n}\n\n// 处理画布点击\nconst handleCanvasClick = (e) => {\n  if (e.target === e.currentTarget) {\n    selectedElement.value = null\n    emit('element-select', null)\n  }\n}\n\n// 处理元素选择\nconst handleElementSelect = (element) => {\n  selectedElement.value = element\n  emit('element-select', element)\n}\n\n// 处理元素更新\nconst handleElementUpdate = (updatedElement) => {\n  const index = elements.value.findIndex(el => el.id === updatedElement.id)\n  if (index > -1) {\n    elements.value[index] = { ...updatedElement }\n    if (selectedElement.value?.id === updatedElement.id) {\n      selectedElement.value = { ...updatedElement }\n    }\n  }\n}\n\n// 处理删除元素\nconst handleDeleteElement = () => {\n  if (selectedElement.value) {\n    const index = elements.value.findIndex(el => el.id === selectedElement.value.id)\n    if (index > -1) {\n      elements.value.splice(index, 1)\n      selectedElement.value = null\n      emit('element-select', null)\n    }\n  }\n}\n\n// 处理键盘事件\nconst handleKeyDown = (e) => {\n  if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n    e.preventDefault()\n    handleDeleteElement()\n  }\n}\n\n// 添加和移除全局键盘事件监听\nonMounted(() => {\n  document.addEventListener('keydown', handleKeyDown)\n  fetchDataFields()\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeyDown)\n})\n\n// 处理元素拖拽\nconst handleElementDrop = (event) => {\n  const elementType = event.dataTransfer.getData('element-type')\n  if (!elementType) return\n\n  try {\n    const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'))\n    const rect = event.currentTarget.getBoundingClientRect()\n    const x = (event.clientX - rect.left) / props.scale\n    const y = (event.clientY - rect.top) / props.scale\n    \n    const newElement = {\n      id: Date.now().toString(),\n      type: elementType,\n      x,\n      y,\n      width: elementConfig.width || 100,\n      height: elementConfig.height || 100,\n      rotation: 0,\n      content: elementConfig.content,\n      placeholder: elementConfig.placeholder,\n      styles: elementConfig.styles || {}\n    }\n    \n    elements.value.push(newElement)\n    // 自动选中新添加的元素\n    selectedElement.value = newElement\n    emit('element-select', newElement)\n    isDragOver.value = false\n  } catch (error) {\n    console.error('处理元素拖放时出错:', error)\n  }\n}\n\n// 处理拖拽进入\nconst handleDragEnter = (event) => {\n  event.preventDefault()\n  isDragOver.value = true\n}\n\n// 处理拖拽离开\nconst handleDragLeave = (event) => {\n  event.preventDefault()\n  isDragOver.value = false\n}\n\n// 导出布局数据\nconst exportLayoutData = () => {\n  return {\n    elements: elements.value.map(element => ({\n      ...element,\n      dataBinding: element.dataBinding\n    }))\n  }\n}\n\n// 加载模板\nconst loadTemplate = (template, profileData) => {\n  // 加载设计元素\n  elements.value = (template.elements || []).map(element => {\n    // 如果元素有数据绑定,注入实际数据\n    if (element.dataBinding) {\n      const { field } = element.dataBinding\n      \n      // 根据元素类型设置实际内容\n      switch (element.type) {\n        case 'image':\n          element.content = profileData?.[field]\n          break\n        case 'text':\n          element.content = profileData?.[field]\n          break\n      }\n    }\n    return element\n  })\n}\n\n// 更新元素数据绑定\nconst updateElementDataBinding = (elementId, binding) => {\n  const element = elements.value.find(el => el.id === elementId)\n  if (element) {\n    element.dataBinding = binding\n    // 更新选中元素的状态\n    if (selectedElement.value?.id === elementId) {\n      selectedElement.value = { ...element }\n    }\n  }\n}\n\n// 暴露方法给父组件\ndefineExpose({\n  loadTemplate,\n  exportLayoutData,\n  updateElementDataBinding,\n  handleElementUpdate\n})\n</script>\n\n<style scoped>\n.canvas-container {\n  flex: 1;\n  overflow: hidden;\n  background: #f5f5f5;\n  position: relative;\n}\n\n.canvas-wrapper {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 20px;\n}\n\n.canvas-content {\n  width: 794px; /* A4 纸宽度 */\n  min-height: 1123px; /* A4 纸高度 */\n  background: #ffffff;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n  position: relative;\n  transform-origin: top center;\n  outline: none; /* 移除焦点时的轮廓 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport defaultAvatarImage from '@/assets/images/default-avatar.png';\nimport navigation from '@/config/navigation.json';\nimport { eventBus } from '@/utils/eventBus';\nimport { useLogout } from '@/composables/useLogout';\nimport { API_URL } from '@/config';\nimport { showToast } from '@/components/ToastMessage';\n\n// 导入所需的图标\nimport { DocumentTextIcon, UserIcon, Cog6ToothIcon, ArrowRightOnRectangleIcon, BellIcon, HeartIcon, ShieldCheckIcon, UserCircleIcon, WrenchScrewdriverIcon } from '@heroicons/vue/24/outline';\n\n// 添加图标映射函数\n\nexport default {\n  __name: 'HeadView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const getIcon = menuKey => {\n      const iconMap = {\n        // 用户菜单图标\n        'profile': UserCircleIcon,\n        'resumes': DocumentTextIcon,\n        'favorites': HeartIcon,\n        'notifications': BellIcon,\n        'settings': Cog6ToothIcon,\n        'security': ShieldCheckIcon,\n        'account': WrenchScrewdriverIcon,\n        'logout': ArrowRightOnRectangleIcon\n      };\n      return iconMap[menuKey] || UserIcon; // 默认返回 UserIcon\n    };\n\n    // 状态管理\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n    const mobileMenuOpen = ref(false);\n    const userMenuOpen = ref(false);\n    const resourceMenuOpen = ref(false);\n    const mobileSubmenuOpen = ref({});\n    const userBasicInfo = ref(null);\n\n    // 监听 store 中的用户信息变化，更新用户基本信息\n    watch(() => store.state.userInfo, newUserInfo => {\n      if (newUserInfo?.data?.basic_info) {\n        userBasicInfo.value = _objectSpread(_objectSpread({}, newUserInfo.data.basic_info), newUserInfo.data.user);\n      }\n    }, {\n      immediate: true,\n      deep: true\n    });\n\n    // 响应式计算\n    const isMobile = computed(() => {\n      return window.innerWidth < 1024;\n    });\n\n    // 统一的菜单关闭处理\n    const closeMenus = e => {\n      if (!e.target.closest('.resource-menu')) {\n        resourceMenuOpen.value = false;\n      }\n      if (!e.target.closest('.user-menu')) {\n        userMenuOpen.value = false;\n      }\n    };\n\n    // 移动端菜单开关\n    const toggleMenu = () => {\n      mobileMenuOpen.value = !mobileMenuOpen.value;\n      if (mobileMenuOpen.value) {\n        userMenuOpen.value = false;\n        resourceMenuOpen.value = false;\n        mobileSubmenuOpen.value = {};\n      }\n    };\n\n    // 判断当前路由是否匹配\n    const isCurrentRoute = href => {\n      return route.path === href;\n    };\n\n    // 用户昵称计算属性\n    const username = computed(() => {\n      const username = store.state.userInfo?.data?.user?.username;\n      return username || '未设置昵称';\n    });\n\n    // 头像 URL 计算属性\n    const avatarUrl = computed(() => {\n      const avatar = store.state.userInfo?.data?.basic_info?.avatar;\n      if (!avatar) return defaultAvatarImage;\n      if (avatar.startsWith('http') || avatar.startsWith('data:')) {\n        return avatar;\n      }\n      return `${API_URL}${avatar}`;\n    });\n\n    // 获取用户信息的函数\n    const fetchUserInfo = async () => {\n      if (store.state.isAuthenticated) {\n        try {\n          await store.dispatch('fetchUserInfo');\n          userBasicInfo.value = _objectSpread(_objectSpread({}, store.state.userInfo?.data?.basic_info), store.state.userInfo?.data?.user);\n        } catch (error) {\n          console.error('Failed to fetch user info:', error);\n        }\n      }\n    };\n\n    // 判断是否在消息页面\n    const isMessageRoute = computed(() => {\n      return route.path.includes('/user') && route.query.tab === 'messages';\n    });\n\n    // 测试用：模拟未读消息数量\n    const unreadMessagesCount = ref(5);\n\n    // 获取未读消息数量\n    const fetchUnreadMessagesCount = async () => {\n      try {\n        // TODO: 调用 API 获取未读消息数量\n        // const response = await api.getUnreadMessagesCount()\n        // unreadMessagesCount.value = response.data.count\n        unreadMessagesCount.value = 5; // 临时测试数据\n      } catch (error) {\n        console.error('获取未读消息数量失败:', error);\n      }\n    };\n\n    // 在用户登录状态变化时获取未读消息数量\n    watch(() => store.state.isAuthenticated, newValue => {\n      if (newValue) {\n        fetchUnreadMessagesCount();\n      } else {\n        unreadMessagesCount.value = 0;\n      }\n    }, {\n      immediate: true\n    });\n\n    // 生命周期钩子，监听事件，监听登录状态\n    onMounted(async () => {\n      document.addEventListener('click', closeMenus);\n      window.addEventListener('resize', () => {\n        if (!isMobile.value) {\n          mobileMenuOpen.value = false;\n        }\n      });\n      if (store.state.isAuthenticated) {\n        try {\n          await fetchUserInfo();\n        } catch (error) {\n          console.error('Failed to fetch user info:', error);\n          if (error.response?.status === 401) {\n            store.commit('SET_LOGGED_IN', false);\n          }\n        }\n      }\n      eventBus.on('avatar-updated', handleAvatarUpdate);\n    });\n\n    // 保持原有的事件清理\n    onUnmounted(() => {\n      eventBus.off('avatar-updated', handleAvatarUpdate);\n    });\n\n    // 简化头像更新处理方法\n    const handleAvatarUpdate = newAvatar => {\n      store.commit('SET_USER_INFO', _objectSpread(_objectSpread({}, store.state.userInfo), {}, {\n        data: _objectSpread(_objectSpread({}, store.state.userInfo?.data), {}, {\n          basic_info: _objectSpread(_objectSpread({}, store.state.userInfo?.data?.basic_info), {}, {\n            avatar: newAvatar\n          })\n        })\n      }));\n    };\n    // 从 store 获取用户信息和认证状态，并计算是否已登录\n    const isAuthenticated = computed(() => store.state.isAuthenticated);\n    // 监听登录状态变化\n    watch(() => store.state.isAuthenticated, newValue => {\n      if (newValue) {\n        fetchUserInfo();\n      } else {\n        userBasicInfo.value = null;\n      }\n    }, {\n      immediate: true\n    });\n\n    // 监听头像更新\n    watch(() => store.state.avatarUpdateTime, () => {\n      if (store.state.isAuthenticated) {\n        fetchUserInfo();\n      }\n    });\n\n    // 处理图片加载错误\n    const handleImageError = e => {\n      e.target.src = defaultAvatarImage;\n    };\n\n    // 用户类型\n    const userType = computed(() => '普通用户');\n\n    // 用户菜单选项\n    const userMenuItems = computed(() => {\n      return [{\n        key: 'profile',\n        label: '我的档案',\n        icon: 'profile',\n        action: () => router.push('/user?tab=profile')\n      }, {\n        key: 'resumes',\n        label: '我的简历',\n        icon: 'resumes',\n        action: () => router.push('/user?tab=resumes')\n      }, {\n        key: 'creations',\n        label: '我的创作',\n        icon: 'creations',\n        action: () => router.push('/user?tab=creations')\n      }, {\n        key: 'portfolio',\n        label: '我的作品集',\n        icon: 'portfolio',\n        action: () => router.push('/user?tab=portfolio')\n      }, {\n        key: 'favorites',\n        label: '我的收藏',\n        icon: 'favorites',\n        action: () => router.push('/user?tab=favorites')\n      }, {\n        key: 'notifications',\n        label: '消息通知',\n        icon: 'notifications',\n        action: () => router.push('/user?tab=messages')\n      }, {\n        key: 'homepage',\n        label: '我的主页',\n        icon: 'homepage',\n        action: () => router.push('/u/10001')\n      }, {\n        key: 'settings',\n        label: '账号设置',\n        icon: 'settings',\n        action: () => router.push('/user?tab=account')\n      }, {\n        key: 'logout',\n        label: '退出登录',\n        icon: 'logout',\n        action: handleLogout\n      }];\n    });\n\n    // 处理退出登录\n    const handleLogout = async () => {\n      try {\n        // 关闭用户菜单\n        userMenuOpen.value = false;\n        await store.dispatch('logout');\n        showToast('退出成功', 'success');\n\n        // 获取当前路径作为重定向地址\n        const currentPath = router.currentRoute.value.fullPath;\n        // 跳转到登录页面，并带上当前路径作为 redirect 参数\n        router.push(`/login?redirect=${encodeURIComponent(currentPath)}`);\n      } catch (error) {\n        console.error('退出失败:', error);\n        showToast('退出失败，请重试', 'error');\n      }\n    };\n    const __returned__ = {\n      getIcon,\n      router,\n      route,\n      store,\n      mobileMenuOpen,\n      userMenuOpen,\n      resourceMenuOpen,\n      mobileSubmenuOpen,\n      userBasicInfo,\n      isMobile,\n      closeMenus,\n      toggleMenu,\n      isCurrentRoute,\n      username,\n      avatarUrl,\n      fetchUserInfo,\n      isMessageRoute,\n      unreadMessagesCount,\n      fetchUnreadMessagesCount,\n      handleAvatarUpdate,\n      isAuthenticated,\n      handleImageError,\n      userType,\n      userMenuItems,\n      handleLogout,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      watch,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get defaultAvatarImage() {\n        return defaultAvatarImage;\n      },\n      get navigation() {\n        return navigation;\n      },\n      get eventBus() {\n        return eventBus;\n      },\n      get useLogout() {\n        return useLogout;\n      },\n      get API_URL() {\n        return API_URL;\n      },\n      get showToast() {\n        return showToast;\n      },\n      get DocumentTextIcon() {\n        return DocumentTextIcon;\n      },\n      get UserIcon() {\n        return UserIcon;\n      },\n      get Cog6ToothIcon() {\n        return Cog6ToothIcon;\n      },\n      get ArrowRightOnRectangleIcon() {\n        return ArrowRightOnRectangleIcon;\n      },\n      get BellIcon() {\n        return BellIcon;\n      },\n      get HeartIcon() {\n        return HeartIcon;\n      },\n      get ShieldCheckIcon() {\n        return ShieldCheckIcon;\n      },\n      get UserCircleIcon() {\n        return UserCircleIcon;\n      },\n      get WrenchScrewdriverIcon() {\n        return WrenchScrewdriverIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","watch","useRouter","useRoute","useStore","defaultAvatarImage","navigation","eventBus","useLogout","API_URL","showToast","DocumentTextIcon","UserIcon","Cog6ToothIcon","ArrowRightOnRectangleIcon","BellIcon","HeartIcon","ShieldCheckIcon","UserCircleIcon","WrenchScrewdriverIcon","getIcon","menuKey","iconMap","router","route","store","mobileMenuOpen","userMenuOpen","resourceMenuOpen","mobileSubmenuOpen","userBasicInfo","state","userInfo","newUserInfo","data","basic_info","value","_objectSpread","user","immediate","deep","isMobile","window","innerWidth","closeMenus","e","target","closest","toggleMenu","isCurrentRoute","href","path","username","avatarUrl","avatar","startsWith","fetchUserInfo","isAuthenticated","dispatch","error","console","isMessageRoute","includes","query","tab","unreadMessagesCount","fetchUnreadMessagesCount","newValue","document","addEventListener","response","status","commit","on","handleAvatarUpdate","off","newAvatar","avatarUpdateTime","handleImageError","src","userType","userMenuItems","key","label","icon","action","push","handleLogout","currentPath","currentRoute","fullPath","encodeURIComponent"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/HeadView.vue"],"sourcesContent":["<template>\n  <header class=\"fixed w-full top-0 z-50 bg-white shadow\">\n    <!-- 主导航栏 -->\n    <nav class=\"mx-auto flex max-w-7xl items-center justify-between p-4 lg:px-8\" aria-label=\"Global\">\n      <!-- Logo 区域 -->\n      <div class=\"flex-shrink-0 flex items-center mr-8\">\n        <router-link to=\"/\" class=\"flex items-center space-x-2\">\n          <img src=\"@/assets/images/logo.png\" alt=\"\" class=\"w-8 h-8\">\n          <span class=\"text-gray-500 text-xl whitespace-nowrap\">飞鸟简历</span>\n        </router-link>\n      </div>\n\n      <!-- 桌面端导航菜单 -->\n      <div class=\"hidden lg:flex lg:gap-x-12\">\n        <template v-for=\"item in navigation.main\" :key=\"item.name\">\n          <!-- 普通菜单项 -->\n          <router-link v-if=\"!item.children\" :to=\"item.href\" :class=\"[\n            'text-base  leading-6',\n            isCurrentRoute(item.href)\n              ? 'text-indigo-600 font-semibold'\n              : 'text-gray-900 hover:text-indigo-600'\n          ]\">\n            {{ item.name }}\n          </router-link>       \n        </template>\n\n        <router-link to=\"/pro\"\n          class=\"text-base leading-6 text-yellow-600 hover:text-yellow-500 flex items-center\">\n          <svg class=\"w-5 h-5 mr-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n            <path d=\"M5 16L3 5L8.5 10L12 4L15.5 10L21 5L19 16H5Z\" stroke-width=\"2\" stroke-linecap=\"round\"\n              stroke-linejoin=\"round\" />\n          </svg>\n          会员\n        </router-link>\n      </div>\n\n      <!-- 右侧用户区域 -->\n      <div class=\"flex items-center\">\n        <template v-if=\"!isAuthenticated\">\n          <!-- 未登录状态 -->\n          <div class=\"hidden lg:block\">\n            <router-link \n              :to=\"`/login?redirect=${encodeURIComponent($route.fullPath)}`\" \n              class=\"text-base leading-6 text-gray-900 hover:text-indigo-600\"\n            >\n              登录\n            </router-link>\n            <router-link \n              to=\"/register\"\n              class=\"ml-4 text-base leading-6 text-white bg-primary-500 px-3 py-2 rounded-md hover:bg-primary-500\"\n            >\n              注册\n            </router-link>\n          </div>\n        </template>\n\n        <!-- 已登录状态 -->\n        <template v-else>\n          <!-- 消息图标 -->\n          <router-link \n            to=\"/user?tab=messages\"\n            class=\"mr-4 p-1.5 text-gray-500 hover:text-indigo-600 relative inline-flex items-center justify-center\"\n            :class=\"{ 'text-indigo-600': isMessageRoute }\"\n          >\n            <BellIcon \n              class=\"w-6 h-6\" \n              :class=\"{ 'text-indigo-600': isMessageRoute }\"\n            />\n            <!-- 未读消息数量 -->\n            <span \n              v-if=\"unreadMessagesCount > 0\"\n              class=\"absolute -top-0.5 -right-0.5 min-w-[16px] h-[16px] bg-red-500 rounded-full text-[10px] font-medium text-white flex items-center justify-center px-1\"\n            >\n              {{ unreadMessagesCount > 99 ? '99+' : unreadMessagesCount }}\n            </span>\n          </router-link>\n          <div class=\"relative\">\n            <button @click.stop=\"userMenuOpen = !userMenuOpen\"\n              class=\"flex items-center space-x-1 text-sm font-semibold text-gray-900 hover:text-indigo-600\">\n              <img \n                :src=\"avatarUrl\"\n                @error=\"handleImageError\"\n                class=\"h-8 w-8 rounded-full\"\n                alt=\"用户头像\"\n              />\n              <span class=\"hidden lg:inline\">\n                {{ username }}\n              </span>\n              <svg class=\"h-5 w-5\" :class=\"{ 'rotate-180': userMenuOpen }\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\"\n                  d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                  clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </template>\n\n        <!-- 移动端菜单按钮 -->\n        <button type=\"button\" @click=\"toggleMenu\"\n          class=\"lg:hidden inline-flex items-center justify-center rounded-md ml-2 p-2 text-gray-700\">\n          <span class=\"sr-only\">打开菜单</span>\n          <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\n          </svg>\n        </button>\n      </div>\n    </nav>\n\n    <!-- 用户下拉菜单 -->\n    <div v-if=\"userMenuOpen\" :class=\"[\n      'fixed lg:absolute',\n      'top-[72px]',\n      'bg-white shadow-lg z-[100]',\n      'inset-x-0 lg:inset-x-auto',\n      'lg:w-64 lg:rounded-lg'\n    ]\" :style=\"{\n      [isMobile ? '' : 'right']: isMobile ? '' : 'calc((100vw - 1280px) / 2)',\n    }\">\n      <!-- 用户信息头部 -->\n      <div class=\"px-5 py-4 border-b border-gray-100\">\n        <div class=\"flex items-center space-x-3\">\n          <img \n            :src=\"avatarUrl\"\n            :key=\"avatarUrl\"\n            class=\"h-12 w-12 rounded-full\" \n            alt=\"用户头像\" \n            @error=\"handleImageError\" \n          />\n          <div>\n            <div class=\"text-base font-medium text-gray-900\">{{ username }}</div>\n            <div class=\"text-sm text-gray-500\">{{ userType }}</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 菜单项 -->\n      <div class=\"py-2\">\n        <button v-for=\"item in userMenuItems\" :key=\"item.key\"\n          class=\"block w-full px-5 py-3 text-base text-gray-700 hover:bg-gray-50 text-left\"\n          @click=\"item.action\">\n          <div class=\"flex items-center space-x-2\">\n            <component \n              :is=\"getIcon(item.icon)\" \n              class=\"flex-shrink-0 h-5 w-5 text-gray-400 group-hover:text-indigo-600\" \n            />\n            <span>{{ item.label }}</span>\n          </div>\n        </button>\n      </div>\n\n    </div>\n\n    <!-- 移动端菜单抽屉 -->\n    <div v-if=\"mobileMenuOpen\" class=\"fixed inset-0 z-50\" @click=\"toggleMenu\">\n      <div class=\"fixed inset-0 bg-black/25\"></div>\n\n      <div class=\"fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white sm:max-w-sm\" @click.stop>\n        <!-- 移动端菜单头部 -->\n        <div class=\"flex items-center justify-between p-4\">\n          <router-link to=\"/\" class=\"flex items-center space-x-2\" @click=\"toggleMenu\">\n            <img src=\"@/assets/images/logo.png\" alt=\"\" class=\"w-8 h-8\">\n            <span class=\"text-gray-500 text-xl whitespace-nowrap\">飞鸟简历</span>\n          </router-link>\n          <!-- 关闭按钮 -->\n          <button type=\"button\" @click=\"toggleMenu\" class=\"p-2 text-gray-700\">\n            <span class=\"sr-only\">关闭菜单</span>\n            <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        <!-- 移动端菜单内容 -->\n        <div class=\"border-t border-gray-200\">\n          <!-- 导航菜单 -->\n          <div>\n            <template v-for=\"item in navigation.main\" :key=\"item.name\">\n              <!-- 普通菜单项 -->\n              <router-link v-if=\"!item.children\" :to=\"item.href\"\n                class=\"block px-4 py-3 text-base text-gray-900 border-b border-gray-100\"\n                :class=\"isCurrentRoute(item.href) ? 'text-indigo-600' : ''\" @click=\"toggleMenu\">\n                {{ item.name }}\n              </router-link>\n\n              <!-- 带子菜单的项 -->\n              <div v-else class=\"border-b border-gray-100\">\n                <button class=\"flex items-center justify-between w-full px-4 py-3 text-base text-gray-900\"\n                  @click=\"toggleMobileSubmenu(item.name)\">\n                  <span>{{ item.name }}</span>\n                  <svg class=\"w-5 h-5 transition-transform duration-200\"\n                    :class=\"{ 'rotate-180': mobileSubmenuOpen[item.name] }\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\"\n                      d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                      clip-rule=\"evenodd\" />\n                  </svg>\n                </button>\n\n                <div v-show=\"mobileSubmenuOpen[item.name]\" class=\"bg-gray-50\">\n                  <template v-for=\"category in item.children\" :key=\"category.name\">\n                    <div class=\"px-4 py-2\">\n                      <div class=\"font-medium text-gray-900\">{{ category.name }}</div>\n                      <div class=\"mt-1 space-y-1\">\n                        <router-link v-for=\"subItem in category.children\" :key=\"subItem.name\" :to=\"subItem.href\"\n                          class=\"block py-1 pl-3 text-sm text-gray-600 hover:text-indigo-600\" @click=\"toggleMenu\">\n                          {{ subItem.name }}\n                        </router-link>\n                      </div>\n                    </div>\n                  </template>\n                </div>\n              </div>\n            </template>\n          </div>\n\n          <!-- 未登录状态下显示登录注册按钮 -->\n          <div v-if=\"!isAuthenticated\" class=\"p-4 space-y-3\">\n            <router-link to=\"/login?redirect=${encodeURIComponent($route.fullPath)}`\"\n              class=\"block w-full text-center px-4 py-2 text-[14px] text-gray-900 border border-gray-300 rounded-md hover:bg-gray-50\"\n              @click=\"toggleMenu\">\n              登录\n            </router-link>\n            <router-link to=\"/register?redirect=${encodeURIComponent($route.fullPath)}`\"\n              class=\"block w-full text-center px-4 py-2 text-[14px] text-white bg-indigo-600 rounded-md hover:bg-indigo-500\"\n              @click=\"toggleMenu\">\n              注册\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </header>\n</template>\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport defaultAvatarImage from '@/assets/images/default-avatar.png'\nimport navigation from '@/config/navigation.json'\nimport { eventBus } from '@/utils/eventBus'\nimport { useLogout } from '@/composables/useLogout'\nimport { API_URL } from '@/config'\nimport { showToast } from '@/components/ToastMessage'\n\n// 导入所需的图标\nimport {\n  DocumentTextIcon,\n  UserIcon,\n  Cog6ToothIcon,\n  ArrowRightOnRectangleIcon,\n  BellIcon,\n  HeartIcon,\n  ShieldCheckIcon,\n  UserCircleIcon,\n  WrenchScrewdriverIcon\n} from '@heroicons/vue/24/outline'\n\n// 添加图标映射函数\nconst getIcon = (menuKey) => {\n  const iconMap = {  \n    // 用户菜单图标\n    'profile': UserCircleIcon,\n    'resumes': DocumentTextIcon,\n    'favorites': HeartIcon,\n    'notifications': BellIcon,\n    'settings': Cog6ToothIcon,\n    'security': ShieldCheckIcon,\n    'account': WrenchScrewdriverIcon,\n    'logout': ArrowRightOnRectangleIcon,\n  }\n  return iconMap[menuKey] || UserIcon // 默认返回 UserIcon\n}\n\n// 状态管理\nconst router = useRouter()\nconst route = useRoute()\nconst store = useStore()\nconst mobileMenuOpen = ref(false)\nconst userMenuOpen = ref(false)\nconst resourceMenuOpen = ref(false)\nconst mobileSubmenuOpen = ref({})\nconst userBasicInfo = ref(null)\n\n// 监听 store 中的用户信息变化，更新用户基本信息\nwatch(\n  () => store.state.userInfo,\n  (newUserInfo) => {\n    if (newUserInfo?.data?.basic_info) {\n      userBasicInfo.value = {\n        ...newUserInfo.data.basic_info,\n        ...newUserInfo.data.user\n      }\n    }\n  },\n  { immediate: true, deep: true }\n)\n\n// 响应式计算\nconst isMobile = computed(() => {\n  return window.innerWidth < 1024\n})\n\n\n\n\n// 统一的菜单关闭处理\nconst closeMenus = (e) => {\n  if (!e.target.closest('.resource-menu')) {\n    resourceMenuOpen.value = false\n  }\n  if (!e.target.closest('.user-menu')) {\n    userMenuOpen.value = false\n  }\n}\n\n// 移动端菜单开关\nconst toggleMenu = () => {\n  mobileMenuOpen.value = !mobileMenuOpen.value\n  if (mobileMenuOpen.value) {\n    userMenuOpen.value = false\n    resourceMenuOpen.value = false\n    mobileSubmenuOpen.value = {}\n  }\n}\n\n\n\n\n// 判断当前路由是否匹配\nconst isCurrentRoute = (href) => {\n  return route.path === href\n}\n\n\n\n// 用户昵称计算属性\nconst username = computed(() => {\n  const username = store.state.userInfo?.data?.user?.username\n  return username || '未设置昵称'\n})\n\n// 头像 URL 计算属性\nconst avatarUrl = computed(() => {\n  const avatar = store.state.userInfo?.data?.basic_info?.avatar\n  if (!avatar) return defaultAvatarImage\n  \n  if (avatar.startsWith('http') || avatar.startsWith('data:')) {\n    return avatar\n  }\n  return `${API_URL}${avatar}`\n})\n\n// 获取用户信息的函数\nconst fetchUserInfo = async () => {\n  if (store.state.isAuthenticated) {\n    try {\n      await store.dispatch('fetchUserInfo')\n      userBasicInfo.value = {\n        ...store.state.userInfo?.data?.basic_info,\n        ...store.state.userInfo?.data?.user\n      }\n    } catch (error) {\n      console.error('Failed to fetch user info:', error)\n    }\n  }\n}\n\n// 判断是否在消息页面\nconst isMessageRoute = computed(() => {\n  return route.path.includes('/user') && route.query.tab === 'messages'\n})\n\n// 测试用：模拟未读消息数量\nconst unreadMessagesCount = ref(5)\n\n// 获取未读消息数量\nconst fetchUnreadMessagesCount = async () => {\n  try {\n    // TODO: 调用 API 获取未读消息数量\n    // const response = await api.getUnreadMessagesCount()\n    // unreadMessagesCount.value = response.data.count\n    unreadMessagesCount.value = 5 // 临时测试数据\n  } catch (error) {\n    console.error('获取未读消息数量失败:', error)\n  }\n}\n\n// 在用户登录状态变化时获取未读消息数量\nwatch(() => store.state.isAuthenticated, (newValue) => {\n  if (newValue) {\n    fetchUnreadMessagesCount()\n  } else {\n    unreadMessagesCount.value = 0\n  }\n}, { immediate: true })\n\n// 生命周期钩子，监听事件，监听登录状态\nonMounted(async () => {\n  document.addEventListener('click', closeMenus)\n  window.addEventListener('resize', () => {\n    if (!isMobile.value) {\n      mobileMenuOpen.value = false\n    }\n  })\n  \n  if (store.state.isAuthenticated) {\n    try {\n      await fetchUserInfo()\n    } catch (error) {\n      console.error('Failed to fetch user info:', error)\n      if (error.response?.status === 401) {\n        store.commit('SET_LOGGED_IN', false)\n      }\n    }\n  }\n  \n  eventBus.on('avatar-updated', handleAvatarUpdate)\n})\n\n// 保持原有的事件清理\nonUnmounted(() => {\n  eventBus.off('avatar-updated', handleAvatarUpdate)\n})\n\n// 简化头像更新处理方法\nconst handleAvatarUpdate = (newAvatar) => {\n  store.commit('SET_USER_INFO', {\n    ...store.state.userInfo,\n    data: {\n      ...store.state.userInfo?.data,\n      basic_info: {\n        ...store.state.userInfo?.data?.basic_info,\n        avatar: newAvatar\n      }\n    }\n  })\n}\n// 从 store 获取用户信息和认证状态，并计算是否已登录\nconst isAuthenticated = computed(() => store.state.isAuthenticated)\n// 监听登录状态变化\nwatch(() => store.state.isAuthenticated, (newValue) => {\n  if (newValue) {\n    fetchUserInfo()\n  } else {\n    userBasicInfo.value = null\n  }\n}, { immediate: true })\n\n// 监听头像更新\nwatch(() => store.state.avatarUpdateTime, () => {\n  if (store.state.isAuthenticated) {\n    fetchUserInfo()\n  }\n})\n\n// 处理图片加载错误\nconst handleImageError = (e) => {\n  e.target.src = defaultAvatarImage\n}\n\n// 用户类型\nconst userType = computed(() => '普通用户')\n\n// 用户菜单选项\nconst userMenuItems = computed(() => {\n  return [\n    {\n      key: 'profile',\n      label: '我的档案',\n      icon: 'profile',\n      action: () => router.push('/user?tab=profile')\n    },\n    {\n      key: 'resumes',\n      label: '我的简历',\n      icon: 'resumes',\n      action: () => router.push('/user?tab=resumes')\n    },\n    {\n      key:'creations',\n      label:'我的创作',\n      icon:'creations',\n      action: () => router.push('/user?tab=creations')\n    },\n    {\n      key: 'portfolio',\n      label: '我的作品集',\n      icon: 'portfolio',\n      action: () => router.push('/user?tab=portfolio')\n    },\n    {\n      key: 'favorites',\n      label: '我的收藏',\n      icon: 'favorites',\n      action: () => router.push('/user?tab=favorites')\n    },\n    {\n      key: 'notifications',\n      label: '消息通知',\n      icon: 'notifications',\n      action: () => router.push('/user?tab=messages')\n    },\n    {\n      key: 'homepage',\n      label: '我的主页',\n      icon: 'homepage',\n      action: () => router.push('/u/10001')\n    },\n    {\n      key: 'settings',\n      label: '账号设置',\n      icon: 'settings',\n      action: () => router.push('/user?tab=account')\n    },\n    {\n      key: 'logout',\n      label: '退出登录',\n      icon: 'logout',\n      action: handleLogout\n    }\n  ]\n})\n\n// 处理退出登录\nconst handleLogout = async () => {\n  try {\n    // 关闭用户菜单\n    userMenuOpen.value = false\n    \n    await store.dispatch('logout')\n    showToast('退出成功', 'success')\n    \n    // 获取当前路径作为重定向地址\n    const currentPath = router.currentRoute.value.fullPath\n    // 跳转到登录页面，并带上当前路径作为 redirect 参数\n    router.push(`/login?redirect=${encodeURIComponent(currentPath)}`)\n    \n  } catch (error) {\n    console.error('退出失败:', error)\n    showToast('退出失败，请重试', 'error')\n  }\n}\n\n</script>\n<style scoped>\n/* 添加过渡动画 */\n.aspect-h-9 {\n  position: relative;\n  padding-bottom: 56.25%;\n}\n\n.aspect-h-9 img {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  transition: opacity 0.3s ease;\n}\n\n/* 添加菜单hover效果 */\n.hover\\:bg-gray-100:hover {\n  background-color: rgba(243, 244, 246, 1);\n}\n\n/* 确保下拉菜单定位正确 */\n.resource-menu {\n  position: static;\n}\n\n@media (min-width: 1024px) {\n  .resource-menu {\n    position: relative;\n  }\n}\n\n/* 添加过渡动画 */\n.transition-transform {\n  transition-property: transform;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 200ms;\n}\n\n/* 移动端菜单动画 */\n.mobile-menu-enter-active,\n.mobile-menu-leave-active {\n  transition: transform 0.3s ease-in-out;\n}\n\n.mobile-menu-enter-from,\n.mobile-menu-leave-to {\n  transform: translateX(100%);\n}\n\n/* 下拉菜单动画 */\n.dropdown-enter-active,\n.dropdown-leave-active {\n  transition: opacity 0.2s, transform 0.2s;\n}\n\n.dropdown-enter-from,\n.dropdown-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n/* 确保下拉菜单始终最上层 */\n:deep(.el-dropdown-menu) {\n  z-index: 3000 !important;\n}\n\n/* 调整资源菜单定位 */\n.resource-menu {\n  position: static;\n}\n\n@media (min-width: 1024px) {\n  .resource-menu {\n    position: relative;\n  }\n}\n\n/* 消息图标动画 */\n@keyframes pulse {\n  0% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n}\n\n.animate-pulse {\n  animation: pulse 2s infinite;\n}\n\n/* 消息数量的动画效果 */\n@keyframes scaleIn {\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n}\n\n.absolute {\n  animation: scaleIn 0.2s ease-out;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref, watch, computed } from 'vue';\nexport default {\n  __name: 'PropertyPanel',\n  props: {\n    selectedElement: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 属性状态\n    const borderRadius = ref(0);\n    const backgroundColor = ref('#409EFF');\n    const width = ref(200);\n    const height = ref(200);\n\n    // 文字相关状态\n    const textColor = ref('#333333');\n    const fontSize = ref(16);\n    const textAlign = ref('left');\n    const isBold = ref(false);\n\n    // 计算属性\n    const panelTitle = computed(() => {\n      if (!props.selectedElement) return '';\n      switch (props.selectedElement.type) {\n        case 'image':\n          return '图片属性';\n        case 'shape':\n          return '形状属性';\n        default:\n          return '元素属性';\n      }\n    });\n    const showBorderRadius = computed(() => {\n      return props.selectedElement?.type === 'image' || props.selectedElement?.type === 'shape' && props.selectedElement?.shapeType !== 'triangle';\n    });\n    const showBackgroundColor = computed(() => {\n      return props.selectedElement?.type === 'shape';\n    });\n\n    // 监听选中元素变化\n    watch(() => props.selectedElement, newElement => {\n      if (newElement) {\n        // 更新圆角值\n        borderRadius.value = parseInt(newElement.styles?.borderRadius || 0);\n        // 更新背景色\n        backgroundColor.value = newElement.styles?.backgroundColor || '#409EFF';\n        // 更新尺寸\n        width.value = newElement.width;\n        height.value = newElement.height;\n        // 更新文字样式\n        if (newElement.type === 'text') {\n          textColor.value = newElement.styles?.color || '#333333';\n          fontSize.value = parseInt(newElement.styles?.fontSize) || 16;\n          textAlign.value = newElement.styles?.textAlign || 'left';\n          isBold.value = newElement.styles?.fontWeight === 'bold';\n        }\n      }\n    }, {\n      immediate: true\n    });\n\n    // 监听圆角变化\n    watch(borderRadius, newValue => {\n      handleStyleChange('borderRadius', `${newValue}px`);\n    });\n\n    // 监听背景色变化\n    watch(backgroundColor, newValue => {\n      handleStyleChange('backgroundColor', newValue);\n    });\n\n    // 监听尺寸变化\n    watch([width, height], () => {\n      handleSizeChange();\n    });\n\n    // 监听文字颜色变化\n    watch(textColor, newValue => {\n      handleStyleChange('color', newValue);\n    });\n\n    // 监听字体大小变化\n    watch(fontSize, newValue => {\n      handleStyleChange('fontSize', `${newValue}px`);\n    });\n\n    // 监听对齐方式变化\n    watch(textAlign, newValue => {\n      handleStyleChange('textAlign', newValue);\n    });\n\n    // 监听字体粗细变化\n    watch(isBold, newValue => {\n      handleStyleChange('fontWeight', newValue ? 'bold' : 'normal');\n    });\n\n    // 处理样式变化\n    const handleStyleChange = (property, value) => {\n      if (!props.selectedElement) return;\n      emit('update', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n        styles: _objectSpread(_objectSpread({}, props.selectedElement.styles), {}, {\n          [property]: value\n        })\n      }));\n    };\n\n    // 处理尺寸变化\n    const handleSizeChange = () => {\n      if (!props.selectedElement) return;\n      emit('update', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n        width: width.value,\n        height: height.value\n      }));\n    };\n\n    // 处理层级变化\n    const handleZIndexChange = direction => {\n      if (!props.selectedElement) return;\n      const currentZIndex = parseInt(props.selectedElement.styles?.zIndex || 0);\n      const newZIndex = direction === 'up' ? currentZIndex + 1 : currentZIndex - 1;\n      emit('update', _objectSpread(_objectSpread({}, props.selectedElement), {}, {\n        styles: _objectSpread(_objectSpread({}, props.selectedElement.styles), {}, {\n          zIndex: newZIndex\n        })\n      }));\n    };\n    const __returned__ = {\n      props,\n      emit,\n      borderRadius,\n      backgroundColor,\n      width,\n      height,\n      textColor,\n      fontSize,\n      textAlign,\n      isBold,\n      panelTitle,\n      showBorderRadius,\n      showBackgroundColor,\n      handleStyleChange,\n      handleSizeChange,\n      handleZIndexChange,\n      ref,\n      watch,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","computed","props","__props","emit","__emit","borderRadius","backgroundColor","width","height","textColor","fontSize","textAlign","isBold","panelTitle","selectedElement","type","showBorderRadius","shapeType","showBackgroundColor","newElement","value","parseInt","styles","color","fontWeight","immediate","newValue","handleStyleChange","handleSizeChange","property","_objectSpread","handleZIndexChange","direction","currentZIndex","zIndex","newZIndex"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/PropertyPanel.vue"],"sourcesContent":["<template>\n  <div class=\"property-panel\">\n    <template v-if=\"selectedElement\">\n      <div class=\"panel-header\">\n        <h3 class=\"panel-title\">{{ panelTitle }}</h3>\n      </div>\n      \n      <div class=\"panel-content\">\n        <!-- 圆角设置 -->\n        <div class=\"form-item\" v-if=\"showBorderRadius\">\n          <label>圆角</label>\n          <div class=\"slider-wrapper\">\n            <div class=\"d-flex align-center\">\n              <v-slider\n                v-model=\"borderRadius\"\n                :min=\"0\"\n                :max=\"100\"\n                :step=\"1\"\n                hide-details\n                class=\"mr-2\"\n              ></v-slider>\n              <v-text-field\n                v-model=\"borderRadius\"\n                type=\"number\"\n                style=\"width: 70px\"\n                density=\"compact\"\n                hide-details\n                variant=\"outlined\"\n              ></v-text-field>\n            </div>\n          </div>\n        </div>\n\n        <!-- 背景色设置 -->\n        <div class=\"form-item\" v-if=\"showBackgroundColor\">\n          <label>背景色</label>\n          <v-color-picker\n            v-model=\"backgroundColor\"\n            hide-inputs\n            mode=\"hex\"\n            width=\"100%\"\n            class=\"mt-2\"\n          ></v-color-picker>\n        </div>\n\n        <!-- 文字样式设置 -->\n        <template v-if=\"selectedElement?.type === 'text'\">\n          <div class=\"form-item\">\n            <label>文字颜色</label>\n            <v-color-picker\n              v-model=\"textColor\"\n              hide-inputs\n              mode=\"hex\"\n              width=\"100%\"\n              class=\"mt-2\"\n            ></v-color-picker>\n          </div>\n\n          <div class=\"form-item\">\n            <label>字体大小</label>\n            <v-slider\n              v-model=\"fontSize\"\n              :min=\"12\"\n              :max=\"72\"\n              :step=\"1\"\n              hide-details\n              class=\"mr-2\"\n            >\n              <template v-slot:append>\n                <v-text-field\n                  v-model=\"fontSize\"\n                  type=\"number\"\n                  style=\"width: 70px\"\n                  density=\"compact\"\n                  hide-details\n                  variant=\"outlined\"\n                ></v-text-field>\n              </template>\n            </v-slider>\n          </div>\n\n          <div class=\"form-item\">\n            <label>对齐方式</label>\n            <div class=\"d-flex gap-2\">\n              <v-btn-toggle\n                v-model=\"textAlign\"\n                density=\"compact\"\n                color=\"primary\"\n              >\n                <v-btn value=\"left\">\n                  <v-icon>mdi-format-align-left</v-icon>\n                </v-btn>\n                <v-btn value=\"center\">\n                  <v-icon>mdi-format-align-center</v-icon>\n                </v-btn>\n                <v-btn value=\"right\">\n                  <v-icon>mdi-format-align-right</v-icon>\n                </v-btn>\n              </v-btn-toggle>\n            </div>\n          </div>\n\n          <div class=\"form-item\">\n            <label>字体粗细</label>\n            <v-switch\n              v-model=\"isBold\"\n              color=\"primary\"\n              hide-details\n              label=\"加粗\"\n              density=\"compact\"\n              inset\n            ></v-switch>\n          </div>\n        </template>\n\n        <!-- 尺寸信息 -->\n        <div class=\"form-item\">\n          <label>尺寸</label>\n          <div class=\"size-inputs\">\n            <v-text-field\n              v-model.number=\"width\"\n              type=\"number\"\n              label=\"宽度\"\n              density=\"compact\"\n              hide-details\n              variant=\"outlined\"\n            ></v-text-field>\n            <v-text-field\n              v-model.number=\"height\"\n              type=\"number\"\n              label=\"高度\"\n              density=\"compact\"\n              hide-details\n              variant=\"outlined\"\n            ></v-text-field>\n          </div>\n        </div>\n\n        <!-- 层级控制 -->\n        <div class=\"form-item\">\n          <label>层级</label>\n          <div class=\"d-flex gap-2\">\n            <v-btn\n              variant=\"outlined\"\n              density=\"compact\"\n              prepend-icon=\"mdi-arrow-up\"\n              @click=\"handleZIndexChange('up')\"\n            >\n              上移一层\n            </v-btn>\n            <v-btn\n              variant=\"outlined\"\n              density=\"compact\"\n              prepend-icon=\"mdi-arrow-down\"\n              @click=\"handleZIndexChange('down')\"\n            >\n              下移一层\n            </v-btn>\n          </div>\n        </div>\n      </div>\n    </template>\n    \n    <div v-else class=\"empty-state\">\n      <v-icon icon=\"mdi-select\" size=\"40\" color=\"grey-lighten-1\"></v-icon>\n      <p>请选择一个元素</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, computed } from 'vue'\n\nconst props = defineProps({\n  selectedElement: {\n    type: Object,\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update'])\n\n// 属性状态\nconst borderRadius = ref(0)\nconst backgroundColor = ref('#409EFF')\nconst width = ref(200)\nconst height = ref(200)\n\n// 文字相关状态\nconst textColor = ref('#333333')\nconst fontSize = ref(16)\nconst textAlign = ref('left')\nconst isBold = ref(false)\n\n// 计算属性\nconst panelTitle = computed(() => {\n  if (!props.selectedElement) return ''\n  switch (props.selectedElement.type) {\n    case 'image':\n      return '图片属性'\n    case 'shape':\n      return '形状属性'\n    default:\n      return '元素属性'\n  }\n})\n\nconst showBorderRadius = computed(() => {\n  return props.selectedElement?.type === 'image' || \n         (props.selectedElement?.type === 'shape' && props.selectedElement?.shapeType !== 'triangle')\n})\n\nconst showBackgroundColor = computed(() => {\n  return props.selectedElement?.type === 'shape'\n})\n\n// 监听选中元素变化\nwatch(() => props.selectedElement, (newElement) => {\n  if (newElement) {\n    // 更新圆角值\n    borderRadius.value = parseInt(newElement.styles?.borderRadius || 0)\n    // 更新背景色\n    backgroundColor.value = newElement.styles?.backgroundColor || '#409EFF'\n    // 更新尺寸\n    width.value = newElement.width\n    height.value = newElement.height\n    // 更新文字样式\n    if (newElement.type === 'text') {\n      textColor.value = newElement.styles?.color || '#333333'\n      fontSize.value = parseInt(newElement.styles?.fontSize) || 16\n      textAlign.value = newElement.styles?.textAlign || 'left'\n      isBold.value = newElement.styles?.fontWeight === 'bold'\n    }\n  }\n}, { immediate: true })\n\n// 监听圆角变化\nwatch(borderRadius, (newValue) => {\n  handleStyleChange('borderRadius', `${newValue}px`)\n})\n\n// 监听背景色变化\nwatch(backgroundColor, (newValue) => {\n  handleStyleChange('backgroundColor', newValue)\n})\n\n// 监听尺寸变化\nwatch([width, height], () => {\n  handleSizeChange()\n})\n\n// 监听文字颜色变化\nwatch(textColor, (newValue) => {\n  handleStyleChange('color', newValue)\n})\n\n// 监听字体大小变化\nwatch(fontSize, (newValue) => {\n  handleStyleChange('fontSize', `${newValue}px`)\n})\n\n// 监听对齐方式变化\nwatch(textAlign, (newValue) => {\n  handleStyleChange('textAlign', newValue)\n})\n\n// 监听字体粗细变化\nwatch(isBold, (newValue) => {\n  handleStyleChange('fontWeight', newValue ? 'bold' : 'normal')\n})\n\n// 处理样式变化\nconst handleStyleChange = (property, value) => {\n  if (!props.selectedElement) return\n  \n  emit('update', {\n    ...props.selectedElement,\n    styles: {\n      ...props.selectedElement.styles,\n      [property]: value\n    }\n  })\n}\n\n// 处理尺寸变化\nconst handleSizeChange = () => {\n  if (!props.selectedElement) return\n  \n  emit('update', {\n    ...props.selectedElement,\n    width: width.value,\n    height: height.value\n  })\n}\n\n// 处理层级变化\nconst handleZIndexChange = (direction) => {\n  if (!props.selectedElement) return\n  \n  const currentZIndex = parseInt(props.selectedElement.styles?.zIndex || 0)\n  const newZIndex = direction === 'up' ? currentZIndex + 1 : currentZIndex - 1\n  \n  emit('update', {\n    ...props.selectedElement,\n    styles: {\n      ...props.selectedElement.styles,\n      zIndex: newZIndex\n    }\n  })\n}\n</script>\n\n<style scoped>\n.property-panel {\n  width: 300px;\n  height: 100%;\n  border-left: 1px solid #e0e0e0;\n  background: #ffffff;\n  display: flex;\n  flex-direction: column;\n}\n\n.panel-header {\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.panel-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #333;\n  margin: 0;\n}\n\n.panel-content {\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n}\n\n.form-item {\n  margin-bottom: 20px;\n}\n\n.form-item label {\n  display: block;\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 8px;\n}\n\n.slider-wrapper {\n  padding: 0 8px;\n}\n\n.size-inputs {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n}\n\n.empty-state {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  gap: 12px;\n}\n\n.empty-state p {\n  font-size: 14px;\n  margin: 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
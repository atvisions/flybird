{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { PlusIcon, UserIcon, ArrowsUpDownIcon, ChevronDownIcon, FireIcon, ClockIcon, HandThumbUpIcon, EyeIcon, HomeIcon, NewspaperIcon, QuestionMarkCircleIcon, HashtagIcon } from '@heroicons/vue/24/outline';\nexport default {\n  __name: 'CommunityNavigation',\n  props: {\n    currentCategory: {\n      type: String,\n      required: true\n    },\n    currentSort: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:currentCategory', 'update:currentSort'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const router = useRouter();\n    const route = useRoute();\n    const store = useStore();\n\n    // 使用 Vuex store 的 isAuthenticated 状态\n    const isAuthenticated = computed(() => store.state.isAuthenticated);\n\n    // 主导航数据\n    const mainNavs = [{\n      name: '首页',\n      path: '/community',\n      icon: HomeIcon\n    }, {\n      name: '文章',\n      path: '/community/articles',\n      icon: NewspaperIcon\n    }, {\n      name: '问答',\n      path: '/community/questions',\n      icon: QuestionMarkCircleIcon\n    }, {\n      name: '话题',\n      path: '/community/topics',\n      icon: HashtagIcon\n    }];\n\n    // 分类数据\n    const categories = [{\n      id: 'all',\n      name: '全部',\n      icon: HomeIcon\n    }, {\n      id: 'design',\n      name: '设计',\n      icon: NewspaperIcon\n    }, {\n      id: 'development',\n      name: '开发',\n      icon: QuestionMarkCircleIcon\n    }, {\n      id: 'career',\n      name: '职场',\n      icon: HashtagIcon\n    }, {\n      id: 'life',\n      name: '生活',\n      icon: HashtagIcon\n    }];\n\n    // 排序菜单状态\n    const showSortMenu = ref(false);\n\n    // 排序选项\n    const sortOptions = {\n      popular: {\n        label: '最受欢迎',\n        icon: FireIcon\n      },\n      newest: {\n        label: '最新发布',\n        icon: ClockIcon\n      },\n      views: {\n        label: '最多浏览',\n        icon: EyeIcon\n      },\n      likes: {\n        label: '最多点赞',\n        icon: HandThumbUpIcon\n      }\n    };\n\n    // 处理排序\n    const handleSort = value => {\n      emit('update:currentSort', value);\n      showSortMenu.value = false;\n    };\n\n    // 处理分类变更\n    const handleCategoryChange = categoryId => {\n      emit('update:currentCategory', categoryId);\n    };\n    const __returned__ = {\n      props,\n      emit,\n      router,\n      route,\n      store,\n      isAuthenticated,\n      mainNavs,\n      categories,\n      showSortMenu,\n      sortOptions,\n      handleSort,\n      handleCategoryChange,\n      ref,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get UserIcon() {\n        return UserIcon;\n      },\n      get ArrowsUpDownIcon() {\n        return ArrowsUpDownIcon;\n      },\n      get ChevronDownIcon() {\n        return ChevronDownIcon;\n      },\n      get FireIcon() {\n        return FireIcon;\n      },\n      get ClockIcon() {\n        return ClockIcon;\n      },\n      get HandThumbUpIcon() {\n        return HandThumbUpIcon;\n      },\n      get EyeIcon() {\n        return EyeIcon;\n      },\n      get HomeIcon() {\n        return HomeIcon;\n      },\n      get NewspaperIcon() {\n        return NewspaperIcon;\n      },\n      get QuestionMarkCircleIcon() {\n        return QuestionMarkCircleIcon;\n      },\n      get HashtagIcon() {\n        return HashtagIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRouter","useRoute","useStore","PlusIcon","UserIcon","ArrowsUpDownIcon","ChevronDownIcon","FireIcon","ClockIcon","HandThumbUpIcon","EyeIcon","HomeIcon","NewspaperIcon","QuestionMarkCircleIcon","HashtagIcon","props","__props","emit","__emit","router","route","store","isAuthenticated","state","mainNavs","name","path","icon","categories","id","showSortMenu","sortOptions","popular","label","newest","views","likes","handleSort","value","handleCategoryChange","categoryId"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/community/CommunityNavigation.vue"],"sourcesContent":["<template>\n  <div class=\"mt-6 bg-white rounded-xl border border-gray-100 p-4 hidden md:block mb-6\">\n    <div class=\"flex flex-col gap-4\">\n      <!-- 左侧主导航和右侧按钮 -->\n      <div class=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\n        <!-- 左侧主导航 -->\n        <div class=\"flex items-center -mx-1\">\n          <router-link\n            v-for=\"nav in mainNavs\"\n            :key=\"nav.path\"\n            :to=\"nav.path\"\n            class=\"px-4 sm:px-6 py-3 mx-1 text-sm font-medium transition-colors group whitespace-nowrap flex items-center\"\n            :class=\"[\n              $route.path === nav.path\n                ? 'text-gray-900'\n                : 'text-gray-500 hover:text-gray-700'\n            ]\"\n          >\n            <component :is=\"nav.icon\" class=\"w-4 h-4 mr-2 flex-shrink-0\" />\n            <span class=\"relative\">\n              {{ nav.name }}\n              <span \n                class=\"absolute left-1/2 -translate-x-1/2 -bottom-3 w-1.5 h-1.5 rounded-full transition-colors\"\n                :class=\"$route.path === nav.path ? 'bg-gray-900' : 'bg-transparent group-hover:bg-gray-200'\"\n              ></span>\n            </span>\n          </router-link>\n        </div>\n\n        <!-- 右侧操作按钮 -->\n        <div class=\"flex items-center gap-2 sm:gap-3\">\n          <template v-if=\"isAuthenticated\">\n            <!-- 发布按钮 -->\n            <button class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-full hover:shadow-lg hover:shadow-blue-500/20 transition-all duration-300 text-sm font-medium flex items-center group\">\n              <PlusIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n              <span class=\"hidden sm:inline\">发布内容</span>\n              <span class=\"sm:hidden\">发布</span>\n            </button>\n          </template>\n          <template v-else>\n            <!-- 登录按钮 -->\n            <router-link \n              :to=\"`/login?redirect=${encodeURIComponent($route.fullPath)}`\"\n              class=\"h-9 px-4 sm:px-5 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-full hover:shadow-lg hover:shadow-blue-500/20 transition-all duration-300 text-sm font-medium flex items-center group\"\n            >\n              <UserIcon class=\"w-4 h-4 mr-1.5 sm:mr-2 group-hover:scale-110 transition-transform\" />\n              <span>登录</span>\n            </router-link>\n          </template>\n        </div>\n      </div>\n\n      <!-- 分隔线 -->\n      <div class=\"h-px bg-gray-200\"></div>\n      \n      <!-- 分类标签 -->\n      <div class=\"flex items-center h-10 justify-between\">\n        <!-- 左侧分类标签 -->\n        <div class=\"flex items-center -mx-1 overflow-x-auto no-scrollbar\">\n          <button\n            v-for=\"category in categories\"\n            :key=\"category.id\"\n            @click=\"handleCategoryChange(category.id)\"\n            class=\"h-10 px-4 mx-1 rounded-full text-sm font-medium transition-colors whitespace-nowrap inline-flex items-center\"\n            :class=\"[\n              currentCategory === category.id\n                ? 'bg-gray-900 text-white'\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n            ]\"\n          >\n            <component :is=\"category.icon\" class=\"w-4 h-4 mr-2 flex-shrink-0\" />\n            {{ category.name }}\n          </button>\n        </div>\n\n        <!-- 右侧排序按钮 -->\n        <div class=\"relative flex-shrink-0 ml-4\">\n          <button \n            @click=\"showSortMenu = !showSortMenu\"\n            class=\"h-10 inline-flex items-center px-4 bg-white border border-gray-200 rounded-lg text-sm font-medium hover:border-gray-300\"\n          >\n            <ArrowsUpDownIcon class=\"w-4 h-4 mr-2 text-gray-500 flex-shrink-0\" />\n            {{ sortOptions[currentSort]?.label || '排序' }}\n            <ChevronDownIcon class=\"w-4 h-4 ml-2 text-gray-500 flex-shrink-0\" />\n          </button>\n          \n          <div v-if=\"showSortMenu\"\n            class=\"absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-lg border border-gray-100 py-1 z-20\"\n          >\n            <button\n              v-for=\"(option, key) in sortOptions\"\n              :key=\"key\"\n              @click=\"handleSort(key)\"\n              class=\"w-full px-4 py-2 text-left text-sm hover:bg-gray-50 inline-flex items-center\"\n              :class=\"{ 'text-gray-900 font-medium': currentSort === key, 'text-gray-600': currentSort !== key }\"\n            >\n              <component \n                :is=\"option.icon\" \n                class=\"w-4 h-4 mr-2 flex-shrink-0\"\n                :class=\"currentSort === key ? 'text-gray-900' : 'text-gray-400'\"\n              />\n              {{ option.label }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 添加一个遮罩层来处理排序菜单的点击外部关闭 -->\n    <div v-if=\"showSortMenu\" \n      class=\"fixed inset-0 z-10\" \n      @click=\"showSortMenu = false\"\n    ></div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { \n  PlusIcon, \n  UserIcon, \n  ArrowsUpDownIcon, \n  ChevronDownIcon, \n  FireIcon, \n  ClockIcon, \n  HandThumbUpIcon, \n  EyeIcon,\n  HomeIcon,\n  NewspaperIcon,\n  QuestionMarkCircleIcon,\n  HashtagIcon\n} from '@heroicons/vue/24/outline'\n\nconst props = defineProps({\n  currentCategory: {\n    type: String,\n    required: true\n  },\n  currentSort: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['update:currentCategory', 'update:currentSort'])\n\nconst router = useRouter()\nconst route = useRoute()\nconst store = useStore()\n\n// 使用 Vuex store 的 isAuthenticated 状态\nconst isAuthenticated = computed(() => store.state.isAuthenticated)\n\n// 主导航数据\nconst mainNavs = [\n  { name: '首页', path: '/community', icon: HomeIcon },\n  { name: '文章', path: '/community/articles', icon: NewspaperIcon },\n  { name: '问答', path: '/community/questions', icon: QuestionMarkCircleIcon },\n  { name: '话题', path: '/community/topics', icon: HashtagIcon }\n]\n\n// 分类数据\nconst categories = [\n  { id: 'all', name: '全部', icon: HomeIcon },\n  { id: 'design', name: '设计', icon: NewspaperIcon },\n  { id: 'development', name: '开发', icon: QuestionMarkCircleIcon },\n  { id: 'career', name: '职场', icon: HashtagIcon },\n  { id: 'life', name: '生活', icon: HashtagIcon }\n]\n\n// 排序菜单状态\nconst showSortMenu = ref(false)\n\n// 排序选项\nconst sortOptions = {\n  popular: { label: '最受欢迎', icon: FireIcon },\n  newest: { label: '最新发布', icon: ClockIcon },\n  views: { label: '最多浏览', icon: EyeIcon },\n  likes: { label: '最多点赞', icon: HandThumbUpIcon }\n}\n\n// 处理排序\nconst handleSort = (value) => {\n  emit('update:currentSort', value)\n  showSortMenu.value = false\n}\n\n// 处理分类变更\nconst handleCategoryChange = (categoryId) => {\n  emit('update:currentCategory', categoryId)\n}\n</script> "],"mappings":"AAoHA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAW;AAC/C,SAASC,QAAQ,QAAQ,MAAK;AAC9B,SACEC,QAAQ,EACRC,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,EACfC,QAAQ,EACRC,SAAS,EACTC,eAAe,EACfC,OAAO,EACPC,QAAQ,EACRC,aAAa,EACbC,sBAAsB,EACtBC,WAAU,QACL,2BAA0B;;;;;;;;;;;;;;;;;;;IAEjC,MAAMC,KAAK,GAAGC,OAAA;IAWd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,MAAM,GAAGnB,SAAS,CAAC;IACzB,MAAMoB,KAAK,GAAGnB,QAAQ,CAAC;IACvB,MAAMoB,KAAK,GAAGnB,QAAQ,CAAC;;IAEvB;IACA,MAAMoB,eAAe,GAAGvB,QAAQ,CAAC,MAAMsB,KAAK,CAACE,KAAK,CAACD,eAAe;;IAElE;IACA,MAAME,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAEhB;IAAS,CAAC,EAClD;MAAEc,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,IAAI,EAAEf;IAAc,CAAC,EAChE;MAAEa,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,IAAI,EAAEd;IAAuB,CAAC,EAC1E;MAAEY,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,IAAI,EAAEb;IAAY,EAC7D;;IAEA;IACA,MAAMc,UAAU,GAAG,CACjB;MAAEC,EAAE,EAAE,KAAK;MAAEJ,IAAI,EAAE,IAAI;MAAEE,IAAI,EAAEhB;IAAS,CAAC,EACzC;MAAEkB,EAAE,EAAE,QAAQ;MAAEJ,IAAI,EAAE,IAAI;MAAEE,IAAI,EAAEf;IAAc,CAAC,EACjD;MAAEiB,EAAE,EAAE,aAAa;MAAEJ,IAAI,EAAE,IAAI;MAAEE,IAAI,EAAEd;IAAuB,CAAC,EAC/D;MAAEgB,EAAE,EAAE,QAAQ;MAAEJ,IAAI,EAAE,IAAI;MAAEE,IAAI,EAAEb;IAAY,CAAC,EAC/C;MAAEe,EAAE,EAAE,MAAM;MAAEJ,IAAI,EAAE,IAAI;MAAEE,IAAI,EAAEb;IAAY,EAC9C;;IAEA;IACA,MAAMgB,YAAY,GAAGhC,GAAG,CAAC,KAAK;;IAE9B;IACA,MAAMiC,WAAW,GAAG;MAClBC,OAAO,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEN,IAAI,EAAEpB;MAAS,CAAC;MAC1C2B,MAAM,EAAE;QAAED,KAAK,EAAE,MAAM;QAAEN,IAAI,EAAEnB;MAAU,CAAC;MAC1C2B,KAAK,EAAE;QAAEF,KAAK,EAAE,MAAM;QAAEN,IAAI,EAAEjB;MAAQ,CAAC;MACvC0B,KAAK,EAAE;QAAEH,KAAK,EAAE,MAAM;QAAEN,IAAI,EAAElB;MAAgB;IAChD;;IAEA;IACA,MAAM4B,UAAU,GAAIC,KAAK,IAAK;MAC5BrB,IAAI,CAAC,oBAAoB,EAAEqB,KAAK;MAChCR,YAAY,CAACQ,KAAK,GAAG,KAAI;IAC3B;;IAEA;IACA,MAAMC,oBAAoB,GAAIC,UAAU,IAAK;MAC3CvB,IAAI,CAAC,wBAAwB,EAAEuB,UAAU;IAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
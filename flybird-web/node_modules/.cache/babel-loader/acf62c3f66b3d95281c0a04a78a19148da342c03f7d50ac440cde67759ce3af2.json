{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"py-4 lg:py-6 mt-[72px]\"\n};\nconst _hoisted_2 = {\n  class: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 顶部横幅 \"), _createVNode($setup[\"PageBanner\"], {\n    theme: \"violet\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"h1\", {\n      class: \"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\"\n    }, \"技术文章\", -1 /* HOISTED */), _createElementVNode(\"p\", {\n      class: \"text-gray-600 text-lg max-w-2xl\"\n    }, \"分享技术见解，交流学习心得\", -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 使用导航组件 \"), _createVNode($setup[\"CommunityNavigation\"], {\n    currentCategory: $setup.currentCategory,\n    \"onUpdate:currentCategory\": _cache[0] || (_cache[0] = $event => $setup.currentCategory = $event)\n  }, null, 8 /* PROPS */, [\"currentCategory\"]), _createCommentVNode(\" 原有的文章列表内容 \"), _createCommentVNode(\" ... 其他内容保持不变 ... \")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_createVNode","$setup","theme","default","_withCtx","_cache","_","currentCategory","$event"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/ArticlesView.vue"],"sourcesContent":["<template>\n  <div class=\"py-4 lg:py-6 mt-[72px]\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <!-- 顶部横幅 -->\n      <PageBanner theme=\"violet\">\n        <h1 class=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">技术文章</h1>\n        <p class=\"text-gray-600 text-lg max-w-2xl\">分享技术见解，交流学习心得</p>\n      </PageBanner>\n\n      <!-- 使用导航组件 -->\n      <CommunityNavigation v-model:currentCategory=\"currentCategory\" />\n\n      <!-- 原有的文章列表内容 -->\n      <!-- ... 其他内容保持不变 ... -->\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { \n  EyeIcon, \n  ChatBubbleLeftIcon,\n  ArrowsUpDownIcon,\n  ChevronDownIcon,\n  FireIcon,\n  ClockIcon,\n  HandThumbUpIcon,\n  PlusIcon,\n  UserIcon,\n  ChevronRightIcon\n} from '@heroicons/vue/24/outline'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport PageBanner from '@/components/common/PageBanner.vue'\nimport CommunityNavigation from '@/components/community/CommunityNavigation.vue'\n\n// 分类数据\nconst categories = [\n  { id: 'all', name: '全部', path: '/community' },\n  { id: 'article', name: '文章', path: '/community/articles' },\n  { id: 'question', name: '问答', path: '/community/questions' },\n  { id: 'vs', name: '话题', path: '/community/topics' }\n]\n\nconst router = useRouter()\nconst route = useRoute()\nconst store = useStore()\n\nconst currentCategory = ref('all')\nconst showSortMenu = ref(false)\nconst currentSort = ref('popular')\n\n// 排序选项\nconst sortOptions = {\n  popular: { label: '最受欢迎', icon: FireIcon },\n  newest: { label: '最新发布', icon: ClockIcon },\n  comments: { label: '最多评论', icon: ChatBubbleLeftIcon },\n  likes: { label: '最多点赞', icon: HandThumbUpIcon }\n}\n\n// 处理排序\nconst handleSort = (value) => {\n  currentSort.value = value\n  showSortMenu.value = false\n}\n\n// 文章分类\nconst articleCategories = [\n  { id: 'all', name: '全部' },\n  { id: 'frontend', name: '前端开发' },\n  { id: 'backend', name: '后端开发' },\n  { id: 'mobile', name: '移动开发' },\n  { id: 'algorithm', name: '算法' },\n  { id: 'architecture', name: '架构' },\n  { id: 'devops', name: 'DevOps' },\n  { id: 'database', name: '数据库' },\n  { id: 'ai', name: 'AI/机器学习' }\n]\n\n// 文章数据\nconst articles = ref([\n  {\n    id: 1,\n    type: 'article',\n    category: 'frontend',\n    title: '2024年前端开发趋势展望',\n    description: '探讨新的前端框架、工具和最佳实践，帮助开发者在新的一年保持技术领先。包括AI辅助开发、WebAssembly应用、微前端架构等热门话题。',\n    cover: 'https://picsum.photos/600/300?random=1',\n    author: {\n      name: '张小明',\n      avatar: 'https://picsum.photos/32/32?random=1'\n    },\n    createTime: '2小时前',\n    views: 1234,\n    comments: 56\n  },\n  {\n    id: 2,\n    type: 'article',\n    category: 'backend',\n    title: 'Spring Boot 3.0 新特性详解',\n    description: '深入解析Spring Boot 3.0的重要更新，包括原生支持GraalVM、HTTP接口声明式客户端、改进的AOT支持等特性。',\n    cover: 'https://picsum.photos/600/300?random=2',\n    author: {\n      name: '李大山',\n      avatar: 'https://picsum.photos/32/32?random=2'\n    },\n    createTime: '3小时前',\n    views: 892,\n    comments: 45\n  },\n  {\n    id: 3,\n    type: 'article',\n    category: 'architecture',\n    title: '微服务架构实践：从单体到微服务的演进之路',\n    description: '分享一个大型企业级应用从单体架构迁移到微服务的实践经验，包括服务拆分策略、数据一致性处理、服务治理等核心话题。',\n    cover: 'https://picsum.photos/600/300?random=3',\n    author: {\n      name: '王大力',\n      avatar: 'https://picsum.photos/32/32?random=3'\n    },\n    createTime: '5小时前',\n    views: 1567,\n    comments: 89\n  },\n  {\n    id: 4,\n    type: 'article',\n    category: 'mobile',\n    title: 'Flutter vs React Native：2024移动开发框架对比',\n    description: '详细对比两大主流跨平台开发框架的优劣，从性能、生态、开发效率等多个维度进行分析，帮助开发者做出技术选型。',\n    cover: 'https://picsum.photos/600/300?random=4',\n    author: {\n      name: '赵明',\n      avatar: 'https://picsum.photos/32/32?random=4'\n    },\n    createTime: '6小时前',\n    views: 2023,\n    comments: 134\n  },\n  {\n    id: 5,\n    type: 'article',\n    category: 'ai',\n    title: 'AI 驱动的代码生成：提升开发效率的新方向',\n    description: '探讨AI在软件开发中的应用，特别是代码生成、代码补全、代码审查等场景，以及如何有效利用AI工具提升开发效率。',\n    cover: 'https://picsum.photos/600/300?random=5',\n    author: {\n      name: '陈小红',\n      avatar: 'https://picsum.photos/32/32?random=5'\n    },\n    createTime: '8小时前',\n    views: 3102,\n    comments: 167\n  },\n  {\n    id: 6,\n    type: 'article',\n    category: 'devops',\n    title: 'Docker 和 Kubernetes 最佳实践指南',\n    description: '详细介绍容器化和编排技术的实践经验，包括镜像优化、集群管理、服务发现、负载均衡等核心概念的实战应用。',\n    cover: 'https://picsum.photos/600/300?random=6',\n    author: {\n      name: '周建国',\n      avatar: 'https://picsum.photos/32/32?random=6'\n    },\n    createTime: '12小时前',\n    views: 1876,\n    comments: 98\n  },\n  {\n    id: 7,\n    type: 'article',\n    category: 'database',\n    title: 'MongoDB 性能优化实战',\n    description: '深入探讨 MongoDB 在大规模应用场景下的性能优化策略，包括索引设计、查询优化、分片策略等实用技巧。',\n    cover: 'https://picsum.photos/600/300?random=7',\n    author: {\n      name: '李云',\n      avatar: 'https://picsum.photos/32/32?random=7'\n    },\n    createTime: '15小时前',\n    views: 1543,\n    comments: 76\n  },\n  {\n    id: 8,\n    type: 'article',\n    category: 'algorithm',\n    title: '算法之美：图算法在社交网络中的应用',\n    description: '通过实际案例讲解图算法在社交网络分析中的应用，包括最短路径、社区发现、影响力分析等经典算法的实现。',\n    cover: 'https://picsum.photos/600/300?random=8',\n    author: {\n      name: '张算法',\n      avatar: 'https://picsum.photos/32/32?random=8'\n    },\n    createTime: '18小时前',\n    views: 2234,\n    comments: 145\n  },\n  {\n    id: 9,\n    type: 'article',\n    category: 'frontend',\n    title: 'Next.js 13 服务端组件实战',\n    description: '探索 Next.js 13 中服务端组件的最佳实践，包括数据获取、状态管理、性能优化等关键主题的深入讲解。',\n    cover: 'https://picsum.photos/600/300?random=9',\n    author: {\n      name: '王前端',\n      avatar: 'https://picsum.photos/32/32?random=9'\n    },\n    createTime: '1天前',\n    views: 1987,\n    comments: 112\n  },\n  {\n    id: 10,\n    type: 'article',\n    category: 'backend',\n    title: 'Go 微服务框架选型对比',\n    description: '对比主流的 Go 微服务框架，从性能、易用性、生态等多个维度进行分析，帮助开发者选择适合的技术栈。',\n    cover: 'https://picsum.photos/600/300?random=10',\n    author: {\n      name: '刘后端',\n      avatar: 'https://picsum.photos/32/32?random=10'\n    },\n    createTime: '1天前',\n    views: 2456,\n    comments: 167\n  }\n])\n\n// 根据分类和排序筛选文章\nconst filteredArticles = computed(() => {\n  let result = [...articles.value]\n  \n  // 应用分类筛选\n  if (currentCategory.value !== 'all') {\n    result = result.filter(article => article.category === currentCategory.value)\n  }\n  \n  // 应用排序\n  switch (currentSort.value) {\n    case 'popular':\n      result.sort((a, b) => b.views - a.views)\n      break\n    case 'newest':\n      result.sort((a, b) => new Date(b.createTime) - new Date(a.createTime))\n      break\n    case 'comments':\n      result.sort((a, b) => b.comments - a.comments)\n      break\n  }\n  \n  return result\n})\n\n// 推荐文章（浏览量最高的前3篇）\nconst recommendedArticles = computed(() => \n  [...articles.value]\n    .sort((a, b) => b.views - a.views)\n    .slice(0, 3)\n)\n\n// 文章排行（最近一周最热门的文章）\nconst topArticles = computed(() => \n  [...articles.value]\n    .sort((a, b) => b.views + b.comments * 2 - (a.views + a.comments * 2))\n    .slice(0, 5)\n)\n\n// 修改分类切换处理\nconst handleCategoryChange = (categoryId) => {\n  const category = categories.find(c => c.id === categoryId)\n  if (category && category.path) {\n    router.push(category.path)\n  } else {\n    currentCategory.value = categoryId\n  }\n}\n\n// 添加主导航数据\nconst mainNavs = [\n  { name: '首页', path: '/community' },\n  { name: '文章', path: '/community/articles' },\n  { name: '问答', path: '/community/questions' },\n  { name: '话题', path: '/community/topics' }\n]\n\n// 使用 Vuex store 的 isAuthenticated 状态\nconst isAuthenticated = computed(() => store.state.isAuthenticated)\n</script> "],"mappings":";;EACOA,KAAK,EAAC;AAAwB;;EAC5BA,KAAK,EAAC;AAAwC;;uBADrDC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,mBAAA,UAAa,EACbC,YAAA,CAGaC,MAAA;IAHDC,KAAK,EAAC;EAAQ;IAJhCC,OAAA,EAAAC,QAAA,CAKQ,MAAuEC,MAAA,QAAAA,MAAA,OAAvER,mBAAA,CAAuE;MAAnEH,KAAK,EAAC;IAAmD,GAAC,MAAI,qBAClEG,mBAAA,CAA4D;MAAzDH,KAAK,EAAC;IAAiC,GAAC,eAAa,oB;IANhEY,CAAA;MASMP,mBAAA,YAAe,EACfC,YAAA,CAAiEC,MAAA;IAApCM,eAAe,EAAEN,MAAA,CAAAM,eAAe;IAVnE,4BAAAF,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAUoDP,MAAA,CAAAM,eAAe,GAAAC,MAAA;gDAE7DT,mBAAA,eAAkB,EAClBA,mBAAA,sBAAyB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
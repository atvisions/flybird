{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport DesignElement from './DesignElement.vue';\nimport profile from '@/api/profile';\nexport default {\n  __name: 'Canvas',\n  props: {\n    scale: {\n      type: Number,\n      default: 1\n    }\n  },\n  emits: ['element-select'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n\n    // 状态\n    const isDragOver = ref(false);\n    const elements = ref([]);\n    const selectedElement = ref(null);\n\n    // 数据字段\n    const dataFields = ref([]);\n\n    // 获取数据字段定义\n    const fetchDataFields = async () => {\n      try {\n        const response = await profile.getData();\n        const data = response.data;\n\n        // 将API返回的数据转换为字段定义\n        const fields = [\n        // 基本信息\n        {\n          label: '头像',\n          field: 'basic_info.avatar',\n          group: '基本信息'\n        }, {\n          label: '姓名',\n          field: 'basic_info.name',\n          group: '基本信息'\n        }, {\n          label: '性别',\n          field: 'basic_info.gender',\n          group: '基本信息'\n        }, {\n          label: '出生日期',\n          field: 'basic_info.birth_date',\n          group: '基本信息'\n        }, {\n          label: '电话',\n          field: 'basic_info.phone',\n          group: '基本信息'\n        }, {\n          label: '邮箱',\n          field: 'basic_info.email',\n          group: '基本信息'\n        }, {\n          label: '所在地',\n          field: 'basic_info.location',\n          group: '基本信息'\n        }, {\n          label: '个人总结',\n          field: 'basic_info.personal_summary',\n          group: '基本信息'\n        },\n        // 求职意向\n        {\n          label: '工作类型',\n          field: 'job_intention.job_type',\n          group: '求职意向'\n        }, {\n          label: '求职状态',\n          field: 'job_intention.job_status',\n          group: '求职意向'\n        }, {\n          label: '期望薪资',\n          field: 'job_intention.expected_salary',\n          group: '求职意向'\n        }, {\n          label: '期望城市',\n          field: 'job_intention.expected_city',\n          group: '求职意向'\n        }, {\n          label: '期望行业',\n          field: 'job_intention.industries',\n          group: '求职意向'\n        },\n        // 教育经历\n        {\n          label: '学校',\n          field: 'education[0].school',\n          group: '教育经历'\n        }, {\n          label: '专业',\n          field: 'education[0].major',\n          group: '教育经历'\n        }, {\n          label: '学历',\n          field: 'education[0].degree',\n          group: '教育经历'\n        }, {\n          label: '在校时间',\n          field: 'education[0].start_date',\n          group: '教育经历'\n        },\n        // 工作经历\n        {\n          label: '公司名称',\n          field: 'work_experience[0].company',\n          group: '最近工作'\n        }, {\n          label: '职位名称',\n          field: 'work_experience[0].position',\n          group: '最近工作'\n        }, {\n          label: '部门',\n          field: 'work_experience[0].department',\n          group: '最近工作'\n        }, {\n          label: '工作描述',\n          field: 'work_experience[0].description',\n          group: '最近工作'\n        },\n        // 项目经历\n        {\n          label: '项目名称',\n          field: 'project[0].name',\n          group: '项目经历'\n        }, {\n          label: '项目角色',\n          field: 'project[0].role',\n          group: '项目经历'\n        }, {\n          label: '项目描述',\n          field: 'project[0].description',\n          group: '项目经历'\n        },\n        // 技能特长\n        {\n          label: '技能名称',\n          field: 'skill[0].name',\n          group: '技能特长'\n        }, {\n          label: '掌握程度',\n          field: 'skill[0].level',\n          group: '技能特长'\n        }, {\n          label: '技能描述',\n          field: 'skill[0].description',\n          group: '技能特长'\n        },\n        // 语言能力\n        {\n          label: '语言名称',\n          field: 'language[0].name',\n          group: '语言能力'\n        }, {\n          label: '掌握程度',\n          field: 'language[0].proficiency_display',\n          group: '语言能力'\n        }, {\n          label: '证书名称',\n          field: 'language[0].certification',\n          group: '语言能力'\n        }, {\n          label: '证书分数',\n          field: 'language[0].score',\n          group: '语言能力'\n        }];\n        dataFields.value = fields;\n      } catch (error) {\n        console.error('获取数据字段失败:', error);\n        // 使用一些默认字段作为备选\n        dataFields.value = [{\n          label: '姓名',\n          field: 'basic_info.name',\n          group: '基本信息'\n        }, {\n          label: '电话',\n          field: 'basic_info.phone',\n          group: '基本信息'\n        }, {\n          label: '邮箱',\n          field: 'basic_info.email',\n          group: '基本信息'\n        }];\n      }\n    };\n\n    // 处理画布点击\n    const handleCanvasClick = e => {\n      if (e.target === e.currentTarget) {\n        selectedElement.value = null;\n        emit('element-select', null);\n      }\n    };\n\n    // 处理元素选择\n    const handleElementSelect = element => {\n      selectedElement.value = element;\n      emit('element-select', element);\n    };\n\n    // 处理元素更新\n    const handleElementUpdate = updatedElement => {\n      const index = elements.value.findIndex(el => el.id === updatedElement.id);\n      if (index > -1) {\n        elements.value[index] = _objectSpread({}, updatedElement);\n        if (selectedElement.value?.id === updatedElement.id) {\n          selectedElement.value = _objectSpread({}, updatedElement);\n        }\n      }\n    };\n\n    // 处理删除元素\n    const handleDeleteElement = () => {\n      if (selectedElement.value) {\n        const index = elements.value.findIndex(el => el.id === selectedElement.value.id);\n        if (index > -1) {\n          elements.value.splice(index, 1);\n          selectedElement.value = null;\n          emit('element-select', null);\n        }\n      }\n    };\n\n    // 处理键盘事件\n    const handleKeyDown = e => {\n      if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n        e.preventDefault();\n        handleDeleteElement();\n      }\n    };\n\n    // 添加和移除全局键盘事件监听\n    onMounted(() => {\n      document.addEventListener('keydown', handleKeyDown);\n      fetchDataFields();\n    });\n    onUnmounted(() => {\n      document.removeEventListener('keydown', handleKeyDown);\n    });\n\n    // 处理元素拖拽\n    const handleElementDrop = event => {\n      const elementType = event.dataTransfer.getData('element-type');\n      if (!elementType) return;\n      try {\n        const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'));\n        const rect = event.currentTarget.getBoundingClientRect();\n        const x = (event.clientX - rect.left) / props.scale;\n        const y = (event.clientY - rect.top) / props.scale;\n        const newElement = {\n          id: Date.now().toString(),\n          type: elementType,\n          x,\n          y,\n          width: elementConfig.width || 100,\n          height: elementConfig.height || 100,\n          rotation: 0,\n          content: elementConfig.content,\n          placeholder: elementConfig.placeholder,\n          styles: elementConfig.styles || {}\n        };\n        elements.value.push(newElement);\n        // 自动选中新添加的元素\n        selectedElement.value = newElement;\n        emit('element-select', newElement);\n        isDragOver.value = false;\n      } catch (error) {\n        console.error('处理元素拖放时出错:', error);\n      }\n    };\n\n    // 处理拖拽进入\n    const handleDragEnter = event => {\n      event.preventDefault();\n      isDragOver.value = true;\n    };\n\n    // 处理拖拽离开\n    const handleDragLeave = event => {\n      event.preventDefault();\n      isDragOver.value = false;\n    };\n\n    // 导出布局数据\n    const exportLayoutData = () => {\n      return {\n        elements: elements.value.map(element => _objectSpread(_objectSpread({}, element), {}, {\n          dataBinding: element.dataBinding\n        }))\n      };\n    };\n\n    // 加载模板\n    const loadTemplate = async template => {\n      try {\n        // 获取用户数据\n        const response = await profile.getData();\n        const profileData = response.data;\n\n        // 加载设计元素\n        elements.value = (template.elements || []).map(element => {\n          // 如果元素有数据绑定,注入实际数据\n          if (element.dataBinding) {\n            const {\n              field\n            } = element.dataBinding;\n            const value = field.split('.').reduce((obj, key) => {\n              if (obj && typeof obj === 'object') {\n                // 处理数组索引，例如 work_experience[0]\n                const match = key.match(/(\\w+)\\[(\\d+)\\]/);\n                if (match) {\n                  const [_, arrayName, index] = match;\n                  return obj[arrayName]?.[parseInt(index)];\n                }\n                return obj[key];\n              }\n              return undefined;\n            }, profileData);\n\n            // 根据元素类型设置实际内容\n            switch (element.type) {\n              case 'image':\n                // 如果是头像字段，需要添加域名前缀\n                if (field.includes('avatar')) {\n                  element.content = value ? `http://192.168.3.16:8000${value}` : '/images.jpeg';\n                } else {\n                  element.content = value || '/images.jpeg';\n                }\n                break;\n              case 'text':\n                element.content = value || `{{${field}}}`;\n                break;\n            }\n          }\n          return element;\n        });\n      } catch (error) {\n        console.error('加载模板数据失败:', error);\n      }\n    };\n\n    // 更新元素数据绑定\n    const updateElementDataBinding = (elementId, binding) => {\n      const element = elements.value.find(el => el.id === elementId);\n      if (element) {\n        element.dataBinding = binding;\n        // 更新选中元素的状态\n        if (selectedElement.value?.id === elementId) {\n          selectedElement.value = _objectSpread({}, element);\n        }\n      }\n    };\n\n    // 暴露方法给父组件\n    __expose({\n      loadTemplate,\n      exportLayoutData,\n      updateElementDataBinding,\n      handleElementUpdate\n    });\n    const __returned__ = {\n      props,\n      emit,\n      isDragOver,\n      elements,\n      selectedElement,\n      dataFields,\n      fetchDataFields,\n      handleCanvasClick,\n      handleElementSelect,\n      handleElementUpdate,\n      handleDeleteElement,\n      handleKeyDown,\n      handleElementDrop,\n      handleDragEnter,\n      handleDragLeave,\n      exportLayoutData,\n      loadTemplate,\n      updateElementDataBinding,\n      ref,\n      computed,\n      onMounted,\n      onUnmounted,\n      DesignElement,\n      get profile() {\n        return profile;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","DesignElement","profile","props","__props","emit","__emit","isDragOver","elements","selectedElement","dataFields","fetchDataFields","response","getData","data","fields","label","field","group","value","error","console","handleCanvasClick","e","target","currentTarget","handleElementSelect","element","handleElementUpdate","updatedElement","index","findIndex","el","id","_objectSpread","handleDeleteElement","splice","handleKeyDown","key","preventDefault","document","addEventListener","removeEventListener","handleElementDrop","event","elementType","dataTransfer","elementConfig","JSON","parse","rect","getBoundingClientRect","x","clientX","left","scale","y","clientY","top","newElement","Date","now","toString","type","width","height","rotation","content","placeholder","styles","push","handleDragEnter","handleDragLeave","exportLayoutData","map","dataBinding","loadTemplate","template","profileData","split","reduce","obj","match","_","arrayName","parseInt","undefined","includes","updateElementDataBinding","elementId","binding","find","__expose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/Canvas.vue"],"sourcesContent":["<template>\n  <div class=\"canvas-container\">\n    <div class=\"canvas-wrapper\">\n      <div \n        class=\"canvas-content\" \n        :style=\"{ transform: `scale(${scale})` }\"\n        @dragover.prevent\n        @drop.prevent=\"handleElementDrop\"\n        @dragenter.prevent=\"handleDragEnter\"\n        @dragleave.prevent=\"handleDragLeave\"\n        @click.self=\"handleCanvasClick\"\n        tabindex=\"0\"\n        @keydown.delete.prevent=\"handleDeleteElement\"\n        @keydown.backspace.prevent=\"handleDeleteElement\"\n      >\n        <!-- 设计元素列表 -->\n        <template v-for=\"element in elements\" :key=\"element.id\">\n          <DesignElement\n            :element=\"element\"\n            :is-selected=\"selectedElement?.id === element.id\"\n            :scale=\"scale\"\n            :data-fields=\"dataFields\"\n            @select=\"handleElementSelect\"\n            @update=\"handleElementUpdate\"\n          />\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport DesignElement from './DesignElement.vue'\nimport profile from '@/api/profile'\n\nconst props = defineProps({\n  scale: {\n    type: Number,\n    default: 1\n  }\n})\n\nconst emit = defineEmits(['element-select'])\n\n// 状态\nconst isDragOver = ref(false)\nconst elements = ref([])\nconst selectedElement = ref(null)\n\n// 数据字段\nconst dataFields = ref([])\n\n// 获取数据字段定义\nconst fetchDataFields = async () => {\n  try {\n    const response = await profile.getData()\n    const data = response.data\n    \n    // 将API返回的数据转换为字段定义\n    const fields = [\n      // 基本信息\n      { label: '头像', field: 'basic_info.avatar', group: '基本信息' },\n      { label: '姓名', field: 'basic_info.name', group: '基本信息' },\n      { label: '性别', field: 'basic_info.gender', group: '基本信息' },\n      { label: '出生日期', field: 'basic_info.birth_date', group: '基本信息' },\n      { label: '电话', field: 'basic_info.phone', group: '基本信息' },\n      { label: '邮箱', field: 'basic_info.email', group: '基本信息' },\n      { label: '所在地', field: 'basic_info.location', group: '基本信息' },\n      { label: '个人总结', field: 'basic_info.personal_summary', group: '基本信息' },\n\n      // 求职意向\n      { label: '工作类型', field: 'job_intention.job_type', group: '求职意向' },\n      { label: '求职状态', field: 'job_intention.job_status', group: '求职意向' },\n      { label: '期望薪资', field: 'job_intention.expected_salary', group: '求职意向' },\n      { label: '期望城市', field: 'job_intention.expected_city', group: '求职意向' },\n      { label: '期望行业', field: 'job_intention.industries', group: '求职意向' },\n\n      // 教育经历\n      { label: '学校', field: 'education[0].school', group: '教育经历' },\n      { label: '专业', field: 'education[0].major', group: '教育经历' },\n      { label: '学历', field: 'education[0].degree', group: '教育经历' },\n      { label: '在校时间', field: 'education[0].start_date', group: '教育经历' },\n\n      // 工作经历\n      { label: '公司名称', field: 'work_experience[0].company', group: '最近工作' },\n      { label: '职位名称', field: 'work_experience[0].position', group: '最近工作' },\n      { label: '部门', field: 'work_experience[0].department', group: '最近工作' },\n      { label: '工作描述', field: 'work_experience[0].description', group: '最近工作' },\n\n      // 项目经历\n      { label: '项目名称', field: 'project[0].name', group: '项目经历' },\n      { label: '项目角色', field: 'project[0].role', group: '项目经历' },\n      { label: '项目描述', field: 'project[0].description', group: '项目经历' },\n\n      // 技能特长\n      { label: '技能名称', field: 'skill[0].name', group: '技能特长' },\n      { label: '掌握程度', field: 'skill[0].level', group: '技能特长' },\n      { label: '技能描述', field: 'skill[0].description', group: '技能特长' },\n\n      // 语言能力\n      { label: '语言名称', field: 'language[0].name', group: '语言能力' },\n      { label: '掌握程度', field: 'language[0].proficiency_display', group: '语言能力' },\n      { label: '证书名称', field: 'language[0].certification', group: '语言能力' },\n      { label: '证书分数', field: 'language[0].score', group: '语言能力' }\n    ]\n\n    dataFields.value = fields\n  } catch (error) {\n    console.error('获取数据字段失败:', error)\n    // 使用一些默认字段作为备选\n    dataFields.value = [\n      { label: '姓名', field: 'basic_info.name', group: '基本信息' },\n      { label: '电话', field: 'basic_info.phone', group: '基本信息' },\n      { label: '邮箱', field: 'basic_info.email', group: '基本信息' }\n    ]\n  }\n}\n\n// 处理画布点击\nconst handleCanvasClick = (e) => {\n  if (e.target === e.currentTarget) {\n    selectedElement.value = null\n    emit('element-select', null)\n  }\n}\n\n// 处理元素选择\nconst handleElementSelect = (element) => {\n  selectedElement.value = element\n  emit('element-select', element)\n}\n\n// 处理元素更新\nconst handleElementUpdate = (updatedElement) => {\n  const index = elements.value.findIndex(el => el.id === updatedElement.id)\n  if (index > -1) {\n    elements.value[index] = { ...updatedElement }\n    if (selectedElement.value?.id === updatedElement.id) {\n      selectedElement.value = { ...updatedElement }\n    }\n  }\n}\n\n// 处理删除元素\nconst handleDeleteElement = () => {\n  if (selectedElement.value) {\n    const index = elements.value.findIndex(el => el.id === selectedElement.value.id)\n    if (index > -1) {\n      elements.value.splice(index, 1)\n      selectedElement.value = null\n      emit('element-select', null)\n    }\n  }\n}\n\n// 处理键盘事件\nconst handleKeyDown = (e) => {\n  if ((e.key === 'Delete' || e.key === 'Backspace') && selectedElement.value) {\n    e.preventDefault()\n    handleDeleteElement()\n  }\n}\n\n// 添加和移除全局键盘事件监听\nonMounted(() => {\n  document.addEventListener('keydown', handleKeyDown)\n  fetchDataFields()\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeyDown)\n})\n\n// 处理元素拖拽\nconst handleElementDrop = (event) => {\n  const elementType = event.dataTransfer.getData('element-type')\n  if (!elementType) return\n\n  try {\n    const elementConfig = JSON.parse(event.dataTransfer.getData('element-config'))\n    const rect = event.currentTarget.getBoundingClientRect()\n    const x = (event.clientX - rect.left) / props.scale\n    const y = (event.clientY - rect.top) / props.scale\n    \n    const newElement = {\n      id: Date.now().toString(),\n      type: elementType,\n      x,\n      y,\n      width: elementConfig.width || 100,\n      height: elementConfig.height || 100,\n      rotation: 0,\n      content: elementConfig.content,\n      placeholder: elementConfig.placeholder,\n      styles: elementConfig.styles || {}\n    }\n    \n    elements.value.push(newElement)\n    // 自动选中新添加的元素\n    selectedElement.value = newElement\n    emit('element-select', newElement)\n    isDragOver.value = false\n  } catch (error) {\n    console.error('处理元素拖放时出错:', error)\n  }\n}\n\n// 处理拖拽进入\nconst handleDragEnter = (event) => {\n  event.preventDefault()\n  isDragOver.value = true\n}\n\n// 处理拖拽离开\nconst handleDragLeave = (event) => {\n  event.preventDefault()\n  isDragOver.value = false\n}\n\n// 导出布局数据\nconst exportLayoutData = () => {\n  return {\n    elements: elements.value.map(element => ({\n      ...element,\n      dataBinding: element.dataBinding\n    }))\n  }\n}\n\n// 加载模板\nconst loadTemplate = async (template) => {\n  try {\n    // 获取用户数据\n    const response = await profile.getData()\n    const profileData = response.data\n    \n    // 加载设计元素\n    elements.value = (template.elements || []).map(element => {\n      // 如果元素有数据绑定,注入实际数据\n      if (element.dataBinding) {\n        const { field } = element.dataBinding\n        const value = field.split('.').reduce((obj, key) => {\n          if (obj && typeof obj === 'object') {\n            // 处理数组索引，例如 work_experience[0]\n            const match = key.match(/(\\w+)\\[(\\d+)\\]/)\n            if (match) {\n              const [_, arrayName, index] = match\n              return obj[arrayName]?.[parseInt(index)]\n            }\n            return obj[key]\n          }\n          return undefined\n        }, profileData)\n\n        // 根据元素类型设置实际内容\n        switch (element.type) {\n          case 'image':\n            // 如果是头像字段，需要添加域名前缀\n            if (field.includes('avatar')) {\n              element.content = value ? `http://192.168.3.16:8000${value}` : '/images.jpeg'\n            } else {\n              element.content = value || '/images.jpeg'\n            }\n            break\n          case 'text':\n            element.content = value || `{{${field}}}`\n            break\n        }\n      }\n      return element\n    })\n  } catch (error) {\n    console.error('加载模板数据失败:', error)\n  }\n}\n\n// 更新元素数据绑定\nconst updateElementDataBinding = (elementId, binding) => {\n  const element = elements.value.find(el => el.id === elementId)\n  if (element) {\n    element.dataBinding = binding\n    // 更新选中元素的状态\n    if (selectedElement.value?.id === elementId) {\n      selectedElement.value = { ...element }\n    }\n  }\n}\n\n// 暴露方法给父组件\ndefineExpose({\n  loadTemplate,\n  exportLayoutData,\n  updateElementDataBinding,\n  handleElementUpdate\n})\n</script>\n\n<style scoped>\n.canvas-container {\n  flex: 1;\n  overflow: hidden;\n  background: #f5f5f5;\n  position: relative;\n}\n\n.canvas-wrapper {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 20px;\n}\n\n.canvas-content {\n  width: 794px; /* A4 纸宽度 */\n  min-height: 1123px; /* A4 纸高度 */\n  background: #ffffff;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n  position: relative;\n  transform-origin: top center;\n  outline: none; /* 移除焦点时的轮廓 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
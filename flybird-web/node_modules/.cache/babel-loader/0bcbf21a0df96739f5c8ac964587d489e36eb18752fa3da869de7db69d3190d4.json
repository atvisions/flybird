{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted, computed, watch, nextTick, onUnmounted } from 'vue';\nimport { useModules } from '@/composables/useModules';\nimport { useProfileData } from '@/composables/useProfileData';\nimport useLoading from '@/composables/useLoading';\nimport profile from '@/api/profile';\nimport { ElMessage } from 'element-plus';\nimport { eventBus } from '@/utils/eventBus';\nimport { Dialog, DialogPanel, DialogTitle, TransitionChild, TransitionRoot } from '@headlessui/vue';\nimport { PlusIcon, ExclamationTriangleIcon, DocumentTextIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport { ALL_MODULES } from '@/constants';\n\n// 组件导入\nimport BasicInfo from './components/BasicInfo.vue';\nimport ResumeStatus from './components/ResumeStatus.vue';\nimport ModuleList from './components/ModuleList.vue';\nimport EditWorkExperienceDialog from './dialogs/EditWorkExperienceDialog.vue';\nimport EditBasicDialog from './dialogs/EditBasicDialog.vue';\nimport EditJobIntentionDialog from './dialogs/EditJobIntentionDialog.vue';\nimport EditSocialLinkDialog from './dialogs/EditSocialLinkDialog.vue';\nimport EditPortfolioDialog from './dialogs/EditPortfolioDialog.vue';\nimport AIOptimizeDialog from './dialogs/AIOptimizeDialog.vue';\nimport EditEducationDialog from './dialogs/EditEducationDialog.vue';\nimport EditProjectDialog from './dialogs/EditProjectDialog.vue';\nimport EditCertificateDialog from './dialogs/EditCertificateDialog.vue';\nimport EditSkillDialog from './dialogs/EditSkillDialog.vue';\nimport EditLanguageDialog from './dialogs/EditLanguageDialog.vue';\n\n// 获取数据相关\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const profileLoading = ref(false);\n    const profileData = ref(null);\n    const completionData = ref(null);\n    const bioExpanded = ref(false);\n    const showBioExpandButton = ref(false);\n\n    // 布局数据\n    const layoutData = ref({});\n\n    // 布局状态\n    const layoutStatus = computed(() => {\n      return layoutData.value || {};\n    });\n\n    // 使用组合式函数\n    const {\n      loading: modulesLoading,\n      modules,\n      fetchModulesData\n    } = useModules(layoutData);\n    const {\n      fetchCompletionData\n    } = useProfileData();\n\n    // 使用 loading 组合式函数\n    const {\n      loading,\n      withLoading\n    } = useLoading();\n\n    // 当前编辑的模块\n    const currentModule = ref(null);\n    const editFormData = ref({});\n    const showEditModal = ref(false);\n\n    // 弹窗状态\n    const showWorkExperienceDialog = ref(false);\n    const showJobIntentionDialog = ref(false);\n    const editJobIntentionData = ref({});\n    const editWorkExperienceData = ref({});\n    const showAIOptimizeDialog = ref(false);\n    const showEducationDialog = ref(false);\n    const editEducationData = ref({});\n    const showProjectDialog = ref(false);\n    const editProjectData = ref({});\n    const showCertificateDialog = ref(false);\n    const editCertificateData = ref({});\n    const showSkillDialog = ref(false);\n    const editSkillData = ref({});\n    const showLanguageDialog = ref(false);\n    const editLanguageData = ref({});\n\n    // 确认对话框状态\n    const showConfirmDialog = ref(false);\n    const confirmMessage = ref('');\n    const confirmCallback = ref(null);\n\n    // 显示确认对话框\n    const showConfirm = (message, callback) => {\n      confirmMessage.value = message;\n      confirmCallback.value = callback;\n      showConfirmDialog.value = true;\n    };\n\n    // 处理确认\n    const handleConfirm = async () => {\n      if (confirmCallback.value) {\n        await confirmCallback.value();\n      }\n      showConfirmDialog.value = false;\n    };\n\n    // 计算激活的模块\n    const activeModules = computed(() => {\n      if (!modules.value) return [];\n      const active = modules.value.filter(module => {\n        // 只显示布局中明确设置为 visible: true 的模块\n        const layout = layoutData.value[module.type];\n        return layout?.visible === true;\n      }).sort((a, b) => {\n        const orderA = layoutData.value[a.type]?.order || 999;\n        const orderB = layoutData.value[b.type]?.order || 999;\n        return orderA - orderB;\n      });\n      return active;\n    });\n\n    // 计算未激活的模块\n    const inactiveModules = computed(() => {\n      if (!modules.value) return [];\n      const inactive = modules.value.filter(module => {\n        // 只显示布局中明确设置为 visible: false 的模块\n        const layout = layoutData.value[module.type];\n        return layout?.visible === false;\n      });\n      return inactive;\n    });\n\n    // 定义模块类型\n    const moduleTypes = Object.keys(ALL_MODULES);\n\n    // 初始化数据\n    const initData = async () => {\n      await withLoading(async () => {\n        try {\n          // 1. 先获取布局数据\n          const layoutResponse = await profile.getLayout();\n          if (layoutResponse.data?.code === 200) {\n            // 确保布局数据的正确结构\n            const layout = layoutResponse.data.data.layout || {};\n            layoutData.value = layout;\n          }\n\n          // 2. 获取档案数据\n          const response = await profile.getData();\n          if (response.data?.code === 200) {\n            console.log('档案数据:', response.data.data);\n            profileData.value = response.data.data;\n          }\n\n          // 3. 获取模块数据\n          await fetchModulesData();\n\n          // 4. 获取完整度数据\n          await fetchCompletionData();\n          completionData.value = profileStore.completeness;\n        } catch (error) {\n          console.error('初始化数据失败:', error);\n          ElMessage.error('获取数据失败，请刷新重试');\n        }\n      });\n    };\n\n    // 更新数据\n    const handleUpdate = async updateInfo => {\n      try {\n        if (updateInfo?.type === 'avatar') {\n          // 直接更新头像\n          if (profileData.value?.basic_info) {\n            profileData.value.basic_info.avatar = updateInfo.value;\n            // 强制刷新\n            await nextTick();\n          }\n          return;\n        }\n        // 重新获取档案数据\n        await initData();\n      } catch (error) {\n        console.error('更新失败:', error);\n      }\n    };\n\n    // 处理编辑\n    const handleEdit = (type, data) => {\n      // 根据类型显示对应的弹窗\n      switch (type) {\n        case 'basic_info':\n          currentModule.value = {\n            type\n          };\n          editFormData.value = data || {};\n          showEditModal.value = true;\n          break;\n        case 'job_intention':\n          editJobIntentionData.value = data || {};\n          showJobIntentionDialog.value = true;\n          break;\n        case 'work_experience':\n          // 确保日期格式正确\n          const formattedData = _objectSpread(_objectSpread({}, data), {}, {\n            start_date: data.start_date?.split('T')[0] || null,\n            end_date: data.end_date?.split('T')[0] || null\n          });\n          editWorkExperienceData.value = formattedData;\n          showWorkExperienceDialog.value = true;\n          break;\n        case 'education':\n          editEducationData.value = data || {};\n          showEducationDialog.value = true;\n          break;\n        case 'project':\n          editProjectData.value = data || {};\n          showProjectDialog.value = true;\n          break;\n        case 'certificate':\n          editCertificateData.value = data || {};\n          showCertificateDialog.value = true;\n          break;\n        case 'skill':\n          editSkillData.value = data || {};\n          showSkillDialog.value = true;\n          break;\n        case 'language':\n          editLanguageData.value = data || {};\n          showLanguageDialog.value = true;\n          break;\n        default:\n          currentModule.value = {\n            type\n          };\n          editFormData.value = data || {};\n          showEditModal.value = true;\n          break;\n      }\n    };\n\n    // 处理个人简介展开/收起\n    const toggleBioExpand = () => {\n      bioExpanded.value = !bioExpanded.value;\n    };\n\n    // 处理工作经历提交\n    const handleWorkExperienceSubmit = async data => {\n      try {\n        await profile.updateModule('work_experience', data);\n        ElMessage.success('保存成功');\n        showWorkExperienceDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n\n    // 获取模块显示名称\n    const getModuleName = type => {\n      const moduleNames = {\n        basic_info: '基本信息',\n        job_intention: '求职意向',\n        work_experience: '工作经历',\n        education: '教育经历',\n        project: '项目经历',\n        skill: '专业技能',\n        certificate: '证书奖项',\n        language: '语言能力',\n        portfolio: '作品展示',\n        social_link: '社交主页'\n      };\n      return moduleNames[type] || type;\n    };\n\n    // 处理提交\n    const handleSubmit = async data => {\n      try {\n        await withLoading(async () => {\n          const type = currentModule.value?.type;\n          console.log('提交数据:', {\n            type,\n            data\n          });\n\n          // 使用统一的 updateModule 方法\n          const response = await profile.updateModule(type, data);\n          if (response.data?.code === 200) {\n            ElMessage.success('保存成功');\n            showEditModal.value = false;\n            // 重新获取数据\n            await initData();\n          } else {\n            throw new Error(response.data?.message || '保存失败');\n          }\n        });\n      } catch (error) {\n        console.error('保存失败:', error);\n        if (error.response?.data?.errors) {\n          const errorMessages = Object.entries(error.response.data.errors).map(([field, messages]) => `${field}: ${messages.join(', ')}`).join('\\n');\n          ElMessage.error(errorMessages);\n        } else {\n          ElMessage.error(error.message || '保存失败，请重试');\n        }\n      }\n    };\n\n    // 处理添加\n    const handleAdd = type => {\n      currentModule.value = {\n        type\n      };\n\n      // 根据类型显示对应的弹窗并清空数据\n      switch (type) {\n        case 'work_experience':\n          editWorkExperienceData.value = {\n            // 重置为空对象\n            name: '',\n            company: '',\n            position: '',\n            start_date: null,\n            end_date: null,\n            description: '',\n            is_current: false\n          };\n          showWorkExperienceDialog.value = true;\n          break;\n        case 'education':\n          editEducationData.value = {\n            // 重置为空对象\n            school: '',\n            major: '',\n            degree: '',\n            start_date: null,\n            end_date: null,\n            description: ''\n          };\n          showEducationDialog.value = true;\n          break;\n        case 'project':\n          editProjectData.value = {\n            // 重置为空对象\n            name: '',\n            role: '',\n            start_date: null,\n            end_date: null,\n            description: '',\n            technologies: ''\n          };\n          showProjectDialog.value = true;\n          break;\n        case 'certificate':\n          editCertificateData.value = {\n            // 重置为空对象\n            name: '',\n            issuing_authority: '',\n            issue_date: null,\n            expiry_date: null,\n            description: ''\n          };\n          showCertificateDialog.value = true;\n          break;\n        case 'skill':\n          editSkillData.value = {\n            // 重置为空对象\n            name: '',\n            level: '初级',\n            description: '',\n            projects: '',\n            order: 0\n          };\n          showSkillDialog.value = true;\n          break;\n        case 'language':\n          editLanguageData.value = {\n            // 重置为空对象\n            language: '',\n            proficiency: '',\n            certificates: ''\n          };\n          showLanguageDialog.value = true;\n          break;\n        case 'job_intention':\n          editJobIntentionData.value = {\n            // 重置为空对象\n            position: '',\n            industry: '',\n            location: '',\n            salary_range: '',\n            job_type: '',\n            description: ''\n          };\n          showJobIntentionDialog.value = true;\n          break;\n        default:\n          editFormData.value = {}; // 其他类型直接清空\n          showEditModal.value = true;\n          break;\n      }\n    };\n\n    // 处理移除模块\n    const handleModuleRemove = async (type, id) => {\n      try {\n        if (id) {\n          // 显示删除确认对话框\n          showDeleteConfirm(type, id);\n        } else {\n          // 获取当前所有可见模块的配置（除了要移除的）\n          const updatedModules = {};\n          activeModules.value.filter(module => module.type !== type).forEach((module, index) => {\n            updatedModules[module.type] = {\n              visible: true,\n              order: index + 1 // 重新排序剩余模块\n            };\n          });\n\n          // 添加要移除的模块配置\n          const layoutUpdate = _objectSpread(_objectSpread({}, updatedModules), {}, {\n            [type]: {\n              visible: false,\n              order: 999 // 移到未激活模块区域\n            }\n          });\n\n          // 提交布局更新\n          const response = await profile.updateLayout(layoutUpdate);\n          if (response.data?.code !== 200) {\n            throw new Error('保存布局失败');\n          }\n          ElMessage.success('模块已隐藏');\n\n          // 重新获取所有数据以确保同步\n          await initData();\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除失败:', error);\n          if (error.response?.data?.message) {\n            ElMessage.error(error.response.data.message);\n          } else {\n            ElMessage.error('删除失败，请重试');\n          }\n        }\n      }\n    };\n\n    // 处理删除确认\n    const handleDeleteConfirm = async () => {\n      try {\n        const {\n          type,\n          id\n        } = currentDeleteItem.value;\n        await profile.deleteModuleItem(type, id);\n        ElMessage.success('删除成功');\n        await initData();\n      } catch (error) {\n        console.error('删除失败:', error);\n        ElMessage.error('删除失败，请重试');\n      } finally {\n        closeDeleteConfirm();\n      }\n    };\n    const handleJobIntentionSubmit = async data => {\n      try {\n        await profile.updateModule('job_intention', data);\n        ElMessage.success('保存成功');\n        showJobIntentionDialog.value = false;\n        // 重新获取完整数据\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n\n    // 处理教育经历提交\n    const handleEducationSubmit = async data => {\n      try {\n        await profile.updateModule('education', data);\n        ElMessage.success('保存成功');\n        showEducationDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n    const handleAIOptimize = async () => {\n      // AI优化逻辑\n    };\n    const showDeleteConfirmDialog = ref(false);\n    const currentDeleteItem = ref(null);\n    const showDeleteConfirm = (type, id) => {\n      showDeleteConfirmDialog.value = true;\n      currentDeleteItem.value = {\n        type,\n        id\n      };\n    };\n    const closeDeleteConfirm = () => {\n      showDeleteConfirmDialog.value = false;\n      currentDeleteItem.value = null;\n    };\n\n    // 处理添加模块\n    const handleAddModule = async type => {\n      try {\n        // 获取当前所有可见模块的配置\n        const visibleModules = {};\n        activeModules.value.forEach((module, index) => {\n          visibleModules[module.type] = {\n            visible: true,\n            order: index + 1 // 保持现有模块的顺序\n          };\n        });\n\n        // 添加新模块到最后\n        const layoutUpdate = _objectSpread(_objectSpread({}, visibleModules), {}, {\n          // 保持现有模块的配置\n          [type]: {\n            visible: true,\n            order: activeModules.value.length + 1 // 新模块放在最后\n          }\n        });\n\n        // 提交布局更新\n        const response = await profile.updateLayout(layoutUpdate);\n        if (response.data?.code !== 200) {\n          throw new Error('保存布局失败');\n        }\n        ElMessage.success('模块已添加');\n\n        // 重新获取所有数据以确保同步\n        await initData();\n      } catch (error) {\n        console.error('添加模块失败:', error);\n        ElMessage.error('添加失败，请重试');\n      }\n    };\n\n    // 处理项目经历提交\n    const handleProjectSubmit = async data => {\n      try {\n        await profile.updateModule('project', data);\n        ElMessage.success('保存成功');\n        showProjectDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n\n    // 处理证书奖项提交\n    const handleCertificateSubmit = async data => {\n      try {\n        await profile.updateModule('certificate', data);\n        ElMessage.success('保存成功');\n        showCertificateDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n\n    // 处理专业技能提交\n    const handleSkillSubmit = async data => {\n      try {\n        // 确保数据格式正确\n        const skillData = {\n          name: data.name?.trim(),\n          level: data.level || '初级',\n          description: data.description?.trim() || '',\n          projects: data.projects || '',\n          order: data.order || 0\n        };\n        if (data.id) {\n          await profile.updateModule('skills', _objectSpread(_objectSpread({}, skillData), {}, {\n            id: data.id\n          }));\n        } else {\n          await profile.updateModule('skills', skillData);\n        }\n        ElMessage.success('保存成功');\n        showSkillDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        if (error.response?.data?.errors) {\n          const errorMessages = Object.entries(error.response.data.errors).map(([field, messages]) => `${field}: ${messages.join(', ')}`).join('\\n');\n          ElMessage.error(errorMessages);\n        } else {\n          ElMessage.error('保存失败，请重试');\n        }\n      }\n    };\n\n    // 处理语言能力提交\n    const handleLanguageSubmit = async data => {\n      try {\n        await profile.updateModule('language', data);\n        ElMessage.success('保存成功');\n        showLanguageDialog.value = false;\n        await initData();\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error('保存失败，请重试');\n      }\n    };\n\n    // 监听数据变化\n    watch(() => profileData.value, newData => {\n      if (newData) {\n        updateModules(newData);\n      }\n    }, {\n      deep: true\n    });\n\n    // 处理模块数据更新\n    const updateModules = data => {\n      if (!data) return;\n      const activeModulesList = moduleTypes.filter(type => layoutStatus.value[type]?.visible).map(type => ({\n        type,\n        data: data[type],\n        name: ALL_MODULES[type].name,\n        editable: true\n      }));\n\n      // 更新 activeModules 的引用而不是直接修改计算属性\n      modules.value = activeModulesList;\n\n      // 处理未激活模块\n      const inactiveCount = moduleTypes.filter(type => !layoutStatus.value[type]?.visible).length;\n      const inactiveModulesList = {\n        count: inactiveCount,\n        modules: moduleTypes.filter(type => !layoutStatus.value[type]?.visible).map(type => ({\n          type,\n          name: ALL_MODULES[type].name\n        }))\n      };\n      // 更新 inactiveModules 的引用\n      modules.value = [...activeModulesList, ...inactiveModulesList.modules];\n    };\n\n    // 初始化\n    onMounted(() => {\n      initData();\n      // 监听档案更新事件\n      eventBus.on('profile-updated', async () => {\n        await fetchProfileData();\n      });\n\n      // 监听完整度更新事件\n      eventBus.on('completeness-updated', async () => {\n        await fetchCompletenessData();\n      });\n    });\n\n    // 移除事件监听\n    onUnmounted(() => {\n      eventBus.off('profile-updated');\n      eventBus.off('completeness-updated');\n    });\n\n    // 获取档案数据\n    const fetchProfileData = async () => {\n      try {\n        const response = await profile.getData();\n        if (response.data?.code === 200) {\n          // 更新档案数据\n          profileData.value = response.data.data;\n        }\n      } catch (error) {\n        console.error('获取档案数据失败:', error);\n      }\n    };\n\n    // 监听数据变化\n    watch(() => completionData.value, newData => {\n      if (newData) {\n        // 更新父组件的数据\n        eventBus.emit('completeness-updated', newData);\n      }\n    }, {\n      deep: true\n    });\n\n    // 获取完整度数据\n    const fetchCompletenessData = async () => {\n      try {\n        await profileStore.fetchCompleteness();\n        completionData.value = profileStore.completeness;\n        // 通知其他组件完整度数据已更新\n        eventBus.emit('completeness-updated', completionData.value);\n      } catch (error) {\n        console.error('获取完整度数据失败:', error);\n      }\n    };\n\n    // 添加删除处理函数\n    const handleDelete = async (type, id) => {\n      try {\n        console.log('MyProfile - 处理删除:', type, id);\n        // 重新获取数据\n        await fetchModulesData();\n      } catch (error) {\n        console.error('刷新数据失败:', error);\n        ElMessage.error('刷新数据失败');\n      }\n    };\n\n    // 处理模块数据保存\n    const handleModuleSave = async (type, data) => {\n      try {\n        showEditDialog.value = false;\n        let response;\n        if (data.id) {\n          // 编辑\n          response = await profile.updateModule(type, data);\n        } else {\n          // 新增\n          response = await profile.addModuleItem(type, data);\n        }\n\n        // 确保返回数据正确\n        if (response && response.data) {\n          // 刷新模块数据\n          await fetchModulesData();\n          ElMessage.success(data.id ? '更新成功' : '添加成功');\n        } else {\n          throw new Error('保存失败');\n        }\n      } catch (error) {\n        console.error('保存失败:', error);\n        ElMessage.error(error.message || '保存失败');\n      }\n    };\n    const handleModuleEdit = async (type, data) => {\n      try {\n        if (type === 'basic_info') {\n          await store.dispatch('updateBasicInfo', {\n            type: 'basic',\n            data\n          });\n          // 更新成功后重新获取数据\n          await fetchData();\n          showToast('保存成功', 'success');\n        }\n        // ... 其他模块的处理\n      } catch (error) {\n        console.error('保存失败:', error);\n        showToast(error.message || '保存失败', 'error');\n      }\n    };\n\n    // 欢迎横幅状态\n    const hideWelcomeBanner = ref(localStorage.getItem('hideWelcomeBanner') === 'true');\n\n    // 关闭欢迎横幅\n    const closeWelcomeBanner = () => {\n      hideWelcomeBanner.value = true;\n      localStorage.setItem('hideWelcomeBanner', 'true');\n    };\n    const __returned__ = {\n      profileLoading,\n      profileData,\n      completionData,\n      bioExpanded,\n      showBioExpandButton,\n      layoutData,\n      layoutStatus,\n      modulesLoading,\n      modules,\n      fetchModulesData,\n      fetchCompletionData,\n      loading,\n      withLoading,\n      currentModule,\n      editFormData,\n      showEditModal,\n      showWorkExperienceDialog,\n      showJobIntentionDialog,\n      editJobIntentionData,\n      editWorkExperienceData,\n      showAIOptimizeDialog,\n      showEducationDialog,\n      editEducationData,\n      showProjectDialog,\n      editProjectData,\n      showCertificateDialog,\n      editCertificateData,\n      showSkillDialog,\n      editSkillData,\n      showLanguageDialog,\n      editLanguageData,\n      showConfirmDialog,\n      confirmMessage,\n      confirmCallback,\n      showConfirm,\n      handleConfirm,\n      activeModules,\n      inactiveModules,\n      moduleTypes,\n      initData,\n      handleUpdate,\n      handleEdit,\n      toggleBioExpand,\n      handleWorkExperienceSubmit,\n      getModuleName,\n      handleSubmit,\n      handleAdd,\n      handleModuleRemove,\n      handleDeleteConfirm,\n      handleJobIntentionSubmit,\n      handleEducationSubmit,\n      handleAIOptimize,\n      showDeleteConfirmDialog,\n      currentDeleteItem,\n      showDeleteConfirm,\n      closeDeleteConfirm,\n      handleAddModule,\n      handleProjectSubmit,\n      handleCertificateSubmit,\n      handleSkillSubmit,\n      handleLanguageSubmit,\n      updateModules,\n      fetchProfileData,\n      fetchCompletenessData,\n      handleDelete,\n      handleModuleSave,\n      handleModuleEdit,\n      hideWelcomeBanner,\n      closeWelcomeBanner,\n      ref,\n      onMounted,\n      computed,\n      watch,\n      nextTick,\n      onUnmounted,\n      get useModules() {\n        return useModules;\n      },\n      get useProfileData() {\n        return useProfileData;\n      },\n      get useLoading() {\n        return useLoading;\n      },\n      get profile() {\n        return profile;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get eventBus() {\n        return eventBus;\n      },\n      get Dialog() {\n        return Dialog;\n      },\n      get DialogPanel() {\n        return DialogPanel;\n      },\n      get DialogTitle() {\n        return DialogTitle;\n      },\n      get TransitionChild() {\n        return TransitionChild;\n      },\n      get TransitionRoot() {\n        return TransitionRoot;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get ExclamationTriangleIcon() {\n        return ExclamationTriangleIcon;\n      },\n      get DocumentTextIcon() {\n        return DocumentTextIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get ALL_MODULES() {\n        return ALL_MODULES;\n      },\n      BasicInfo,\n      ResumeStatus,\n      ModuleList,\n      EditWorkExperienceDialog,\n      EditBasicDialog,\n      EditJobIntentionDialog,\n      EditSocialLinkDialog,\n      EditPortfolioDialog,\n      AIOptimizeDialog,\n      EditEducationDialog,\n      EditProjectDialog,\n      EditCertificateDialog,\n      EditSkillDialog,\n      EditLanguageDialog\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","nextTick","onUnmounted","useModules","useProfileData","useLoading","profile","ElMessage","eventBus","Dialog","DialogPanel","DialogTitle","TransitionChild","TransitionRoot","PlusIcon","ExclamationTriangleIcon","DocumentTextIcon","XMarkIcon","ALL_MODULES","BasicInfo","ResumeStatus","ModuleList","EditWorkExperienceDialog","EditBasicDialog","EditJobIntentionDialog","EditSocialLinkDialog","EditPortfolioDialog","AIOptimizeDialog","EditEducationDialog","EditProjectDialog","EditCertificateDialog","EditSkillDialog","EditLanguageDialog","profileLoading","profileData","completionData","bioExpanded","showBioExpandButton","layoutData","layoutStatus","value","loading","modulesLoading","modules","fetchModulesData","fetchCompletionData","withLoading","currentModule","editFormData","showEditModal","showWorkExperienceDialog","showJobIntentionDialog","editJobIntentionData","editWorkExperienceData","showAIOptimizeDialog","showEducationDialog","editEducationData","showProjectDialog","editProjectData","showCertificateDialog","editCertificateData","showSkillDialog","editSkillData","showLanguageDialog","editLanguageData","showConfirmDialog","confirmMessage","confirmCallback","showConfirm","message","callback","handleConfirm","activeModules","active","filter","module","layout","type","visible","sort","a","b","orderA","order","orderB","inactiveModules","inactive","moduleTypes","Object","keys","initData","layoutResponse","getLayout","data","code","response","getData","console","log","profileStore","completeness","error","handleUpdate","updateInfo","basic_info","avatar","handleEdit","formattedData","_objectSpread","start_date","split","end_date","toggleBioExpand","handleWorkExperienceSubmit","updateModule","success","getModuleName","moduleNames","job_intention","work_experience","education","project","skill","certificate","language","portfolio","social_link","handleSubmit","Error","errors","errorMessages","entries","map","field","messages","join","handleAdd","name","company","position","description","is_current","school","major","degree","role","technologies","issuing_authority","issue_date","expiry_date","level","projects","proficiency","certificates","industry","location","salary_range","job_type","handleModuleRemove","id","showDeleteConfirm","updatedModules","forEach","index","layoutUpdate","updateLayout","handleDeleteConfirm","currentDeleteItem","deleteModuleItem","closeDeleteConfirm","handleJobIntentionSubmit","handleEducationSubmit","handleAIOptimize","showDeleteConfirmDialog","handleAddModule","visibleModules","length","handleProjectSubmit","handleCertificateSubmit","handleSkillSubmit","skillData","trim","handleLanguageSubmit","newData","updateModules","deep","activeModulesList","editable","inactiveCount","inactiveModulesList","count","on","fetchProfileData","fetchCompletenessData","off","emit","fetchCompleteness","handleDelete","handleModuleSave","showEditDialog","addModuleItem","handleModuleEdit","store","dispatch","fetchData","showToast","hideWelcomeBanner","localStorage","getItem","closeWelcomeBanner","setItem"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/user/MyProfile/index.vue"],"sourcesContent":["<!-- src/views/user/MyProfile/index.vue -->\n<template>\n  <div class=\"container mx-auto pb-6\">\n    <div class=\"max-w-4xl mx-auto space-y-4\">\n      <!-- 顶部提示横幅 -->\n      <div v-if=\"!hideWelcomeBanner\" class=\"bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg shadow-lg overflow-hidden relative\">\n        <div class=\"px-4 py-5 sm:p-6\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0\">\n              <DocumentTextIcon class=\"h-6 w-6 text-white\" />\n            </div>\n            <div class=\"ml-4\">\n              <h3 class=\"text-lg font-medium text-white\">欢迎来到简历档案</h3>\n              <div class=\"mt-1\">\n                <p class=\"text-sm text-blue-100\">\n                  这里是您的专业简历信息管理中心，完善的档案信息将帮助您生成更出色的简历。请注意，这里的信息与您在社区中展示的个人主页是分开的，专注于求职场景使用。\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- 关闭按钮 -->\n        <button \n          @click=\"closeWelcomeBanner\"\n          class=\"absolute top-2 right-2 p-1 text-white/80 hover:text-white transition-colors\"\n        >\n          <XMarkIcon class=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      <!-- 基本信息 -->\n      <BasicInfo\n        :resumeData=\"profileData?.basic_info\"\n        :loading=\"profileLoading\"\n        :bioExpanded=\"bioExpanded\"\n        :showBioExpandButton=\"showBioExpandButton\"\n        @edit=\"handleEdit\"\n        @update=\"handleUpdate\"\n        @toggleBioExpand=\"toggleBioExpand\"\n      />\n\n      <!-- 简历状态 -->\n      <ResumeStatus\n        :completion-data=\"completionData\"\n        :profile-data=\"profileData\"\n        :loading=\"profileLoading\"\n      />\n\n      <!-- 激活的模块列表 -->\n      <ModuleList\n        :active-modules=\"activeModules\"\n        :inactive-modules=\"inactiveModules\"\n        :loading=\"modulesLoading\"\n        :fetch-modules-data=\"fetchModulesData\"\n        @edit=\"handleEdit\"\n        @add=\"handleAdd\"\n        @remove=\"handleModuleRemove\"\n        @delete=\"handleDelete\"\n      />\n\n      <!-- 未激活的模块按钮组 -->\n      <div v-if=\"inactiveModules.length > 0\" class=\"bg-white rounded-lg shadow\">\n        <div class=\"px-4 py-3\">\n          <h3 class=\"text-sm font-medium text-gray-900\">添加更多模块</h3>\n          <div class=\"mt-3 flex flex-wrap gap-2\">\n            <button\n              v-for=\"module in inactiveModules\"\n              :key=\"module.type\"\n              @click=\"handleAddModule(module.type)\"\n              class=\"inline-flex items-center px-3 py-1.5 text-sm text-gray-600 bg-gray-50 hover:bg-gray-100 rounded border border-gray-200\"\n            >\n              {{ getModuleName(module.type) }}\n              <PlusIcon class=\"w-4 h-4 ml-1 text-gray-400\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 工作经历编辑弹窗 -->\n      <EditWorkExperienceDialog\n        v-model=\"showWorkExperienceDialog\"\n        :initial-data=\"editWorkExperienceData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleWorkExperienceSubmit\"\n      />\n\n      <!-- 求职意向编辑弹窗 -->\n      <EditJobIntentionDialog\n        v-model=\"showJobIntentionDialog\"\n        :initial-data=\"editJobIntentionData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleJobIntentionSubmit\"\n      />\n\n      <!-- 基本信息编辑弹窗 -->\n      <EditBasicDialog\n        v-if=\"currentModule?.type === 'basic_info'\"\n        v-model=\"showEditModal\"\n        :initial-data=\"editFormData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleSubmit\"\n      />\n\n      <!-- AI 优化弹窗 -->\n      <AIOptimizeDialog\n        v-model=\"showAIOptimizeDialog\"\n        :profile-data=\"profileData\"\n        @apply=\"handleAIOptimize\"\n      />\n\n      <!-- 删除确认弹窗 -->\n      <TransitionRoot appear :show=\"!!showDeleteConfirmDialog\" as=\"div\">\n        <Dialog as=\"div\" class=\"relative z-50\" @close=\"closeDeleteConfirm\">\n          <TransitionChild\n            as=\"div\"\n            :show=\"true\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0\"\n            enter-to=\"opacity-100\"\n            leave=\"duration-200 ease-in\"\n            leave-from=\"opacity-100\"\n            leave-to=\"opacity-0\"\n          >\n            <div class=\"fixed inset-0 bg-black/25\" />\n          </TransitionChild>\n\n          <div class=\"fixed inset-0 overflow-y-auto\">\n            <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n              <TransitionChild\n                as=\"div\"\n                :show=\"true\"\n                enter=\"duration-300 ease-out\"\n                enter-from=\"opacity-0 scale-95\"\n                enter-to=\"opacity-100 scale-100\"\n                leave=\"duration-200 ease-in\"\n                leave-from=\"opacity-100 scale-100\"\n                leave-to=\"opacity-0 scale-95\"\n              >\n                <DialogPanel class=\"w-full max-w-md transform overflow-hidden rounded-xl bg-white text-left align-middle shadow-xl transition-all\">\n                  <div class=\"p-6\">\n                    <div class=\"flex items-start space-x-3\">\n                      <div class=\"p-2 bg-red-50 rounded-full flex-shrink-0\">\n                        <ExclamationTriangleIcon class=\"w-6 h-6 text-red-600\" />\n                      </div>\n                      <div class=\"flex-1\">\n                        <DialogTitle as=\"h3\" class=\"text-lg font-medium text-gray-900\">\n                          确认删除工作经历？\n                        </DialogTitle>\n                        <p class=\"mt-2 text-sm text-gray-500\">\n                          删除后将无法恢复，请确认是否继续。\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div class=\"mt-6 flex justify-end space-x-3\">\n                      <button\n                        type=\"button\"\n                        @click=\"closeDeleteConfirm\"\n                        class=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\n                      >\n                        取消\n                      </button>\n                      <button\n                        type=\"button\"\n                        @click=\"confirmDelete\"\n                        class=\"px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                      >\n                        确认删除\n                      </button>\n                    </div>\n                  </div>\n                </DialogPanel>\n              </TransitionChild>\n            </div>\n          </div>\n        </Dialog>\n      </TransitionRoot>\n\n      <!-- 教育经历编辑弹窗 -->\n      <EditEducationDialog\n        v-model=\"showEducationDialog\"\n        :initial-data=\"editEducationData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleEducationSubmit\"\n      />\n\n      <!-- 项目经历编辑弹窗 -->\n      <EditProjectDialog\n        v-model=\"showProjectDialog\"\n        :initial-data=\"editProjectData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleProjectSubmit\"\n      />\n\n      <!-- 证书奖项编辑弹窗 -->\n      <EditCertificateDialog\n        v-model=\"showCertificateDialog\"\n        :initial-data=\"editCertificateData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleCertificateSubmit\"\n      />\n\n      <!-- 专业技能编辑弹窗 -->\n      <EditSkillDialog\n        v-model=\"showSkillDialog\"\n        :initial-data=\"editSkillData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleSkillSubmit\"\n      />\n\n      <!-- 语言能力编辑弹窗 -->\n      <EditLanguageDialog\n        v-model=\"showLanguageDialog\"\n        :initial-data=\"editLanguageData\"\n        :loading=\"profileLoading\"\n        @submit=\"handleLanguageSubmit\"\n      />\n\n      <!-- 社交主页编辑弹窗 -->\n      <EditSocialLinkDialog\n        v-if=\"currentModule?.type === 'social_link'\"\n        v-model=\"showEditModal\"\n        :initial-data=\"editFormData\"\n        :loading=\"loading\"\n        @submit=\"handleSubmit\"\n      />\n      \n      <!-- 作品展示编辑弹窗 -->\n      <EditPortfolioDialog\n        v-if=\"currentModule?.type === 'portfolio'\"\n        v-model=\"showEditModal\"\n        :initial-data=\"editFormData\"\n        :loading=\"loading\"\n        @submit=\"handleSubmit\"\n      />\n\n      <!-- 确认对话框 -->\n      <TransitionRoot appear :show=\"showConfirmDialog\" as=\"template\">\n        <Dialog as=\"div\" class=\"relative z-50\" @close=\"showConfirmDialog = false\">\n          <TransitionChild\n            as=\"template\"\n            enter=\"duration-300 ease-out\"\n            enter-from=\"opacity-0\"\n            enter-to=\"opacity-100\"\n            leave=\"duration-200 ease-in\"\n            leave-from=\"opacity-100\"\n            leave-to=\"opacity-0\"\n          >\n            <div class=\"fixed inset-0 bg-black/25\" />\n          </TransitionChild>\n\n          <div class=\"fixed inset-0 overflow-y-auto\">\n            <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\n              <TransitionChild\n                as=\"template\"\n                enter=\"duration-300 ease-out\"\n                enter-from=\"opacity-0 scale-95\"\n                enter-to=\"opacity-100 scale-100\"\n                leave=\"duration-200 ease-in\"\n                leave-from=\"opacity-100 scale-100\"\n                leave-to=\"opacity-0 scale-95\"\n              >\n                <DialogPanel class=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\n                  <DialogTitle as=\"h3\" class=\"text-lg font-medium leading-6 text-gray-900\">\n                    确认操作\n                  </DialogTitle>\n                  <div class=\"mt-2\">\n                    <p class=\"text-sm text-gray-500\">\n                      {{ confirmMessage }}\n                    </p>\n                  </div>\n\n                  <div class=\"mt-4 flex justify-end space-x-3\">\n                    <button\n                      type=\"button\"\n                      class=\"inline-flex justify-center rounded-md border border-transparent bg-gray-100 px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-200\"\n                      @click=\"showConfirmDialog = false\"\n                    >\n                      取消\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"inline-flex justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white hover:bg-red-700\"\n                      @click=\"handleConfirm\"\n                    >\n                      确认\n                    </button>\n                  </div>\n                </DialogPanel>\n              </TransitionChild>\n            </div>\n          </div>\n        </Dialog>\n      </TransitionRoot>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch, nextTick, onUnmounted } from 'vue'\nimport { useModules } from '@/composables/useModules'\nimport { useProfileData } from '@/composables/useProfileData'\nimport useLoading from '@/composables/useLoading'\nimport profile from '@/api/profile'\nimport { ElMessage } from 'element-plus'\nimport { eventBus } from '@/utils/eventBus'\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  TransitionChild,\n  TransitionRoot\n} from '@headlessui/vue'\nimport {\n  PlusIcon,\n  ExclamationTriangleIcon,\n  DocumentTextIcon,\n  XMarkIcon\n} from '@heroicons/vue/24/outline'\nimport { ALL_MODULES } from '@/constants'\n\n// 组件导入\nimport BasicInfo from './components/BasicInfo.vue'\nimport ResumeStatus from './components/ResumeStatus.vue'\nimport ModuleList from './components/ModuleList.vue'\nimport EditWorkExperienceDialog from './dialogs/EditWorkExperienceDialog.vue'\nimport EditBasicDialog from './dialogs/EditBasicDialog.vue'\nimport EditJobIntentionDialog from './dialogs/EditJobIntentionDialog.vue'\nimport EditSocialLinkDialog from './dialogs/EditSocialLinkDialog.vue'\nimport EditPortfolioDialog from './dialogs/EditPortfolioDialog.vue'\nimport AIOptimizeDialog from './dialogs/AIOptimizeDialog.vue'\nimport EditEducationDialog from './dialogs/EditEducationDialog.vue'\nimport EditProjectDialog from './dialogs/EditProjectDialog.vue'\nimport EditCertificateDialog from './dialogs/EditCertificateDialog.vue'\nimport EditSkillDialog from './dialogs/EditSkillDialog.vue'\nimport EditLanguageDialog from './dialogs/EditLanguageDialog.vue'\n\n\n// 获取数据相关\nconst profileLoading = ref(false)\nconst profileData = ref(null)\nconst completionData = ref(null)\nconst bioExpanded = ref(false)\nconst showBioExpandButton = ref(false)\n\n// 布局数据\nconst layoutData = ref({})\n\n// 布局状态\nconst layoutStatus = computed(() => {\n  return layoutData.value || {}\n})\n\n// 使用组合式函数\nconst { \n  loading: modulesLoading,\n  modules,\n  fetchModulesData\n} = useModules(layoutData)\n\nconst {\n  fetchCompletionData\n} = useProfileData()\n\n// 使用 loading 组合式函数\nconst { loading, withLoading } = useLoading()\n\n// 当前编辑的模块\nconst currentModule = ref(null)\nconst editFormData = ref({})\nconst showEditModal = ref(false)\n\n// 弹窗状态\nconst showWorkExperienceDialog = ref(false)\nconst showJobIntentionDialog = ref(false)\nconst editJobIntentionData = ref({})\nconst editWorkExperienceData = ref({})\nconst showAIOptimizeDialog = ref(false)\nconst showEducationDialog = ref(false)\nconst editEducationData = ref({})\nconst showProjectDialog = ref(false)\nconst editProjectData = ref({})\nconst showCertificateDialog = ref(false)\nconst editCertificateData = ref({})\nconst showSkillDialog = ref(false)\nconst editSkillData = ref({})\nconst showLanguageDialog = ref(false)\nconst editLanguageData = ref({})\n\n// 确认对话框状态\nconst showConfirmDialog = ref(false)\nconst confirmMessage = ref('')\nconst confirmCallback = ref(null)\n\n// 显示确认对话框\nconst showConfirm = (message, callback) => {\n  confirmMessage.value = message\n  confirmCallback.value = callback\n  showConfirmDialog.value = true\n}\n\n// 处理确认\nconst handleConfirm = async () => {\n  if (confirmCallback.value) {\n    await confirmCallback.value()\n  }\n  showConfirmDialog.value = false\n}\n\n// 计算激活的模块\nconst activeModules = computed(() => {\n  if (!modules.value) return []\n  const active = modules.value.filter(module => {\n    // 只显示布局中明确设置为 visible: true 的模块\n    const layout = layoutData.value[module.type]\n    return layout?.visible === true\n  }).sort((a, b) => {\n    const orderA = layoutData.value[a.type]?.order || 999\n    const orderB = layoutData.value[b.type]?.order || 999\n    return orderA - orderB\n  })\n  return active\n})\n\n// 计算未激活的模块\nconst inactiveModules = computed(() => {\n  if (!modules.value) return []\n  const inactive = modules.value.filter(module => {\n    // 只显示布局中明确设置为 visible: false 的模块\n    const layout = layoutData.value[module.type]\n    return layout?.visible === false\n  })\n  return inactive\n})\n\n// 定义模块类型\nconst moduleTypes = Object.keys(ALL_MODULES)\n\n// 初始化数据\nconst initData = async () => {\n  await withLoading(async () => {\n    try {\n      // 1. 先获取布局数据\n      const layoutResponse = await profile.getLayout()\n      if (layoutResponse.data?.code === 200) {\n        // 确保布局数据的正确结构\n        const layout = layoutResponse.data.data.layout || {}\n        layoutData.value = layout\n      }\n\n      // 2. 获取档案数据\n      const response = await profile.getData()\n      if (response.data?.code === 200) {\n        console.log('档案数据:', response.data.data)\n        profileData.value = response.data.data\n      }\n\n      // 3. 获取模块数据\n      await fetchModulesData()\n\n      // 4. 获取完整度数据\n      await fetchCompletionData()\n      completionData.value = profileStore.completeness\n    } catch (error) {\n      console.error('初始化数据失败:', error)\n      ElMessage.error('获取数据失败，请刷新重试')\n    }\n  })\n}\n\n// 更新数据\nconst handleUpdate = async (updateInfo) => {\n  try {\n    if (updateInfo?.type === 'avatar') {\n      // 直接更新头像\n      if (profileData.value?.basic_info) {\n        profileData.value.basic_info.avatar = updateInfo.value\n        // 强制刷新\n        await nextTick()\n      }\n      return\n    }\n    // 重新获取档案数据\n    await initData()\n  } catch (error) {\n    console.error('更新失败:', error)\n  }\n}\n\n// 处理编辑\nconst handleEdit = (type, data) => {\n  // 根据类型显示对应的弹窗\n  switch (type) {\n    case 'basic_info':\n      currentModule.value = { type }\n      editFormData.value = data || {}\n      showEditModal.value = true\n      break\n    case 'job_intention':\n      editJobIntentionData.value = data || {}\n      showJobIntentionDialog.value = true\n      break\n    case 'work_experience':\n      // 确保日期格式正确\n      const formattedData = {\n        ...data,\n        start_date: data.start_date?.split('T')[0] || null,\n        end_date: data.end_date?.split('T')[0] || null\n      }\n      editWorkExperienceData.value = formattedData\n      showWorkExperienceDialog.value = true\n      break\n    case 'education':\n      editEducationData.value = data || {}\n      showEducationDialog.value = true\n      break\n    case 'project':\n      editProjectData.value = data || {}\n      showProjectDialog.value = true\n      break\n    case 'certificate':\n      editCertificateData.value = data || {}\n      showCertificateDialog.value = true\n      break\n    case 'skill':\n      editSkillData.value = data || {}\n      showSkillDialog.value = true\n      break\n    case 'language':\n      editLanguageData.value = data || {}\n      showLanguageDialog.value = true\n      break\n    default:\n      currentModule.value = { type }\n      editFormData.value = data || {}\n      showEditModal.value = true\n      break\n  }\n}\n\n// 处理个人简介展开/收起\nconst toggleBioExpand = () => {\n  bioExpanded.value = !bioExpanded.value\n}\n\n// 处理工作经历提交\nconst handleWorkExperienceSubmit = async (data) => {\n  try {\n    await profile.updateModule('work_experience', data)\n    ElMessage.success('保存成功')\n    showWorkExperienceDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\n// 获取模块显示名称\nconst getModuleName = (type) => {\n  const moduleNames = {\n    basic_info: '基本信息',\n    job_intention: '求职意向',\n    work_experience: '工作经历',\n    education: '教育经历',\n    project: '项目经历',\n    skill: '专业技能',\n    certificate: '证书奖项',\n    language: '语言能力',\n    portfolio: '作品展示',\n    social_link: '社交主页'\n  }\n  return moduleNames[type] || type\n}\n\n// 处理提交\nconst handleSubmit = async (data) => {\n  try {\n    await withLoading(async () => {\n      const type = currentModule.value?.type\n      console.log('提交数据:', { type, data })\n\n      // 使用统一的 updateModule 方法\n      const response = await profile.updateModule(type, data)\n      \n      if (response.data?.code === 200) {\n        ElMessage.success('保存成功')\n        showEditModal.value = false\n        // 重新获取数据\n        await initData()\n      } else {\n        throw new Error(response.data?.message || '保存失败')\n      }\n    })\n  } catch (error) {\n    console.error('保存失败:', error)\n    if (error.response?.data?.errors) {\n      const errorMessages = Object.entries(error.response.data.errors)\n        .map(([field, messages]) => `${field}: ${messages.join(', ')}`)\n        .join('\\n')\n      ElMessage.error(errorMessages)\n    } else {\n      ElMessage.error(error.message || '保存失败，请重试')\n    }\n  }\n}\n\n// 处理添加\nconst handleAdd = (type) => {\n  currentModule.value = { type }\n  \n  // 根据类型显示对应的弹窗并清空数据\n  switch (type) {\n    case 'work_experience':\n      editWorkExperienceData.value = {  // 重置为空对象\n        name: '',\n        company: '',\n        position: '',\n        start_date: null,\n        end_date: null,\n        description: '',\n        is_current: false\n      }\n      showWorkExperienceDialog.value = true\n      break\n      \n    case 'education':\n      editEducationData.value = {  // 重置为空对象\n        school: '',\n        major: '',\n        degree: '',\n        start_date: null,\n        end_date: null,\n        description: ''\n      }\n      showEducationDialog.value = true\n      break\n      \n    case 'project':\n      editProjectData.value = {  // 重置为空对象\n        name: '',\n        role: '',\n        start_date: null,\n        end_date: null,\n        description: '',\n        technologies: ''\n      }\n      showProjectDialog.value = true\n      break\n      \n    case 'certificate':\n      editCertificateData.value = {  // 重置为空对象\n        name: '',\n        issuing_authority: '',\n        issue_date: null,\n        expiry_date: null,\n        description: ''\n      }\n      showCertificateDialog.value = true\n      break\n      \n    case 'skill':\n      editSkillData.value = {  // 重置为空对象\n        name: '',\n        level: '初级',\n        description: '',\n        projects: '',\n        order: 0\n      }\n      showSkillDialog.value = true\n      break\n      \n    case 'language':\n      editLanguageData.value = {  // 重置为空对象\n        language: '',\n        proficiency: '',\n        certificates: ''\n      }\n      showLanguageDialog.value = true\n      break\n      \n    case 'job_intention':\n      editJobIntentionData.value = {  // 重置为空对象\n        position: '',\n        industry: '',\n        location: '',\n        salary_range: '',\n        job_type: '',\n        description: ''\n      }\n      showJobIntentionDialog.value = true\n      break\n      \n    default:\n      editFormData.value = {}  // 其他类型直接清空\n      showEditModal.value = true\n      break\n  }\n}\n\n// 处理移除模块\nconst handleModuleRemove = async (type, id) => {\n  try {\n    if (id) {\n      // 显示删除确认对话框\n      showDeleteConfirm(type, id)\n    } else {\n      // 获取当前所有可见模块的配置（除了要移除的）\n      const updatedModules = {}\n      activeModules.value\n        .filter(module => module.type !== type)\n        .forEach((module, index) => {\n          updatedModules[module.type] = {\n            visible: true,\n            order: index + 1  // 重新排序剩余模块\n          }\n        })\n      \n      // 添加要移除的模块配置\n      const layoutUpdate = {\n        ...updatedModules,\n        [type]: {\n          visible: false,\n          order: 999  // 移到未激活模块区域\n        }\n      }\n\n      // 提交布局更新\n      const response = await profile.updateLayout(layoutUpdate)\n      if (response.data?.code !== 200) {\n        throw new Error('保存布局失败')\n      }\n\n      ElMessage.success('模块已隐藏')\n      \n      // 重新获取所有数据以确保同步\n      await initData()\n    }\n  } catch (error) {\n    if (error !== 'cancel') {\n      console.error('删除失败:', error)\n      if (error.response?.data?.message) {\n        ElMessage.error(error.response.data.message)\n      } else {\n        ElMessage.error('删除失败，请重试')\n      }\n    }\n  }\n}\n\n// 处理删除确认\nconst handleDeleteConfirm = async () => {\n  try {\n    const { type, id } = currentDeleteItem.value\n    await profile.deleteModuleItem(type, id)\n    ElMessage.success('删除成功')\n    await initData()\n  } catch (error) {\n    console.error('删除失败:', error)\n    ElMessage.error('删除失败，请重试')\n  } finally {\n    closeDeleteConfirm()\n  }\n}\n\nconst handleJobIntentionSubmit = async (data) => {\n  try {\n    await profile.updateModule('job_intention', data)\n    ElMessage.success('保存成功')\n    showJobIntentionDialog.value = false\n    // 重新获取完整数据\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\n// 处理教育经历提交\nconst handleEducationSubmit = async (data) => {\n  try {\n    await profile.updateModule('education', data)\n    ElMessage.success('保存成功')\n    showEducationDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\nconst handleAIOptimize = async () => {\n  // AI优化逻辑\n}\n\nconst showDeleteConfirmDialog = ref(false)\nconst currentDeleteItem = ref(null)\n\nconst showDeleteConfirm = (type, id) => {\n  showDeleteConfirmDialog.value = true\n  currentDeleteItem.value = { type, id }\n}\n\nconst closeDeleteConfirm = () => {\n  showDeleteConfirmDialog.value = false\n  currentDeleteItem.value = null\n}\n\n// 处理添加模块\nconst handleAddModule = async (type) => {\n  try {\n    // 获取当前所有可见模块的配置\n    const visibleModules = {}\n    activeModules.value.forEach((module, index) => {\n      visibleModules[module.type] = {\n        visible: true,\n        order: index + 1  // 保持现有模块的顺序\n      }\n    })\n    \n    // 添加新模块到最后\n    const layoutUpdate = {\n      ...visibleModules,  // 保持现有模块的配置\n      [type]: {\n        visible: true,\n        order: activeModules.value.length + 1  // 新模块放在最后\n      }\n    }\n\n    // 提交布局更新\n    const response = await profile.updateLayout(layoutUpdate)\n    if (response.data?.code !== 200) {\n      throw new Error('保存布局失败')\n    }\n\n    ElMessage.success('模块已添加')\n    \n    // 重新获取所有数据以确保同步\n    await initData()\n  } catch (error) {\n    console.error('添加模块失败:', error)\n    ElMessage.error('添加失败，请重试')\n  }\n}\n\n// 处理项目经历提交\nconst handleProjectSubmit = async (data) => {\n  try {\n    await profile.updateModule('project', data)\n    ElMessage.success('保存成功')\n    showProjectDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\n// 处理证书奖项提交\nconst handleCertificateSubmit = async (data) => {\n  try {\n    await profile.updateModule('certificate', data)\n    ElMessage.success('保存成功')\n    showCertificateDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\n// 处理专业技能提交\nconst handleSkillSubmit = async (data) => {\n  try {\n    // 确保数据格式正确\n    const skillData = {\n      name: data.name?.trim(),\n      level: data.level || '初级',\n      description: data.description?.trim() || '',\n      projects: data.projects || '',\n      order: data.order || 0\n    }\n\n    if (data.id) {\n      await profile.updateModule('skills', { ...skillData, id: data.id })\n    } else {\n      await profile.updateModule('skills', skillData)\n    }\n    \n    ElMessage.success('保存成功')\n    showSkillDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    if (error.response?.data?.errors) {\n      const errorMessages = Object.entries(error.response.data.errors)\n        .map(([field, messages]) => `${field}: ${messages.join(', ')}`)\n        .join('\\n')\n      ElMessage.error(errorMessages)\n    } else {\n      ElMessage.error('保存失败，请重试')\n    }\n  }\n}\n\n// 处理语言能力提交\nconst handleLanguageSubmit = async (data) => {\n  try {\n    await profile.updateModule('language', data)\n    ElMessage.success('保存成功')\n    showLanguageDialog.value = false\n    await initData()\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error('保存失败，请重试')\n  }\n}\n\n// 监听数据变化\nwatch(() => profileData.value, (newData) => {\n  if (newData) {\n    updateModules(newData)\n  }\n}, { deep: true })\n\n// 处理模块数据更新\nconst updateModules = (data) => {\n  if (!data) return\n  \n  const activeModulesList = moduleTypes\n    .filter(type => layoutStatus.value[type]?.visible)\n    .map(type => ({\n      type,\n      data: data[type],\n      name: ALL_MODULES[type].name,\n      editable: true\n    }))\n  \n  // 更新 activeModules 的引用而不是直接修改计算属性\n  modules.value = activeModulesList\n  \n  // 处理未激活模块\n  const inactiveCount = moduleTypes\n    .filter(type => !layoutStatus.value[type]?.visible).length\n  const inactiveModulesList = {\n    count: inactiveCount,\n    modules: moduleTypes\n      .filter(type => !layoutStatus.value[type]?.visible)\n      .map(type => ({\n        type,\n        name: ALL_MODULES[type].name\n      }))\n  }\n  // 更新 inactiveModules 的引用\n  modules.value = [...activeModulesList, ...inactiveModulesList.modules]\n}\n\n// 初始化\nonMounted(() => {\n  initData()\n  // 监听档案更新事件\n  eventBus.on('profile-updated', async () => {\n    await fetchProfileData()\n  })\n  \n  // 监听完整度更新事件\n  eventBus.on('completeness-updated', async () => {\n    await fetchCompletenessData()\n  })\n})\n\n// 移除事件监听\nonUnmounted(() => {\n  eventBus.off('profile-updated')\n  eventBus.off('completeness-updated')\n})\n\n// 获取档案数据\nconst fetchProfileData = async () => {\n  try {\n    const response = await profile.getData()\n    if (response.data?.code === 200) {\n      // 更新档案数据\n      profileData.value = response.data.data\n    }\n  } catch (error) {\n    console.error('获取档案数据失败:', error)\n  }\n}\n\n// 监听数据变化\nwatch(() => completionData.value, (newData) => {\n  if (newData) {\n    // 更新父组件的数据\n    eventBus.emit('completeness-updated', newData)\n  }\n}, { deep: true })\n\n// 获取完整度数据\nconst fetchCompletenessData = async () => {\n  try {\n    await profileStore.fetchCompleteness()\n    completionData.value = profileStore.completeness\n    // 通知其他组件完整度数据已更新\n    eventBus.emit('completeness-updated', completionData.value)\n  } catch (error) {\n    console.error('获取完整度数据失败:', error)\n  }\n}\n\n// 添加删除处理函数\nconst handleDelete = async (type, id) => {\n  try {\n    console.log('MyProfile - 处理删除:', type, id)\n    // 重新获取数据\n    await fetchModulesData()\n  } catch (error) {\n    console.error('刷新数据失败:', error)\n    ElMessage.error('刷新数据失败')\n  }\n}\n\n// 处理模块数据保存\nconst handleModuleSave = async (type, data) => {\n  try {\n    showEditDialog.value = false\n    \n    let response\n    if (data.id) {\n      // 编辑\n      response = await profile.updateModule(type, data)\n    } else {\n      // 新增\n      response = await profile.addModuleItem(type, data)\n    }\n\n    // 确保返回数据正确\n    if (response && response.data) {\n      // 刷新模块数据\n      await fetchModulesData()\n      ElMessage.success(data.id ? '更新成功' : '添加成功')\n    } else {\n      throw new Error('保存失败')\n    }\n  } catch (error) {\n    console.error('保存失败:', error)\n    ElMessage.error(error.message || '保存失败')\n  }\n}\n\nconst handleModuleEdit = async (type, data) => {\n  try {\n    if (type === 'basic_info') {\n      await store.dispatch('updateBasicInfo', {\n        type: 'basic',\n        data\n      })\n      // 更新成功后重新获取数据\n      await fetchData()\n      showToast('保存成功', 'success')\n    }\n    // ... 其他模块的处理\n  } catch (error) {\n    console.error('保存失败:', error)\n    showToast(error.message || '保存失败', 'error')\n  }\n}\n\n// 欢迎横幅状态\nconst hideWelcomeBanner = ref(localStorage.getItem('hideWelcomeBanner') === 'true')\n\n// 关闭欢迎横幅\nconst closeWelcomeBanner = () => {\n  hideWelcomeBanner.value = true\n  localStorage.setItem('hideWelcomeBanner', 'true')\n}\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
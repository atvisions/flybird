{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nimport { showToast } from '@/components/ToastMessage';\nimport { useAuthStore } from '@/stores/auth';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    background_image: localStorage.getItem('background_image') || null\n  }),\n  getters: {\n    avatar: state => {\n      const avatar = state.userInfo?.avatar;\n      if (!avatar || avatar === 'null' || avatar === 'undefined' || typeof avatar === 'undefined' || avatar === null) {\n        return defaultAvatar;\n      }\n      return avatar;\n    },\n    username: state => state.userInfo?.username || '未设置用户名',\n    uid: state => state.userInfo?.uid,\n    background: state => state.userInfo?.background_image || state.background_image,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email,\n    position: state => state.userInfo?.position,\n    bio: state => state.userInfo?.bio,\n    isVip: state => state.userInfo?.is_vip || false,\n    isStaff: state => state.userInfo?.is_staff || false\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false,\n            background_image: userData.background_image || null\n          };\n          console.log('Storing user info:', this.userInfo);\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return this.userInfo;\n        }\n        return null;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar');\n        const response = await user.updateAvatar(file);\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background');\n        const response = await user.updateBackground(file);\n        if (response?.data?.code === 200) {\n          this.background_image = response.data.data.background;\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            background_image: response.data.data.background\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          localStorage.setItem('background_image', this.background_image);\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          });\n          this.background_image = userData.background_image || null;\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          localStorage.setItem('background_image', this.background_image);\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n        }\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.background_image = null;\n    },\n    async deleteAccount(data) {\n      try {\n        const response = await user.deleteAccount(data);\n        if (response?.data?.code === 200) {\n          const authStore = useAuthStore();\n          authStore.clearAuth();\n          this.clearUserInfo();\n          localStorage.clear();\n          showToast('账号已注销', 'success');\n          return true;\n        }\n        return false;\n      } catch (error) {\n        if (error.response?.status === 401) {\n          const authStore = useAuthStore();\n          authStore.clearAuth();\n          this.clearUserInfo();\n          localStorage.clear();\n          showToast('账号已注销', 'success');\n          return true;\n        }\n        console.error('Failed to delete account:', error);\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","user","defaultAvatar","showToast","useAuthStore","useAccountStore","state","userInfo","JSON","parse","localStorage","getItem","avatarUpdateTime","background_image","getters","avatar","username","uid","background","phone","email","position","bio","isVip","is_vip","isStaff","is_staff","actions","fetchUserInfo","response","getUserInfo","data","code","userData","id","console","log","setItem","stringify","error","updateAvatar","formData","file","get","Date","now","_objectSpread","Error","message","updateBackground","updateUserInfo","clearUserInfo","deleteAccount","authStore","clearAuth","clear","status"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\nimport { showToast } from '@/components/ToastMessage'\nimport { useAuthStore } from '@/stores/auth'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    background_image: localStorage.getItem('background_image') || null\n  }),\n\n  getters: {\n    avatar: (state) => {\n      const avatar = state.userInfo?.avatar\n      if (!avatar || avatar === 'null' || avatar === 'undefined' || typeof avatar === 'undefined' || avatar === null) {\n        return defaultAvatar\n      }\n      return avatar\n    },\n    username: (state) => state.userInfo?.username || '未设置用户名',\n    uid: (state) => state.userInfo?.uid,\n    background: (state) => state.userInfo?.background_image || state.background_image,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email,\n    position: (state) => state.userInfo?.position,\n    bio: (state) => state.userInfo?.bio,\n    isVip: (state) => state.userInfo?.is_vip || false,\n    isStaff: (state) => state.userInfo?.is_staff || false\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false,\n            background_image: userData.background_image || null\n          }\n          \n          console.log('Storing user info:', this.userInfo)\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          return this.userInfo\n        }\n        return null\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar')\n        const response = await user.updateAvatar(file)\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background')\n        const response = await user.updateBackground(file)\n        if (response?.data?.code === 200) {\n          this.background_image = response.data.data.background\n          this.userInfo = {\n            ...this.userInfo,\n            background_image: response.data.data.background\n          }\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          localStorage.setItem('background_image', this.background_image)\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        \n        const response = await user.updateUserInfo(data)\n       \n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          this.userInfo = {\n            ...this.userInfo,\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          }\n          \n          this.background_image = userData.background_image || null\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          localStorage.setItem('background_image', this.background_image)\n          \n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        if (error.response) {\n          console.error('Error response:', error.response.data)\n        }\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.background_image = null\n    },\n\n    async deleteAccount(data) {\n      try {\n        const response = await user.deleteAccount(data)\n        if (response?.data?.code === 200) {\n          const authStore = useAuthStore()\n          authStore.clearAuth()\n          this.clearUserInfo()\n          localStorage.clear()\n          \n          showToast('账号已注销', 'success')\n          return true\n        }\n        return false\n      } catch (error) {\n        if (error.response?.status === 401) {\n          const authStore = useAuthStore()\n          authStore.clearAuth()\n          this.clearUserInfo()\n          localStorage.clear()\n          \n          showToast('账号已注销', 'success')\n          return true\n        }\n        console.error('Failed to delete account:', error)\n        throw error\n      }\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
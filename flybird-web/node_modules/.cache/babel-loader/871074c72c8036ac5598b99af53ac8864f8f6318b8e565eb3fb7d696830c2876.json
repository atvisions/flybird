{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VMessages.css\";\n\n// Components\nimport { VSlideYTransition } from \"../transitions/index.mjs\"; // Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVMessagesProps = propsFactory(_objectSpread(_objectSpread({\n  active: Boolean,\n  color: String,\n  messages: {\n    type: [Array, String],\n    default: () => []\n  }\n}, makeComponentProps()), makeTransitionProps({\n  transition: {\n    component: VSlideYTransition,\n    leaveAbsolute: true,\n    group: true\n  }\n})), 'VMessages');\nexport const VMessages = genericComponent()({\n  name: 'VMessages',\n  props: makeVMessagesProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const messages = computed(() => wrapInArray(props.messages));\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(computed(() => props.color));\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition,\n      \"tag\": \"div\",\n      \"class\": ['v-messages', textColorClasses.value, props.class],\n      \"style\": [textColorStyles.value, props.style],\n      \"role\": \"alert\",\n      \"aria-live\": \"polite\"\n    }, {\n      default: () => [props.active && messages.value.map((message, i) => _createVNode(\"div\", {\n        \"class\": \"v-messages__message\",\n        \"key\": `${i}-${messages.value}`\n      }, [slots.message ? slots.message({\n        message\n      }) : message]))]\n    }));\n    return {};\n  }\n});","map":{"version":3,"names":["VSlideYTransition","useTextColor","makeComponentProps","makeTransitionProps","MaybeTransition","computed","genericComponent","propsFactory","useRender","wrapInArray","makeVMessagesProps","_objectSpread","active","Boolean","color","String","messages","type","Array","default","transition","component","leaveAbsolute","group","VMessages","name","props","setup","_ref","slots","textColorClasses","textColorStyles","_createVNode","value","class","style","map","message","i"],"sources":["../../../src/components/VMessages/VMessages.tsx"],"sourcesContent":["// Styles\nimport './VMessages.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\n\nexport type VMessageSlot = {\n  message: string\n}\n\nexport type VMessagesSlots = {\n  message: VMessageSlot\n}\n\nexport const makeVMessagesProps = propsFactory({\n  active: Boolean,\n  color: String,\n  messages: {\n    type: [Array, String] as PropType<string | readonly string[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VSlideYTransition as Component,\n      leaveAbsolute: true,\n      group: true,\n    },\n  }),\n}, 'VMessages')\n\nexport const VMessages = genericComponent<VMessagesSlots>()({\n  name: 'VMessages',\n\n  props: makeVMessagesProps(),\n\n  setup (props, { slots }) {\n    const messages = computed(() => wrapInArray(props.messages))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => props.color))\n\n    useRender(() => (\n      <MaybeTransition\n        transition={ props.transition }\n        tag=\"div\"\n        class={[\n          'v-messages',\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          textColorStyles.value,\n          props.style,\n        ]}\n        role=\"alert\"\n        aria-live=\"polite\"\n      >\n        { props.active && (\n          messages.value.map((message, i) => (\n            <div\n              class=\"v-messages__message\"\n              key={ `${i}-${messages.value}` }\n            >\n              { slots.message ? slots.message({ message }) : message }\n            </div>\n          ))\n        )}\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VMessages = InstanceType<typeof VMessages>\n"],"mappings":";;;AAAA;AACA;;AAEA;AAAA,SACSA,iBAAiB,oCAE1B;AAAA,SACSC,YAAY;AAAA,SACZC,kBAAkB;AAAA,SAClBC,mBAAmB,EAAEC,eAAe,4CAE7C;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,EAAEC,WAAW,gCAE/D;AAWA,OAAO,MAAMC,kBAAkB,GAAGH,YAAY,CAAAI,aAAA,CAAAA,aAAA;EAC5CC,MAAM,EAAEC,OAAO;EACfC,KAAK,EAAEC,MAAM;EACbC,QAAQ,EAAE;IACRC,IAAI,EAAE,CAACC,KAAK,EAAEH,MAAM,CAAyC;IAC7DI,OAAO,EAAEA,CAAA,KAAO;EAClB;AAAC,GAEEjB,kBAAkB,CAAC,CAAC,GACpBC,mBAAmB,CAAC;EACrBiB,UAAU,EAAE;IACVC,SAAS,EAAErB,iBAA8B;IACzCsB,aAAa,EAAE,IAAI;IACnBC,KAAK,EAAE;EACT;AACF,CAAC,IACA,WAAW,CAAC;AAEf,OAAO,MAAMC,SAAS,GAAGlB,gBAAgB,CAAiB,CAAC,CAAC;EAC1DmB,IAAI,EAAE,WAAW;EAEjBC,KAAK,EAAEhB,kBAAkB,CAAC,CAAC;EAE3BiB,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAMZ,QAAQ,GAAGX,QAAQ,CAAC,MAAMI,WAAW,CAACiB,KAAK,CAACV,QAAQ,CAAC,CAAC;IAC5D,MAAM;MAAEc,gBAAgB;MAAEC;IAAgB,CAAC,GAAG9B,YAAY,CAACI,QAAQ,CAAC,MAAMqB,KAAK,CAACZ,KAAK,CAAC,CAAC;IAEvFN,SAAS,CAAC,MAAAwB,YAAA,CAAA5B,eAAA;MAAA,cAEOsB,KAAK,CAACN,UAAU;MAAA;MAAA,SAEtB,CACL,YAAY,EACZU,gBAAgB,CAACG,KAAK,EACtBP,KAAK,CAACQ,KAAK,CACZ;MAAA,SACM,CACLH,eAAe,CAACE,KAAK,EACrBP,KAAK,CAACS,KAAK,CACZ;MAAA;MAAA;IAAA;MAAAhB,OAAA,EAAAA,CAAA,MAICO,KAAK,CAACd,MAAM,IACZI,QAAQ,CAACiB,KAAK,CAACG,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAAN,YAAA;QAAA;QAAA,OAGpB,GAAGM,CAAC,IAAItB,QAAQ,CAACiB,KAAK;MAAE,IAE5BJ,KAAK,CAACQ,OAAO,GAAGR,KAAK,CAACQ,OAAO,CAAC;QAAEA;MAAQ,CAAC,CAAC,GAAGA,OAAO,EAEzD,CACF;IAAA,EAEJ,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
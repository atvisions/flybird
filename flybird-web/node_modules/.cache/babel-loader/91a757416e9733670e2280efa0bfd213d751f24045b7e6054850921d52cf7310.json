{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport request from '@/utils/request';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nimport { showToast } from '@/components/ToastMessage';\nimport { useAuthStore } from '@/stores/auth';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    background_image: localStorage.getItem('background_image') || null\n  }),\n  getters: {\n    avatar: state => {\n      const avatar = state.userInfo?.avatar;\n      if (!avatar || avatar === 'null' || avatar === 'undefined' || typeof avatar === 'undefined' || avatar === null) {\n        return defaultAvatar;\n      }\n      return avatar;\n    },\n    username: state => state.userInfo?.username || '未设置用户名',\n    uid: state => state.userInfo?.uid,\n    background: state => state.userInfo?.background_image || state.background_image,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email,\n    position: state => state.userInfo?.position,\n    bio: state => state.userInfo?.bio,\n    isVip: state => state.userInfo?.is_vip || false,\n    isStaff: state => state.userInfo?.is_staff || false\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false,\n            background_image: userData.background_image || null\n          };\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return this.userInfo;\n        }\n        return null;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar');\n        const response = await request.post('/api/v1/users/userInfo/avatar/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background');\n        const response = await user.updateBackground(file);\n        if (response?.data?.code === 200) {\n          this.background_image = response.data.data.background;\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            background_image: response.data.data.background\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          localStorage.setItem('background_image', this.background_image);\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          if (data.avatar) {\n            this.avatarUpdateTime = Date.now();\n          }\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: userData.avatar,\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.background_image = null;\n    },\n    async deleteAccount(data) {\n      try {\n        const response = await user.deleteAccount(data);\n        if (response?.data?.code === 200) {\n          const authStore = useAuthStore();\n          authStore.clearAuth();\n          this.clearUserInfo();\n          localStorage.clear();\n          showToast('账号已注销', 'success');\n          return true;\n        }\n        return false;\n      } catch (error) {\n        if (error.response?.status === 401) {\n          const authStore = useAuthStore();\n          authStore.clearAuth();\n          this.clearUserInfo();\n          localStorage.clear();\n          showToast('账号已注销', 'success');\n          return true;\n        }\n        console.error('Failed to delete account:', error);\n        throw error;\n      }\n    },\n    async changePhone(data) {\n      try {\n        console.log('Starting phone change process:', {\n          phone: data.phone,\n          oldPhone: this.userInfo?.phone,\n          hasCode: !!data.code\n        });\n\n        // 验证手机号格式\n        const phoneRegex = /^1[3-9]\\d{9}$/;\n        if (!phoneRegex.test(data.phone)) {\n          throw new Error('请输入正确的手机号格式');\n        }\n\n        // 验证验证码格式\n        if (data.code && !/^\\d{6}$/.test(data.code)) {\n          throw new Error('请输入6位数字验证码');\n        }\n\n        // 如果没有验证码，先发送验证码\n        if (!data.code) {\n          console.log('No code provided, sending verification code');\n          await account.sendVerifyCode({\n            phone: data.phone,\n            scene: 'change_phone',\n            type: 'sms'\n          });\n          showToast('验证码已发送', 'success');\n          return true;\n        }\n        console.log('Attempting to change phone with code');\n        const response = await account.changePhone({\n          phone: data.phone,\n          code: data.code,\n          oldPhone: this.userInfo?.phone\n        });\n        console.log('Change phone response:', response);\n        if (response?.data?.code === 200) {\n          // 更新本地用户信息\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            phone: data.phone\n          });\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo));\n          showToast('手机号更新成功', 'success');\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('手机号更新失败:', error);\n        if (error.response) {\n          console.error('Error response:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers,\n            message: error.response.data?.message || error.response.data?.detail\n          });\n        }\n\n        // 提供更友好的错误信息\n        let errorMessage;\n        if (error.isPhoneDisabled) {\n          errorMessage = error.friendlyMessage;\n        } else {\n          errorMessage = error.response?.data?.message || error.response?.data?.detail || error.response?.data?.error || error.message || '手机号更新失败，请稍后重试';\n        }\n\n        // 如果是发送验证码时的错误，添加更多提示信息\n        if (error.response?.data?.code === 'sms_limit_exceeded') {\n          errorMessage = '该手机号发送验证码次数过多，请24小时后再试';\n        } else if (error.response?.data?.code === 'phone_blacklisted') {\n          errorMessage = '该手机号已被限制使用，请更换其他手机号';\n        }\n        showToast(errorMessage, 'error');\n        throw error;\n      }\n    },\n    // 发送验证码\n    async sendVerifyCode(phone, scene) {\n      try {\n        const response = await account.sendVerifyCode({\n          phone,\n          scene,\n          type: 'sms'\n        });\n        if (response?.data?.code === 200) {\n          showToast('验证码已发送', 'success');\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('发送验证码失败:', error);\n        let errorMessage;\n        if (error.response?.data?.code === 'sms_limit_exceeded') {\n          errorMessage = '该手机号发送验证码次数过多，请24小时后再试';\n        } else if (error.response?.data?.code === 'phone_blacklisted') {\n          errorMessage = '该手机号已被限制使用，请更换其他手机号';\n        } else {\n          errorMessage = error.response?.data?.message || '发送验证码失败，请稍后重试';\n        }\n        showToast(errorMessage, 'error');\n        throw error;\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","request","user","defaultAvatar","showToast","useAuthStore","useAccountStore","state","userInfo","JSON","parse","localStorage","getItem","avatarUpdateTime","background_image","getters","avatar","username","uid","background","phone","email","position","bio","isVip","is_vip","isStaff","is_staff","actions","fetchUserInfo","response","getUserInfo","data","code","userData","id","setItem","stringify","error","console","updateAvatar","formData","file","get","post","headers","Date","now","_objectSpread","Error","message","updateBackground","updateUserInfo","clearUserInfo","deleteAccount","authStore","clearAuth","clear","status","changePhone","log","oldPhone","hasCode","phoneRegex","test","account","sendVerifyCode","scene","type","detail","errorMessage","isPhoneDisabled","friendlyMessage"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport request from '@/utils/request'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\nimport { showToast } from '@/components/ToastMessage'\nimport { useAuthStore } from '@/stores/auth'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: JSON.parse(localStorage.getItem('userInfo')) || null,\n    avatarUpdateTime: null,\n    background_image: localStorage.getItem('background_image') || null\n  }),\n\n  getters: {\n    avatar: (state) => {\n      const avatar = state.userInfo?.avatar\n      if (!avatar || avatar === 'null' || avatar === 'undefined' || typeof avatar === 'undefined' || avatar === null) {\n        return defaultAvatar\n      }\n      return avatar\n    },\n    username: (state) => state.userInfo?.username || '未设置用户名',\n    uid: (state) => state.userInfo?.uid,\n    background: (state) => state.userInfo?.background_image || state.background_image,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email,\n    position: (state) => state.userInfo?.position,\n    bio: (state) => state.userInfo?.bio,\n    isVip: (state) => state.userInfo?.is_vip || false,\n    isStaff: (state) => state.userInfo?.is_staff || false\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          this.userInfo = {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false,\n            background_image: userData.background_image || null\n          }\n          \n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          return this.userInfo\n        }\n        return null\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const file = formData.get('avatar')\n        const response = await request.post('/api/v1/users/userInfo/avatar/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        })\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const file = formData.get('background')\n        const response = await user.updateBackground(file)\n        if (response?.data?.code === 200) {\n          this.background_image = response.data.data.background\n          this.userInfo = {\n            ...this.userInfo,\n            background_image: response.data.data.background\n          }\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          localStorage.setItem('background_image', this.background_image)\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data)\n       \n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          if (data.avatar) {\n            this.avatarUpdateTime = Date.now()\n          }\n          \n          this.userInfo = {\n            ...this.userInfo,\n            avatar: userData.avatar,\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          }\n          \n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.background_image = null\n    },\n\n    async deleteAccount(data) {\n      try {\n        const response = await user.deleteAccount(data)\n        if (response?.data?.code === 200) {\n          const authStore = useAuthStore()\n          authStore.clearAuth()\n          this.clearUserInfo()\n          localStorage.clear()\n          \n          showToast('账号已注销', 'success')\n          return true\n        }\n        return false\n      } catch (error) {\n        if (error.response?.status === 401) {\n          const authStore = useAuthStore()\n          authStore.clearAuth()\n          this.clearUserInfo()\n          localStorage.clear()\n          \n          showToast('账号已注销', 'success')\n          return true\n        }\n        console.error('Failed to delete account:', error)\n        throw error\n      }\n    },\n\n    async changePhone(data) {\n      try {\n        console.log('Starting phone change process:', {\n          phone: data.phone,\n          oldPhone: this.userInfo?.phone,\n          hasCode: !!data.code\n        })\n\n        // 验证手机号格式\n        const phoneRegex = /^1[3-9]\\d{9}$/\n        if (!phoneRegex.test(data.phone)) {\n          throw new Error('请输入正确的手机号格式')\n        }\n\n        // 验证验证码格式\n        if (data.code && !/^\\d{6}$/.test(data.code)) {\n          throw new Error('请输入6位数字验证码')\n        }\n\n        // 如果没有验证码，先发送验证码\n        if (!data.code) {\n          console.log('No code provided, sending verification code')\n          await account.sendVerifyCode({\n            phone: data.phone,\n            scene: 'change_phone',\n            type: 'sms'\n          })\n          showToast('验证码已发送', 'success')\n          return true\n        }\n\n        console.log('Attempting to change phone with code')\n        const response = await account.changePhone({\n          phone: data.phone,\n          code: data.code,\n          oldPhone: this.userInfo?.phone\n        })\n        console.log('Change phone response:', response)\n        \n        if (response?.data?.code === 200) {\n          // 更新本地用户信息\n          this.userInfo = {\n            ...this.userInfo,\n            phone: data.phone\n          }\n          localStorage.setItem('userInfo', JSON.stringify(this.userInfo))\n          \n          showToast('手机号更新成功', 'success')\n          return true\n        }\n        return false\n      } catch (error) {\n        console.error('手机号更新失败:', error)\n        if (error.response) {\n          console.error('Error response:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers,\n            message: error.response.data?.message || error.response.data?.detail\n          })\n        }\n        \n        // 提供更友好的错误信息\n        let errorMessage\n        if (error.isPhoneDisabled) {\n          errorMessage = error.friendlyMessage\n        } else {\n          errorMessage = error.response?.data?.message \n            || error.response?.data?.detail\n            || error.response?.data?.error \n            || error.message \n            || '手机号更新失败，请稍后重试'\n        }\n\n        // 如果是发送验证码时的错误，添加更多提示信息\n        if (error.response?.data?.code === 'sms_limit_exceeded') {\n          errorMessage = '该手机号发送验证码次数过多，请24小时后再试'\n        } else if (error.response?.data?.code === 'phone_blacklisted') {\n          errorMessage = '该手机号已被限制使用，请更换其他手机号'\n        }\n\n        showToast(errorMessage, 'error')\n        throw error\n      }\n    },\n\n    // 发送验证码\n    async sendVerifyCode(phone, scene) {\n      try {\n        const response = await account.sendVerifyCode({\n          phone,\n          scene,\n          type: 'sms'\n        })\n        if (response?.data?.code === 200) {\n          showToast('验证码已发送', 'success')\n          return true\n        }\n        return false\n      } catch (error) {\n        console.error('发送验证码失败:', error)\n        let errorMessage\n        if (error.response?.data?.code === 'sms_limit_exceeded') {\n          errorMessage = '该手机号发送验证码次数过多，请24小时后再试'\n        } else if (error.response?.data?.code === 'phone_blacklisted') {\n          errorMessage = '该手机号已被限制使用，请更换其他手机号'\n        } else {\n          errorMessage = error.response?.data?.message || '发送验证码失败，请稍后重试'\n        }\n        showToast(errorMessage, 'error')\n        throw error\n      }\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
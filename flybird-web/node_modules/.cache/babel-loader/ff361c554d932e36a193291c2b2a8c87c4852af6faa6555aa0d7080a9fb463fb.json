{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { DocumentTextIcon, QuestionMarkCircleIcon, HashtagIcon, XMarkIcon, ChevronUpDownIcon, CheckIcon, CurrencyYenIcon, ChatBubbleLeftRightIcon, CodeBracketIcon, ServerIcon, DevicePhoneMobileIcon, ChartBarIcon, DatabaseIcon, CpuChipIcon, BeakerIcon } from '@heroicons/vue/24/outline';\nimport { showToast } from '@/components/ToastMessage';\nimport ArticleForm from './components/ArticleForm.vue';\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue';\nconst AUTOSAVE_INTERVAL = 30000; // 30秒\nconst DRAFT_KEY_PREFIX = 'content_draft_';\n\n// 保存草稿\n\nexport default {\n  __name: 'CreateContent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n\n    // 内容类型\n    const contentTypes = [{\n      id: 'article',\n      name: '发布文章',\n      icon: DocumentTextIcon\n    }, {\n      id: 'topic',\n      name: '发起话题',\n      icon: HashtagIcon\n    }, {\n      id: 'question',\n      name: '发布问题',\n      icon: QuestionMarkCircleIcon\n    }];\n\n    // 根据来源页面设置默认类型\n    const getDefaultType = () => {\n      // 从查询参数获取类型\n      const type = route.query.type;\n      // 检查是否是有效的类型\n      if (contentTypes.some(t => t.id === type)) {\n        return type;\n      }\n      // 默认返回文章类型\n      return 'article';\n    };\n    const selectedType = ref(getDefaultType());\n\n    // 问题类型定义\n    const questionTypes = {\n      normal: {\n        name: '普通提问',\n        icon: QuestionMarkCircleIcon,\n        description: '寻求技术解答和建议'\n      },\n      bounty: {\n        name: '悬赏问答',\n        icon: CurrencyYenIcon,\n        description: '通过悬赏获得更快解答'\n      },\n      discussion: {\n        name: '技术讨论',\n        icon: ChatBubbleLeftRightIcon,\n        description: '发起技术话题讨论'\n      }\n    };\n\n    // 分类数据\n    const categories = [{\n      id: 'frontend',\n      name: '前端开发',\n      icon: CodeBracketIcon\n    }, {\n      id: 'backend',\n      name: '后端开发',\n      icon: ServerIcon\n    }, {\n      id: 'mobile',\n      name: '移动开发',\n      icon: DevicePhoneMobileIcon\n    }, {\n      id: 'algorithm',\n      name: '算法',\n      icon: ChartBarIcon\n    }, {\n      id: 'database',\n      name: '数据库',\n      icon: DatabaseIcon\n    }, {\n      id: 'devops',\n      name: '运维',\n      icon: CpuChipIcon\n    }, {\n      id: 'ai',\n      name: '人工智能',\n      icon: BeakerIcon\n    }];\n\n    // 选中的分类\n    const selectedCategory = ref(categories[0]);\n\n    // 悬赏时间选项\n    const bountyDaysOptions = [3, 7, 15, 30];\n\n    // 问答表单数据\n    const questionForm = ref({\n      title: '',\n      type: 'normal',\n      category: '',\n      bounty: '',\n      bountyDays: 7,\n      // 默认7天\n      content: '',\n      tags: []\n    });\n\n    // 监听分类变化，更新表单数据\n    watch(selectedCategory, category => {\n      questionForm.value.category = category.id;\n    });\n\n    // 标签相关\n    const newTag = ref('');\n    const addTag = () => {\n      const tag = newTag.value.trim();\n      if (tag && !questionForm.value.tags.includes(tag) && questionForm.value.tags.length < 5) {\n        questionForm.value.tags.push(tag);\n        newTag.value = '';\n      }\n    };\n    const removeTag = tag => {\n      questionForm.value.tags = questionForm.value.tags.filter(t => t !== tag);\n    };\n\n    // 提交问题\n    const submitQuestion = () => {\n      // 表单验证\n      if (!questionForm.value.title) {\n        showToast('请输入问题标题', 'warning');\n        return;\n      }\n      if (!questionForm.value.category) {\n        showToast('请选择问题分类', 'warning');\n        return;\n      }\n      if (!questionForm.value.content) {\n        showToast('请输入问题描述', 'warning');\n        return;\n      }\n\n      // TODO: 调用接口提交问题\n      console.log('提交问题:', questionForm.value);\n      showToast('发布成功', 'success');\n      router.push('/community/questions');\n    };\n\n    // 话题表单数据\n    const selectedTopicCategory = ref(categories[0]);\n    const newTopicTag = ref('');\n    const topicForm = ref({\n      title: '',\n      category: '',\n      optionA: '',\n      optionB: '',\n      content: '',\n      tags: []\n    });\n\n    // 监听话题分类变化\n    watch(selectedTopicCategory, category => {\n      topicForm.value.category = category.id;\n    });\n\n    // 话题标签相关\n    const addTopicTag = () => {\n      const tag = newTopicTag.value.trim();\n      if (tag && !topicForm.value.tags.includes(tag) && topicForm.value.tags.length < 5) {\n        topicForm.value.tags.push(tag);\n        newTopicTag.value = '';\n      }\n    };\n    const removeTopicTag = tag => {\n      topicForm.value.tags = topicForm.value.tags.filter(t => t !== tag);\n    };\n\n    // 提交话题\n    const submitTopic = () => {\n      // 表单验证\n      if (!topicForm.value.title) {\n        showToast('请输入话题主题', 'warning');\n        return;\n      }\n      if (!topicForm.value.category) {\n        showToast('请选择话题分类', 'warning');\n        return;\n      }\n      if (!topicForm.value.optionA || !topicForm.value.optionB) {\n        showToast('请填写投票选项', 'warning');\n        return;\n      }\n      if (!topicForm.value.content) {\n        showToast('请输入话题描述', 'warning');\n        return;\n      }\n\n      // TODO: 调用接口提交话题\n      console.log('提交话题:', topicForm.value);\n      showToast('发布成功', 'success');\n      router.push('/community/topics');\n    };\n\n    // 自动保存相关\n    let autoSaveTimer = null;\n    const saveDraft = () => {\n      const formData = {\n        type: selectedType.value,\n        data: selectedType.value === 'article' ? articleForm.value : selectedType.value === 'topic' ? topicForm.value : questionForm.value\n      };\n      localStorage.setItem(DRAFT_KEY_PREFIX + selectedType.value, JSON.stringify(formData));\n      showToast('已自动保存草稿', 'info');\n    };\n\n    // 加载草稿\n    const loadDraft = () => {\n      const draft = localStorage.getItem(DRAFT_KEY_PREFIX + selectedType.value);\n      if (draft) {\n        try {\n          const {\n            type,\n            data\n          } = JSON.parse(draft);\n          if (type === selectedType.value) {\n            if (type === 'article') articleForm.value = _objectSpread({}, data);else if (type === 'topic') topicForm.value = _objectSpread({}, data);else if (type === 'question') questionForm.value = _objectSpread({}, data);\n            showToast('已恢复上次编辑的内容', 'info');\n          }\n        } catch (error) {\n          console.error('加载草稿失败:', error);\n        }\n      }\n    };\n\n    // 清除草稿\n    const clearDraft = () => {\n      localStorage.removeItem(DRAFT_KEY_PREFIX + selectedType.value);\n    };\n\n    // 开始自动保存\n    const startAutoSave = () => {\n      stopAutoSave(); // 先清除可能存在的定时器\n      autoSaveTimer = setInterval(saveDraft, AUTOSAVE_INTERVAL);\n    };\n\n    // 停止自动保存\n    const stopAutoSave = () => {\n      if (autoSaveTimer) {\n        clearInterval(autoSaveTimer);\n        autoSaveTimer = null;\n      }\n    };\n\n    // 监听类型变化\n    watch(selectedType, newType => {\n      stopAutoSave();\n      loadDraft();\n      startAutoSave();\n    });\n\n    // 组件挂载时\n    onMounted(() => {\n      loadDraft();\n      startAutoSave();\n    });\n\n    // 组件卸载前\n    onBeforeUnmount(() => {\n      stopAutoSave();\n      saveDraft(); // 最后保存一次\n    });\n    const __returned__ = {\n      router,\n      route,\n      contentTypes,\n      getDefaultType,\n      selectedType,\n      questionTypes,\n      categories,\n      selectedCategory,\n      bountyDaysOptions,\n      questionForm,\n      newTag,\n      addTag,\n      removeTag,\n      submitQuestion,\n      selectedTopicCategory,\n      newTopicTag,\n      topicForm,\n      addTopicTag,\n      removeTopicTag,\n      submitTopic,\n      get autoSaveTimer() {\n        return autoSaveTimer;\n      },\n      set autoSaveTimer(v) {\n        autoSaveTimer = v;\n      },\n      AUTOSAVE_INTERVAL,\n      DRAFT_KEY_PREFIX,\n      saveDraft,\n      loadDraft,\n      clearDraft,\n      startAutoSave,\n      stopAutoSave,\n      ref,\n      watch,\n      onMounted,\n      onBeforeUnmount,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get DocumentTextIcon() {\n        return DocumentTextIcon;\n      },\n      get QuestionMarkCircleIcon() {\n        return QuestionMarkCircleIcon;\n      },\n      get HashtagIcon() {\n        return HashtagIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get ChevronUpDownIcon() {\n        return ChevronUpDownIcon;\n      },\n      get CheckIcon() {\n        return CheckIcon;\n      },\n      get CurrencyYenIcon() {\n        return CurrencyYenIcon;\n      },\n      get ChatBubbleLeftRightIcon() {\n        return ChatBubbleLeftRightIcon;\n      },\n      get CodeBracketIcon() {\n        return CodeBracketIcon;\n      },\n      get ServerIcon() {\n        return ServerIcon;\n      },\n      get DevicePhoneMobileIcon() {\n        return DevicePhoneMobileIcon;\n      },\n      get ChartBarIcon() {\n        return ChartBarIcon;\n      },\n      get DatabaseIcon() {\n        return DatabaseIcon;\n      },\n      get CpuChipIcon() {\n        return CpuChipIcon;\n      },\n      get BeakerIcon() {\n        return BeakerIcon;\n      },\n      get showToast() {\n        return showToast;\n      },\n      ArticleForm,\n      get Listbox() {\n        return Listbox;\n      },\n      get ListboxButton() {\n        return ListboxButton;\n      },\n      get ListboxOptions() {\n        return ListboxOptions;\n      },\n      get ListboxOption() {\n        return ListboxOption;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","onBeforeUnmount","useRouter","useRoute","DocumentTextIcon","QuestionMarkCircleIcon","HashtagIcon","XMarkIcon","ChevronUpDownIcon","CheckIcon","CurrencyYenIcon","ChatBubbleLeftRightIcon","CodeBracketIcon","ServerIcon","DevicePhoneMobileIcon","ChartBarIcon","DatabaseIcon","CpuChipIcon","BeakerIcon","showToast","ArticleForm","Listbox","ListboxButton","ListboxOptions","ListboxOption","AUTOSAVE_INTERVAL","DRAFT_KEY_PREFIX","router","route","contentTypes","id","name","icon","getDefaultType","type","query","some","t","selectedType","questionTypes","normal","description","bounty","discussion","categories","selectedCategory","bountyDaysOptions","questionForm","title","category","bountyDays","content","tags","value","newTag","addTag","tag","trim","includes","length","push","removeTag","filter","submitQuestion","console","log","selectedTopicCategory","newTopicTag","topicForm","optionA","optionB","addTopicTag","removeTopicTag","submitTopic","autoSaveTimer","saveDraft","formData","data","articleForm","localStorage","setItem","JSON","stringify","loadDraft","draft","getItem","parse","_objectSpread","error","clearDraft","removeItem","startAutoSave","stopAutoSave","setInterval","clearInterval","newType"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/CreateContent.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen py-4 pb-24 lg:py-6 mt-[72px]\">\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <!-- 内容类型选择 -->\n      <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6 mb-6\">\n        <div class=\"flex items-center gap-4\">\n          <button\n            v-for=\"type in contentTypes\"\n            :key=\"type.id\"\n            class=\"flex-1 h-20 rounded-lg border-2 transition-colors flex flex-col items-center justify-center gap-2\"\n            :class=\"[\n              selectedType === type.id \n                ? 'border-violet-600 bg-violet-50 text-violet-600' \n                : 'border-gray-200 hover:border-violet-200'\n            ]\"\n            @click=\"selectedType = type.id\"\n          >\n            <component :is=\"type.icon\" class=\"w-6 h-6\" />\n            <span class=\"text-sm font-medium\">{{ type.name }}</span>\n          </button>\n        </div>\n      </div>\n\n      \n\n      <!-- 文章发布表单 -->\n      <div v-if=\"selectedType === 'article'\" class=\"relative bg-white rounded-xl border border-gray-100\">\n        <ArticleForm />\n      </div>\n      <!-- 话题发布表单 -->\n      <div v-if=\"selectedType === 'topic'\" class=\"bg-white rounded-xl border border-gray-100\">\n        <div class=\"space-y-6 p-4 lg:p-6 pb-24\">\n          <!-- 话题主题 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">话题主题</label>\n            <input\n              type=\"text\"\n              v-model=\"topicForm.title\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"例如：Vue 和 React，哪个更适合新手入门？\"\n            >\n          </div>\n\n          <!-- 话题分类 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">话题分类</label>\n            <Listbox v-model=\"selectedTopicCategory\">\n              <div class=\"relative\">\n                <ListboxButton\n                  class=\"relative w-full cursor-pointer rounded-lg bg-white py-2.5 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus:ring-2 focus:ring-violet-500 sm:text-sm\"\n                >\n                  <span class=\"flex items-center\">\n                    <component \n                      :is=\"selectedTopicCategory.icon\" \n                      class=\"h-5 w-5 flex-shrink-0 text-gray-400\"\n                      aria-hidden=\"true\"\n                    />\n                    <span class=\"ml-3 block truncate\">{{ selectedTopicCategory.name }}</span>\n                  </span>\n                  <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                    <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  </span>\n                </ListboxButton>\n\n                <Transition\n                  leave-active-class=\"transition duration-100 ease-in\"\n                  leave-from-class=\"opacity-100\"\n                  leave-to-class=\"opacity-0\"\n                >\n                  <ListboxOptions\n                    class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                  >\n                    <ListboxOption\n                      v-for=\"category in categories\"\n                      :key=\"category.id\"\n                      :value=\"category\"\n                      v-slot=\"{ active, selected }\"\n                      as=\"template\"\n                    >\n                      <li\n                        :class=\"[\n                          active ? 'bg-violet-600 text-white' : 'text-gray-900',\n                          'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                        ]\"\n                      >\n                        <div class=\"flex items-center\">\n                          <component \n                            :is=\"category.icon\" \n                            :class=\"[\n                              active ? 'text-white' : 'text-gray-400',\n                              'h-5 w-5 flex-shrink-0'\n                            ]\"\n                            aria-hidden=\"true\"\n                          />\n                          <span\n                            :class=\"[\n                              selected ? 'font-semibold' : 'font-normal',\n                              'ml-3 block truncate'\n                            ]\"\n                          >\n                            {{ category.name }}\n                          </span>\n                        </div>\n\n                        <span\n                          v-if=\"selected\"\n                          :class=\"[\n                            active ? 'text-white' : 'text-violet-600',\n                            'absolute inset-y-0 right-0 flex items-center pr-4'\n                          ]\"\n                        >\n                          <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </Transition>\n              </div>\n            </Listbox>\n          </div>\n\n          <!-- 投票选项 -->\n          <div class=\"space-y-4\">\n            <label class=\"block text-sm font-medium text-gray-700\">投票选项</label>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1.5\">选项 A</label>\n                <input\n                  type=\"text\"\n                  v-model=\"topicForm.optionA\"\n                  class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                  placeholder=\"例如：Vue\"\n                >\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1.5\">选项 B</label>\n                <input\n                  type=\"text\"\n                  v-model=\"topicForm.optionB\"\n                  class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                  placeholder=\"例如：React\"\n                >\n              </div>\n            </div>\n          </div>\n\n          <!-- 话题描述 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">话题描述</label>\n            <textarea\n              v-model=\"topicForm.content\"\n              rows=\"6\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"详细描述这个话题，可以分析两个选项的优劣势...\"\n            ></textarea>\n          </div>\n\n          <!-- 标签 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">添加标签</label>\n            <div class=\"flex flex-wrap gap-2\">\n              <div\n                v-for=\"tag in topicForm.tags\"\n                :key=\"tag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm flex items-center group\"\n              >\n                <span>{{ tag }}</span>\n                <XMarkIcon \n                  class=\"w-4 h-4 ml-1 cursor-pointer opacity-0 group-hover:opacity-100 transition-opacity\"\n                  @click=\"removeTopicTag(tag)\"\n                />\n              </div>\n              <input\n                v-if=\"topicForm.tags.length < 5\"\n                type=\"text\"\n                v-model=\"newTopicTag\"\n                @keydown.enter=\"addTopicTag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-violet-500\"\n                placeholder=\"按回车添加标签\"\n              >\n            </div>\n            <p class=\"mt-1 text-xs text-gray-500\">最多添加 5 个标签</p>\n          </div>\n        </div>\n\n        <!-- 固定的底部按钮区域 -->\n        <div class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-4 z-50\">\n          <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-sm text-gray-500\">已自动保存草稿</span>\n              <div class=\"flex items-center gap-4\">\n                <button \n                  class=\"px-6 h-10 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors\"\n                  @click=\"$router.back()\"\n                >\n                  取消\n                </button>\n                <button \n                  class=\"px-6 h-10 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n                  @click=\"submitTopic\"\n                >\n                  发布话题\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 问答发布表单 -->\n      <div v-else-if=\"selectedType === 'question'\" class=\"bg-white rounded-xl border border-gray-100\">\n        <div class=\"space-y-6 p-4 lg:p-6 pb-24\">\n          <!-- 标题 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题标题</label>\n            <input\n              type=\"text\"\n              v-model=\"questionForm.title\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"一句话描述你的问题\"\n            >\n          </div>\n\n          <!-- 问题类型和分类 -->\n          <div class=\"grid grid-cols-2 gap-4\">\n            <!-- 问题类型 -->\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题类型</label>\n              <Listbox v-model=\"questionForm.type\">\n                <div class=\"relative\">\n                  <ListboxButton\n                    class=\"relative w-full cursor-pointer rounded-lg bg-white py-2.5 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus:ring-2 focus:ring-violet-500 sm:text-sm\"\n                  >\n                    <span class=\"flex items-center\">\n                      <component \n                        :is=\"questionTypes[questionForm.type].icon\" \n                        class=\"h-5 w-5 flex-shrink-0 text-gray-400\"\n                        aria-hidden=\"true\"\n                      />\n                      <span class=\"ml-3 block truncate\">{{ questionTypes[questionForm.type].name }}</span>\n                    </span>\n                    <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                      <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                  </ListboxButton>\n\n                  <Transition\n                    leave-active-class=\"transition duration-100 ease-in\"\n                    leave-from-class=\"opacity-100\"\n                    leave-to-class=\"opacity-0\"\n                  >\n                    <ListboxOptions\n                      class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                    >\n                      <ListboxOption\n                        v-for=\"(type, key) in questionTypes\"\n                        :key=\"key\"\n                        :value=\"key\"\n                        v-slot=\"{ active, selected }\"\n                        as=\"template\"\n                      >\n                        <li\n                          :class=\"[\n                            active ? 'bg-violet-600 text-white' : 'text-gray-900',\n                            'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                          ]\"\n                        >\n                          <div class=\"flex items-center\">\n                            <component \n                              :is=\"type.icon\" \n                              :class=\"[\n                                active ? 'text-white' : 'text-gray-400',\n                                'h-5 w-5 flex-shrink-0'\n                              ]\"\n                              aria-hidden=\"true\"\n                            />\n                            <span\n                              :class=\"[\n                                selected ? 'font-semibold' : 'font-normal',\n                                'ml-3 block truncate'\n                              ]\"\n                            >\n                              {{ type.name }}\n                            </span>\n                          </div>\n\n                          <span\n                            v-if=\"selected\"\n                            :class=\"[\n                              active ? 'text-white' : 'text-violet-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4'\n                            ]\"\n                          >\n                            <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </span>\n                        </li>\n                      </ListboxOption>\n                    </ListboxOptions>\n                  </Transition>\n                </div>\n              </Listbox>\n            </div>\n\n            <!-- 问题分类 -->\n            <div>\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题分类</label>\n              <Listbox v-model=\"selectedCategory\">\n                <div class=\"relative\">\n                  <ListboxButton\n                    class=\"relative w-full cursor-pointer rounded-lg bg-white py-2.5 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus:ring-2 focus:ring-violet-500 sm:text-sm\"\n                  >\n                    <span class=\"flex items-center\">\n                      <component \n                        :is=\"selectedCategory.icon\" \n                        class=\"h-5 w-5 flex-shrink-0 text-gray-400\"\n                        aria-hidden=\"true\"\n                      />\n                      <span class=\"ml-3 block truncate\">{{ selectedCategory.name }}</span>\n                    </span>\n                    <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                      <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                  </ListboxButton>\n\n                  <Transition\n                    leave-active-class=\"transition duration-100 ease-in\"\n                    leave-from-class=\"opacity-100\"\n                    leave-to-class=\"opacity-0\"\n                  >\n                    <ListboxOptions\n                      class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                    >\n                      <ListboxOption\n                        v-for=\"category in categories\"\n                        :key=\"category.id\"\n                        :value=\"category\"\n                        v-slot=\"{ active, selected }\"\n                        as=\"template\"\n                      >\n                        <li\n                          :class=\"[\n                            active ? 'bg-violet-600 text-white' : 'text-gray-900',\n                            'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                          ]\"\n                        >\n                          <div class=\"flex items-center\">\n                            <component \n                              :is=\"category.icon\" \n                              :class=\"[\n                                active ? 'text-white' : 'text-gray-400',\n                                'h-5 w-5 flex-shrink-0'\n                              ]\"\n                              aria-hidden=\"true\"\n                            />\n                            <span\n                              :class=\"[\n                                selected ? 'font-semibold' : 'font-normal',\n                                'ml-3 block truncate'\n                              ]\"\n                            >\n                              {{ category.name }}\n                            </span>\n                          </div>\n\n                          <span\n                            v-if=\"selected\"\n                            :class=\"[\n                              active ? 'text-white' : 'text-violet-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4'\n                            ]\"\n                          >\n                            <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </span>\n                        </li>\n                      </ListboxOption>\n                    </ListboxOptions>\n                  </Transition>\n                </div>\n              </Listbox>\n            </div>\n          </div>\n\n          <!-- 悬赏设置 -->\n          <div v-if=\"questionForm.type === 'bounty'\" class=\"space-y-4\">\n            <label class=\"block text-sm font-medium text-gray-700\">悬赏设置</label>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1.5\">悬赏金额</label>\n                <div class=\"relative\">\n                  <input\n                    type=\"number\"\n                    v-model=\"questionForm.bounty\"\n                    class=\"block w-full rounded-lg border-gray-300 pl-6 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                    placeholder=\"输入金额\"\n                    min=\"1\"\n                  >\n                  <span class=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500\">¥</span>\n                </div>\n              </div>\n              <div>\n                <label class=\"block text-xs text-gray-500 mb-1.5\">悬赏时间</label>\n                <Listbox\n                  v-model=\"questionForm.bountyDays\"\n                >\n                  <div class=\"relative\">\n                    <ListboxButton\n                      class=\"relative w-full cursor-pointer rounded-lg bg-white py-2.5 pl-3 pr-10 text-left border border-gray-300 focus:outline-none focus:ring-2 focus:ring-violet-500 sm:text-sm\"\n                    >\n                      <span class=\"block truncate\">{{ questionForm.bountyDays }}天</span>\n                      <span class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                        <ChevronUpDownIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      </span>\n                    </ListboxButton>\n                    <Transition\n                      leave-active-class=\"transition duration-100 ease-in\"\n                      leave-from-class=\"opacity-100\"\n                      leave-to-class=\"opacity-0\"\n                    >\n                      <ListboxOptions\n                        class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n                      >\n                        <ListboxOption\n                          v-for=\"days in bountyDaysOptions\"\n                          :key=\"days\"\n                          :value=\"days\"\n                          v-slot=\"{ active, selected }\"\n                          as=\"template\"\n                        >\n                          <li\n                            :class=\"[\n                              active ? 'bg-violet-600 text-white' : 'text-gray-900',\n                              'relative cursor-pointer select-none py-2 pl-3 pr-9'\n                            ]\"\n                          >\n                            <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                              {{ days }}天\n                            </span>\n                            <span\n                              v-if=\"selected\"\n                              :class=\"[\n                                active ? 'text-white' : 'text-violet-600',\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\n                              ]\"\n                            >\n                              <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </span>\n                          </li>\n                        </ListboxOption>\n                      </ListboxOptions>\n                    </Transition>\n                  </div>\n                </Listbox>\n              </div>\n            </div>\n            <p class=\"text-xs text-gray-500\">\n              悬赏问题会获得更多关注，悬赏金额将在采纳答案后支付给回答者\n            </p>\n          </div>\n\n          <!-- 问题描述 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题描述</label>\n            <textarea\n              v-model=\"questionForm.content\"\n              rows=\"6\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"详细描述你的问题，以便他人更好地帮助你\"\n            ></textarea>\n          </div>\n\n          <!-- 标签 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">添加标签</label>\n            <div class=\"flex flex-wrap gap-2\">\n              <div\n                v-for=\"tag in questionForm.tags\"\n                :key=\"tag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm flex items-center group\"\n              >\n                <span>{{ tag }}</span>\n                <XMarkIcon \n                  class=\"w-4 h-4 ml-1 cursor-pointer opacity-0 group-hover:opacity-100 transition-opacity\"\n                  @click=\"removeTag(tag)\"\n                />\n              </div>\n              <input\n                v-if=\"questionForm.tags.length < 5\"\n                type=\"text\"\n                v-model=\"newTag\"\n                @keydown.enter=\"addTag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-violet-500\"\n                placeholder=\"按回车添加标签\"\n              >\n            </div>\n            <p class=\"mt-1 text-xs text-gray-500\">最多添加 5 个标签</p>\n          </div>\n        </div>\n\n        <!-- 固定的底部按钮区域 -->\n        <div class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-4 z-50\">\n          <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-sm text-gray-500\">已自动保存草稿</span>\n              <div class=\"flex items-center gap-4\">\n                <button \n                  class=\"px-6 h-10 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors\"\n                  @click=\"$router.back()\"\n                >\n                  取消\n                </button>\n                <button \n                  class=\"px-6 h-10 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n                  @click=\"submitQuestion\"\n                >\n                  发布问题\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { \n  DocumentTextIcon,\n  QuestionMarkCircleIcon,\n  HashtagIcon,\n  XMarkIcon,\n  ChevronUpDownIcon,\n  CheckIcon,\n  CurrencyYenIcon,\n  ChatBubbleLeftRightIcon,\n  CodeBracketIcon,\n  ServerIcon,\n  DevicePhoneMobileIcon,\n  ChartBarIcon,\n  DatabaseIcon,\n  CpuChipIcon,\n  BeakerIcon\n} from '@heroicons/vue/24/outline'\nimport { showToast } from '@/components/ToastMessage'\nimport ArticleForm from './components/ArticleForm.vue'\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue'\n\nconst router = useRouter()\nconst route = useRoute()\n\n// 内容类型\nconst contentTypes = [\n  { id: 'article', name: '发布文章', icon: DocumentTextIcon },\n  { id: 'topic', name: '发起话题', icon: HashtagIcon },\n  { id: 'question', name: '发布问题', icon: QuestionMarkCircleIcon },\n]\n\n// 根据来源页面设置默认类型\nconst getDefaultType = () => {\n  // 从查询参数获取类型\n  const type = route.query.type\n  // 检查是否是有效的类型\n  if (contentTypes.some(t => t.id === type)) {\n    return type\n  }\n  // 默认返回文章类型\n  return 'article'\n}\n\nconst selectedType = ref(getDefaultType())\n\n// 问题类型定义\nconst questionTypes = {\n  normal: {\n    name: '普通提问',\n    icon: QuestionMarkCircleIcon,\n    description: '寻求技术解答和建议'\n  },\n  bounty: {\n    name: '悬赏问答',\n    icon: CurrencyYenIcon,\n    description: '通过悬赏获得更快解答'\n  },\n  discussion: {\n    name: '技术讨论',\n    icon: ChatBubbleLeftRightIcon,\n    description: '发起技术话题讨论'\n  }\n}\n\n// 分类数据\nconst categories = [\n  { id: 'frontend', name: '前端开发', icon: CodeBracketIcon },\n  { id: 'backend', name: '后端开发', icon: ServerIcon },\n  { id: 'mobile', name: '移动开发', icon: DevicePhoneMobileIcon },\n  { id: 'algorithm', name: '算法', icon: ChartBarIcon },\n  { id: 'database', name: '数据库', icon: DatabaseIcon },\n  { id: 'devops', name: '运维', icon: CpuChipIcon },\n  { id: 'ai', name: '人工智能', icon: BeakerIcon }\n]\n\n// 选中的分类\nconst selectedCategory = ref(categories[0])\n\n// 悬赏时间选项\nconst bountyDaysOptions = [3, 7, 15, 30]\n\n// 问答表单数据\nconst questionForm = ref({\n  title: '',\n  type: 'normal',\n  category: '',\n  bounty: '',\n  bountyDays: 7,  // 默认7天\n  content: '',\n  tags: []\n})\n\n// 监听分类变化，更新表单数据\nwatch(selectedCategory, (category) => {\n  questionForm.value.category = category.id\n})\n\n// 标签相关\nconst newTag = ref('')\n\nconst addTag = () => {\n  const tag = newTag.value.trim()\n  if (tag && !questionForm.value.tags.includes(tag) && questionForm.value.tags.length < 5) {\n    questionForm.value.tags.push(tag)\n    newTag.value = ''\n  }\n}\n\nconst removeTag = (tag) => {\n  questionForm.value.tags = questionForm.value.tags.filter(t => t !== tag)\n}\n\n// 提交问题\nconst submitQuestion = () => {\n  // 表单验证\n  if (!questionForm.value.title) {\n    showToast('请输入问题标题', 'warning')\n    return\n  }\n  if (!questionForm.value.category) {\n    showToast('请选择问题分类', 'warning')\n    return\n  }\n  if (!questionForm.value.content) {\n    showToast('请输入问题描述', 'warning')\n    return\n  }\n\n  // TODO: 调用接口提交问题\n  console.log('提交问题:', questionForm.value)\n  showToast('发布成功', 'success')\n  router.push('/community/questions')\n}\n\n// 话题表单数据\nconst selectedTopicCategory = ref(categories[0])\nconst newTopicTag = ref('')\nconst topicForm = ref({\n  title: '',\n  category: '',\n  optionA: '',\n  optionB: '',\n  content: '',\n  tags: []\n})\n\n// 监听话题分类变化\nwatch(selectedTopicCategory, (category) => {\n  topicForm.value.category = category.id\n})\n\n// 话题标签相关\nconst addTopicTag = () => {\n  const tag = newTopicTag.value.trim()\n  if (tag && !topicForm.value.tags.includes(tag) && topicForm.value.tags.length < 5) {\n    topicForm.value.tags.push(tag)\n    newTopicTag.value = ''\n  }\n}\n\nconst removeTopicTag = (tag) => {\n  topicForm.value.tags = topicForm.value.tags.filter(t => t !== tag)\n}\n\n// 提交话题\nconst submitTopic = () => {\n  // 表单验证\n  if (!topicForm.value.title) {\n    showToast('请输入话题主题', 'warning')\n    return\n  }\n  if (!topicForm.value.category) {\n    showToast('请选择话题分类', 'warning')\n    return\n  }\n  if (!topicForm.value.optionA || !topicForm.value.optionB) {\n    showToast('请填写投票选项', 'warning')\n    return\n  }\n  if (!topicForm.value.content) {\n    showToast('请输入话题描述', 'warning')\n    return\n  }\n\n  // TODO: 调用接口提交话题\n  console.log('提交话题:', topicForm.value)\n  showToast('发布成功', 'success')\n  router.push('/community/topics')\n}\n\n// 自动保存相关\nlet autoSaveTimer = null\nconst AUTOSAVE_INTERVAL = 30000 // 30秒\nconst DRAFT_KEY_PREFIX = 'content_draft_'\n\n// 保存草稿\nconst saveDraft = () => {\n  const formData = {\n    type: selectedType.value,\n    data: selectedType.value === 'article' ? articleForm.value :\n          selectedType.value === 'topic' ? topicForm.value :\n          questionForm.value\n  }\n  localStorage.setItem(DRAFT_KEY_PREFIX + selectedType.value, JSON.stringify(formData))\n  showToast('已自动保存草稿', 'info')\n}\n\n// 加载草稿\nconst loadDraft = () => {\n  const draft = localStorage.getItem(DRAFT_KEY_PREFIX + selectedType.value)\n  if (draft) {\n    try {\n      const { type, data } = JSON.parse(draft)\n      if (type === selectedType.value) {\n        if (type === 'article') articleForm.value = { ...data }\n        else if (type === 'topic') topicForm.value = { ...data }\n        else if (type === 'question') questionForm.value = { ...data }\n        showToast('已恢复上次编辑的内容', 'info')\n      }\n    } catch (error) {\n      console.error('加载草稿失败:', error)\n    }\n  }\n}\n\n// 清除草稿\nconst clearDraft = () => {\n  localStorage.removeItem(DRAFT_KEY_PREFIX + selectedType.value)\n}\n\n// 开始自动保存\nconst startAutoSave = () => {\n  stopAutoSave() // 先清除可能存在的定时器\n  autoSaveTimer = setInterval(saveDraft, AUTOSAVE_INTERVAL)\n}\n\n// 停止自动保存\nconst stopAutoSave = () => {\n  if (autoSaveTimer) {\n    clearInterval(autoSaveTimer)\n    autoSaveTimer = null\n  }\n}\n\n// 监听类型变化\nwatch(selectedType, (newType) => {\n  stopAutoSave()\n  loadDraft()\n  startAutoSave()\n})\n\n// 组件挂载时\nonMounted(() => {\n  loadDraft()\n  startAutoSave()\n})\n\n// 组件卸载前\nonBeforeUnmount(() => {\n  stopAutoSave()\n  saveDraft() // 最后保存一次\n})\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
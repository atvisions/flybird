{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport draggable from 'vuedraggable';\nimport api from '../api';\nexport default {\n  __name: 'ToolbarPanel',\n  props: {\n    modelValue: {\n      type: String,\n      default: 'layout'\n    }\n  },\n  emits: ['update:modelValue', 'template-change'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const activeTab = ref(props.modelValue);\n    const loading = ref(false);\n    const layoutComponents = ref([]);\n    const basicComponents = ref([]);\n    const templates = ref([]);\n    const tabs = [{\n      code: 'template',\n      text: '模板',\n      icon: 'mdi-file-document-outline'\n    }, {\n      code: 'layout',\n      text: '布局',\n      icon: 'mdi-view-dashboard'\n    }, {\n      code: 'component',\n      text: '组件',\n      icon: 'mdi-puzzle'\n    }, {\n      code: 'file',\n      text: '文件',\n      icon: 'mdi-file'\n    }];\n    watch(activeTab, newValue => {\n      emit('update:modelValue', newValue);\n      if (newValue === 'layout' && layoutComponents.value.length === 0) {\n        fetchLayoutComponents();\n      } else if (newValue === 'component' && basicComponents.value.length === 0) {\n        fetchBasicComponents();\n      } else if (newValue === 'template' && templates.value.length === 0) {\n        fetchTemplates();\n      }\n    });\n    const handleDragStart = (event, component) => {\n      console.log('ToolbarPanel - dragstart:', component);\n      event.dataTransfer.effectAllowed = 'copy';\n      event.dataTransfer.dropEffect = 'copy';\n      event.target.classList.add('dragging');\n      const data = JSON.stringify(component);\n      console.log('ToolbarPanel - Setting data:', data);\n      event.dataTransfer.setData('application/json', data);\n    };\n    const fetchLayoutComponents = async () => {\n      try {\n        loading.value = true;\n        const {\n          data: categories\n        } = await api.getComponentCategories();\n        console.log('ToolbarPanel - Categories:', categories);\n        const layoutCategory = categories.find(cat => cat.code === 'layout');\n        if (layoutCategory) {\n          const {\n            data\n          } = await api.getComponents(layoutCategory.id);\n          console.log('ToolbarPanel - Layout components:', data);\n          layoutComponents.value = data.results || [];\n        }\n      } catch (error) {\n        console.error('ToolbarPanel - 获取布局组件失败:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const fetchBasicComponents = async () => {\n      try {\n        loading.value = true;\n        const {\n          data: categories\n        } = await api.getComponentCategories();\n        const componentCategory = categories.find(cat => cat.code === 'component');\n        if (componentCategory) {\n          const {\n            data\n          } = await api.getComponents(componentCategory.id);\n          basicComponents.value = data.results || [];\n        }\n      } catch (error) {\n        console.error('获取基本组件失败:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 获取模板列表\n    const fetchTemplates = async () => {\n      try {\n        loading.value = true;\n        const response = await api.getTemplates();\n        console.log('完整的响应:', response);\n        console.log('模板数据:', response.data);\n        templates.value = response.data.results;\n      } catch (error) {\n        console.error('获取模板列表失败:', error);\n        templates.value = [];\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 切换模板\n    const handleTemplateChange = async templateId => {\n      if (!templateId) return;\n      try {\n        const template = templates.value.find(t => t && t.id === templateId);\n        if (template) {\n          emit('template-change', template);\n        }\n      } catch (error) {\n        console.error('切换模板失败:', error);\n      }\n    };\n    onMounted(() => {\n      if (activeTab.value === 'layout') {\n        fetchLayoutComponents();\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      activeTab,\n      loading,\n      layoutComponents,\n      basicComponents,\n      templates,\n      tabs,\n      handleDragStart,\n      fetchLayoutComponents,\n      fetchBasicComponents,\n      fetchTemplates,\n      handleTemplateChange,\n      ref,\n      onMounted,\n      watch,\n      get draggable() {\n        return draggable;\n      },\n      get api() {\n        return api;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","draggable","api","props","__props","emit","__emit","activeTab","modelValue","loading","layoutComponents","basicComponents","templates","tabs","code","text","icon","newValue","value","length","fetchLayoutComponents","fetchBasicComponents","fetchTemplates","handleDragStart","event","component","console","log","dataTransfer","effectAllowed","dropEffect","target","classList","add","data","JSON","stringify","setData","categories","getComponentCategories","layoutCategory","find","cat","getComponents","id","results","error","componentCategory","response","getTemplates","handleTemplateChange","templateId","template","t"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/ToolbarPanel.vue"],"sourcesContent":["<template>\n  <div class=\"toolbar-panel\">\n    <!-- 左侧标签栏 -->\n    <div class=\"panel-tabs\">\n      <div\n        v-for=\"tab in tabs\"\n        :key=\"tab.code\"\n        class=\"tab-item\"\n        :class=\"{ active: activeTab === tab.code }\"\n        @click=\"activeTab = tab.code\"\n      >\n        <v-icon :icon=\"tab.icon\" />\n        <span class=\"tab-text\">{{ tab.text }}</span>\n      </div>\n    </div>\n\n    <!-- 右侧内容区 -->\n    <div class=\"panel-content\">\n      <!-- 模板面板 -->\n      <div v-if=\"activeTab === 'template'\" class=\"panel-section\">\n        <div v-if=\"loading\" class=\"loading-tip\">\n          <v-progress-circular indeterminate />\n          <span>加载中...</span>\n        </div>\n        <div v-else-if=\"!templates || !templates.length\" class=\"empty-tip\">\n          <v-icon size=\"32\" color=\"rgba(0,0,0,0.2)\">mdi-file-document-outline</v-icon>\n          <span>暂无可用模板</span>\n        </div>\n        <div v-else class=\"template-list\">\n          <div\n            v-for=\"template in templates\"\n            :key=\"template.id\"\n            class=\"template-item\"\n          >\n            <div class=\"template-preview\">\n              <img\n                v-if=\"template.thumbnail\"\n                :src=\"template.thumbnail\"\n                :alt=\"template.name || ''\"\n              />\n              <div v-else class=\"template-preview-placeholder\">\n                <v-icon size=\"32\" color=\"rgba(0,0,0,0.2)\">mdi-file-document-outline</v-icon>\n              </div>\n            </div>\n            <div class=\"template-info\">\n              <div class=\"template-name\">{{ template.name || '未命名模板' }}</div>\n              <div class=\"template-description\">{{ template.description || '暂无描述' }}</div>\n              <div class=\"template-actions\">\n                <v-btn\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  @click=\"handleTemplateChange(template.id)\"\n                >\n                  使用此模板\n                </v-btn>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 布局面板 -->\n      <div v-else-if=\"activeTab === 'layout'\" class=\"panel-section\">\n        <div v-if=\"loading\" class=\"loading-tip\">\n          <v-progress-circular indeterminate />\n          <span>加载中...</span>\n        </div>\n        <div v-else-if=\"layoutComponents.length === 0\" class=\"empty-tip\">\n          <v-icon size=\"32\" color=\"rgba(0,0,0,0.2)\">mdi-view-dashboard</v-icon>\n          <span>暂无可用布局</span>\n        </div>\n        <div v-else class=\"component-blocks\">\n          <div\n            v-for=\"component in layoutComponents\"\n            :key=\"component.id\"\n            class=\"component-block\"\n            draggable=\"true\"\n            @dragstart=\"handleDragStart($event, component)\"\n          >\n            <v-icon :icon=\"component.icon\" />\n            <span class=\"block-title\">{{ component.name }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- 组件面板 -->\n      <div v-else-if=\"activeTab === 'component'\" class=\"panel-section\">\n        <div v-if=\"loading\" class=\"loading-tip\">\n          <v-progress-circular indeterminate />\n          <span>加载中...</span>\n        </div>\n        <div v-else-if=\"basicComponents.length === 0\" class=\"empty-tip\">\n          <v-icon size=\"32\" color=\"rgba(0,0,0,0.2)\">mdi-puzzle</v-icon>\n          <span>暂无可用组件</span>\n        </div>\n        <div v-else class=\"component-blocks\">\n          <div\n            v-for=\"component in basicComponents\"\n            :key=\"component.id\"\n            class=\"component-block\"\n            draggable=\"true\"\n            @dragstart=\"handleDragStart($event, component)\"\n          >\n            <v-icon :icon=\"component.icon\" />\n            <span class=\"block-title\">{{ component.name }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- 文件面板 -->\n      <div v-else-if=\"activeTab === 'file'\" class=\"panel-section\">\n        <!-- 文件操作相关内容 -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport draggable from 'vuedraggable'\nimport api from '../api'\n\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: 'layout'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue', 'template-change'])\n\nconst activeTab = ref(props.modelValue)\nconst loading = ref(false)\nconst layoutComponents = ref([])\nconst basicComponents = ref([])\nconst templates = ref([])\n\nconst tabs = [\n  { code: 'template', text: '模板', icon: 'mdi-file-document-outline' },\n  { code: 'layout', text: '布局', icon: 'mdi-view-dashboard' },\n  { code: 'component', text: '组件', icon: 'mdi-puzzle' },\n  { code: 'file', text: '文件', icon: 'mdi-file' }\n]\n\nwatch(activeTab, (newValue) => {\n  emit('update:modelValue', newValue)\n  if (newValue === 'layout' && layoutComponents.value.length === 0) {\n    fetchLayoutComponents()\n  } else if (newValue === 'component' && basicComponents.value.length === 0) {\n    fetchBasicComponents()\n  } else if (newValue === 'template' && templates.value.length === 0) {\n    fetchTemplates()\n  }\n})\n\nconst handleDragStart = (event, component) => {\n  console.log('ToolbarPanel - dragstart:', component)\n  event.dataTransfer.effectAllowed = 'copy'\n  event.dataTransfer.dropEffect = 'copy'\n  event.target.classList.add('dragging')\n  const data = JSON.stringify(component)\n  console.log('ToolbarPanel - Setting data:', data)\n  event.dataTransfer.setData('application/json', data)\n}\n\nconst fetchLayoutComponents = async () => {\n  try {\n    loading.value = true\n    const { data: categories } = await api.getComponentCategories()\n    console.log('ToolbarPanel - Categories:', categories)\n    const layoutCategory = categories.find(cat => cat.code === 'layout')\n    if (layoutCategory) {\n      const { data } = await api.getComponents(layoutCategory.id)\n      console.log('ToolbarPanel - Layout components:', data)\n      layoutComponents.value = data.results || []\n    }\n  } catch (error) {\n    console.error('ToolbarPanel - 获取布局组件失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst fetchBasicComponents = async () => {\n  try {\n    loading.value = true\n    const { data: categories } = await api.getComponentCategories()\n    const componentCategory = categories.find(cat => cat.code === 'component')\n    if (componentCategory) {\n      const { data } = await api.getComponents(componentCategory.id)\n      basicComponents.value = data.results || []\n    }\n  } catch (error) {\n    console.error('获取基本组件失败:', error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取模板列表\nconst fetchTemplates = async () => {\n  try {\n    loading.value = true\n    const response = await api.getTemplates()\n    console.log('完整的响应:', response)\n    console.log('模板数据:', response.data)\n    templates.value = response.data.results\n  } catch (error) {\n    console.error('获取模板列表失败:', error)\n    templates.value = []\n  } finally {\n    loading.value = false\n  }\n}\n\n// 切换模板\nconst handleTemplateChange = async (templateId) => {\n  if (!templateId) return\n  try {\n    const template = templates.value.find(t => t && t.id === templateId)\n    if (template) {\n      emit('template-change', template)\n    }\n  } catch (error) {\n    console.error('切换模板失败:', error)\n  }\n}\n\nonMounted(() => {\n  if (activeTab.value === 'layout') {\n    fetchLayoutComponents()\n  }\n})\n</script>\n\n<style scoped>\n.toolbar-panel {\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background: #fff;\n}\n\n.panel-tabs {\n  width: 48px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid #e4e7ed;\n  background: #f5f7fa;\n}\n\n.tab-item {\n  height: 48px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  writing-mode: vertical-rl;\n  color: #909399;\n}\n\n.tab-item:hover {\n  background: #ecf5ff;\n  color: #409eff;\n}\n\n.tab-item.active {\n  background: #ecf5ff;\n  color: #409eff;\n  border-right: 2px solid #409eff;\n}\n\n.tab-text {\n  font-size: 12px;\n  margin-top: 4px;\n}\n\n.panel-content {\n  flex: 1;\n  height: 100%;\n  overflow: hidden;\n}\n\n.panel-section {\n  height: 100%;\n  overflow-y: auto;\n  padding: 12px;\n}\n\n.loading-tip,\n.empty-tip {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  gap: 8px;\n}\n\n.template-list {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.template-item {\n  display: flex;\n  gap: 12px;\n  padding: 12px;\n  border: 1px solid #e4e7ed;\n  border-radius: 8px;\n  transition: all 0.3s;\n}\n\n.template-item:hover {\n  border-color: #409eff;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\n.template-preview {\n  width: 120px;\n  height: 160px;\n  border-radius: 4px;\n  overflow: hidden;\n  background: #f5f7fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.template-preview img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.template-preview-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f5f7fa;\n}\n\n.template-info {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.template-name {\n  font-size: 16px;\n  font-weight: 500;\n  color: #303133;\n}\n\n.template-description {\n  font-size: 14px;\n  color: #606266;\n  line-height: 1.4;\n}\n\n.template-actions {\n  margin-top: 12px;\n}\n\n.component-blocks {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.component-block {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px;\n  background: #f5f7fa;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  cursor: move;\n}\n\n.component-block:hover {\n  background: #ecf5ff;\n  border-color: #409eff;\n}\n\n.block-title {\n  font-size: 14px;\n  color: #606266;\n}\n</style> "],"mappings":";;AAuHA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAI;AAC1C,OAAOC,SAAS,MAAM,cAAa;AACnC,OAAOC,GAAG,MAAM,QAAO;;;;;;;;;;;;;;;IAEvB,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;IAEb,MAAMC,SAAS,GAAGT,GAAG,CAACK,KAAK,CAACK,UAAU;IACtC,MAAMC,OAAO,GAAGX,GAAG,CAAC,KAAK;IACzB,MAAMY,gBAAgB,GAAGZ,GAAG,CAAC,EAAE;IAC/B,MAAMa,eAAe,GAAGb,GAAG,CAAC,EAAE;IAC9B,MAAMc,SAAS,GAAGd,GAAG,CAAC,EAAE;IAExB,MAAMe,IAAI,GAAG,CACX;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAA4B,CAAC,EACnE;MAAEF,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAqB,CAAC,EAC1D;MAAEF,IAAI,EAAE,WAAW;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAa,CAAC,EACrD;MAAEF,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAW,EAC/C;IAEAhB,KAAK,CAACO,SAAS,EAAGU,QAAQ,IAAK;MAC7BZ,IAAI,CAAC,mBAAmB,EAAEY,QAAQ;MAClC,IAAIA,QAAQ,KAAK,QAAQ,IAAIP,gBAAgB,CAACQ,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAChEC,qBAAqB,CAAC;MACxB,CAAC,MAAM,IAAIH,QAAQ,KAAK,WAAW,IAAIN,eAAe,CAACO,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QACzEE,oBAAoB,CAAC;MACvB,CAAC,MAAM,IAAIJ,QAAQ,KAAK,UAAU,IAAIL,SAAS,CAACM,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAClEG,cAAc,CAAC;MACjB;IACF,CAAC;IAED,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;MAC5CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,SAAS;MAClDD,KAAK,CAACI,YAAY,CAACC,aAAa,GAAG,MAAK;MACxCL,KAAK,CAACI,YAAY,CAACE,UAAU,GAAG,MAAK;MACrCN,KAAK,CAACO,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU;MACrC,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACX,SAAS;MACrCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEO,IAAI;MAChDV,KAAK,CAACI,YAAY,CAACS,OAAO,CAAC,kBAAkB,EAAEH,IAAI;IACrD;IAEA,MAAMd,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACFX,OAAO,CAACS,KAAK,GAAG,IAAG;QACnB,MAAM;UAAEgB,IAAI,EAAEI;QAAW,CAAC,GAAG,MAAMpC,GAAG,CAACqC,sBAAsB,CAAC;QAC9Db,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEW,UAAU;QACpD,MAAME,cAAc,GAAGF,UAAU,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAC5B,IAAI,KAAK,QAAQ;QACnE,IAAI0B,cAAc,EAAE;UAClB,MAAM;YAAEN;UAAK,CAAC,GAAG,MAAMhC,GAAG,CAACyC,aAAa,CAACH,cAAc,CAACI,EAAE;UAC1DlB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEO,IAAI;UACrDxB,gBAAgB,CAACQ,KAAK,GAAGgB,IAAI,CAACW,OAAO,IAAI,EAAC;QAC5C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,0BAA0B,EAAEA,KAAK;MACjD,CAAC,SAAS;QACRrC,OAAO,CAACS,KAAK,GAAG,KAAI;MACtB;IACF;IAEA,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACFZ,OAAO,CAACS,KAAK,GAAG,IAAG;QACnB,MAAM;UAAEgB,IAAI,EAAEI;QAAW,CAAC,GAAG,MAAMpC,GAAG,CAACqC,sBAAsB,CAAC;QAC9D,MAAMQ,iBAAiB,GAAGT,UAAU,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAC5B,IAAI,KAAK,WAAW;QACzE,IAAIiC,iBAAiB,EAAE;UACrB,MAAM;YAAEb;UAAK,CAAC,GAAG,MAAMhC,GAAG,CAACyC,aAAa,CAACI,iBAAiB,CAACH,EAAE;UAC7DjC,eAAe,CAACO,KAAK,GAAGgB,IAAI,CAACW,OAAO,IAAI,EAAC;QAC3C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC,CAAC,SAAS;QACRrC,OAAO,CAACS,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACA,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFb,OAAO,CAACS,KAAK,GAAG,IAAG;QACnB,MAAM8B,QAAQ,GAAG,MAAM9C,GAAG,CAAC+C,YAAY,CAAC;QACxCvB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEqB,QAAQ;QAC9BtB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEqB,QAAQ,CAACd,IAAI;QAClCtB,SAAS,CAACM,KAAK,GAAG8B,QAAQ,CAACd,IAAI,CAACW,OAAM;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,WAAW,EAAEA,KAAK;QAChClC,SAAS,CAACM,KAAK,GAAG,EAAC;MACrB,CAAC,SAAS;QACRT,OAAO,CAACS,KAAK,GAAG,KAAI;MACtB;IACF;;IAEA;IACA,MAAMgC,oBAAoB,GAAG,MAAOC,UAAU,IAAK;MACjD,IAAI,CAACA,UAAU,EAAE;MACjB,IAAI;QACF,MAAMC,QAAQ,GAAGxC,SAAS,CAACM,KAAK,CAACuB,IAAI,CAACY,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKO,UAAU;QACnE,IAAIC,QAAQ,EAAE;UACZ/C,IAAI,CAAC,iBAAiB,EAAE+C,QAAQ;QAClC;MACF,CAAC,CAAC,OAAON,KAAK,EAAE;QACdpB,OAAO,CAACoB,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC;IACF;IAEA/C,SAAS,CAAC,MAAM;MACd,IAAIQ,SAAS,CAACW,KAAK,KAAK,QAAQ,EAAE;QAChCE,qBAAqB,CAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
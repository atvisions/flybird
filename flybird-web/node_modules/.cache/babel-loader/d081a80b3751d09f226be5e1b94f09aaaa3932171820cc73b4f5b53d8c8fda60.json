{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref } from 'vue';\nimport ToolbarPanel from './components/ToolbarPanel.vue';\nimport Canvas from './components/Canvas.vue';\nimport PropertyPanel from './components/PropertyPanel.vue';\nimport SaveTemplateDialog from './components/SaveTemplateDialog.vue';\nimport { useTemplateStore } from '@/stores/template';\n\n// 画布缩放\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const scale = ref(1);\n    const canvasRef = ref(null);\n\n    // 保存模板对话框\n    const showSaveDialog = ref(false);\n\n    // 选中元素\n    const selectedElement = ref(null);\n\n    // 模板store\n    const templateStore = useTemplateStore();\n\n    // 消息提示状态\n    const snackbar = ref({\n      show: false,\n      text: '',\n      color: 'success',\n      timeout: 3000\n    });\n\n    // 显示消息提示\n    const showMessage = (text, color = 'success', timeout = 3000) => {\n      snackbar.value = {\n        show: true,\n        text,\n        color,\n        timeout\n      };\n    };\n\n    // 处理元素选择\n    const handleElementSelect = element => {\n      selectedElement.value = element;\n    };\n\n    // 处理元素更新\n    const handleElementUpdate = updatedElement => {\n      if (canvasRef.value) {\n        canvasRef.value.handleElementUpdate(updatedElement);\n      }\n    };\n\n    // 处理模板保存\n    const handleSaveTemplate = async templateData => {\n      try {\n        const layoutData = canvasRef.value.exportLayoutData();\n\n        // 构建模板数据\n        const data = _objectSpread(_objectSpread({}, templateData), {}, {\n          components: layoutData.elements,\n          layout: {\n            type: 'grid',\n            columns: 12,\n            gap: '16px',\n            areas: []\n          },\n          theme: {\n            colors: {\n              primary: '#2c3e50',\n              secondary: '#7f8c8d',\n              background: '#f5f7fa',\n              accent: '#3498db'\n            },\n            typography: {\n              title: {\n                font: 'Arial',\n                size: '24px',\n                weight: 'bold'\n              },\n              body: {\n                font: 'Arial',\n                size: '14px',\n                weight: 'normal'\n              }\n            },\n            spacing: {\n              unit: '1rem',\n              section: '2rem'\n            }\n          }\n        });\n\n        // 保存模板\n        await templateStore.saveTemplate(data);\n        showMessage('模板保存成功');\n        showSaveDialog.value = false;\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        showMessage('保存模板失败: ' + error.message, 'error', 5000);\n      }\n    };\n\n    // 处理缩放\n    const handleZoomIn = () => {\n      if (scale.value < 2) {\n        scale.value += 0.1;\n      }\n    };\n    const handleZoomOut = () => {\n      if (scale.value > 0.5) {\n        scale.value -= 0.1;\n      }\n    };\n    const handleZoomReset = () => {\n      scale.value = 1;\n    };\n    const dataFields = ref([]);\n\n    // 处理数据字段更新\n    const handleDataFieldsUpdate = fields => {\n      dataFields.value = fields;\n    };\n\n    // 处理保存模板按钮点击\n    const handleSaveClick = () => {\n      showSaveDialog.value = true;\n    };\n    const __returned__ = {\n      scale,\n      canvasRef,\n      showSaveDialog,\n      selectedElement,\n      templateStore,\n      snackbar,\n      showMessage,\n      handleElementSelect,\n      handleElementUpdate,\n      handleSaveTemplate,\n      handleZoomIn,\n      handleZoomOut,\n      handleZoomReset,\n      dataFields,\n      handleDataFieldsUpdate,\n      handleSaveClick,\n      ref,\n      ToolbarPanel,\n      Canvas,\n      PropertyPanel,\n      SaveTemplateDialog,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ToolbarPanel","Canvas","PropertyPanel","SaveTemplateDialog","useTemplateStore","scale","canvasRef","showSaveDialog","selectedElement","templateStore","snackbar","show","text","color","timeout","showMessage","value","handleElementSelect","element","handleElementUpdate","updatedElement","handleSaveTemplate","templateData","layoutData","exportLayoutData","data","_objectSpread","components","elements","layout","type","columns","gap","areas","theme","colors","primary","secondary","background","accent","typography","title","font","size","weight","body","spacing","unit","section","saveTemplate","error","console","message","handleZoomIn","handleZoomOut","handleZoomReset","dataFields","handleDataFieldsUpdate","fields","handleSaveClick"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/index.vue"],"sourcesContent":["<template>\n  <div class=\"resume-editor\">\n    <div class=\"editor-header\">\n      <div class=\"left-actions\">\n        <v-btn-group>\n          <v-btn\n            icon=\"mdi-minus\"\n            @click=\"handleZoomOut\"\n            :disabled=\"scale <= 0.5\"\n          ></v-btn>\n          <v-btn\n            icon=\"mdi-plus\"\n            @click=\"handleZoomIn\"\n            :disabled=\"scale >= 2\"\n          ></v-btn>\n          <v-btn icon=\"mdi-refresh\" @click=\"handleZoomReset\"></v-btn>\n        </v-btn-group>\n        <span class=\"scale-text\">{{ Math.round(scale * 100) }}%</span>\n      </div>\n      <div class=\"right-actions\">\n        <v-btn\n          color=\"primary\"\n          prepend-icon=\"mdi-content-save\"\n          @click=\"handleSaveClick\"\n        >\n          保存为模板\n        </v-btn>\n      </div>\n    </div>\n    \n    <div class=\"editor-main\">\n      <ToolbarPanel />\n      <Canvas \n        ref=\"canvasRef\" \n        :scale=\"scale\"\n        @element-select=\"handleElementSelect\"\n        @data-fields-update=\"handleDataFieldsUpdate\"\n      />\n      <PropertyPanel \n        :selected-element=\"selectedElement\"\n        :data-fields=\"dataFields\"\n        @update=\"handleElementUpdate\"\n      />\n    </div>\n\n    <SaveTemplateDialog\n      v-model=\"showSaveDialog\"\n      @save=\"handleSaveTemplate\"\n    />\n\n    <!-- 消息提示 -->\n    <v-snackbar\n      v-model=\"snackbar.show\"\n      :color=\"snackbar.color\"\n      :timeout=\"snackbar.timeout\"\n    >\n      {{ snackbar.text }}\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport ToolbarPanel from './components/ToolbarPanel.vue'\nimport Canvas from './components/Canvas.vue'\nimport PropertyPanel from './components/PropertyPanel.vue'\nimport SaveTemplateDialog from './components/SaveTemplateDialog.vue'\nimport { useTemplateStore } from '@/stores/template'\n\n// 画布缩放\nconst scale = ref(1)\nconst canvasRef = ref(null)\n\n// 保存模板对话框\nconst showSaveDialog = ref(false)\n\n// 选中元素\nconst selectedElement = ref(null)\n\n// 模板store\nconst templateStore = useTemplateStore()\n\n// 消息提示状态\nconst snackbar = ref({\n  show: false,\n  text: '',\n  color: 'success',\n  timeout: 3000\n})\n\n// 显示消息提示\nconst showMessage = (text, color = 'success', timeout = 3000) => {\n  snackbar.value = {\n    show: true,\n    text,\n    color,\n    timeout\n  }\n}\n\n// 处理元素选择\nconst handleElementSelect = (element) => {\n  selectedElement.value = element\n}\n\n// 处理元素更新\nconst handleElementUpdate = (updatedElement) => {\n  if (canvasRef.value) {\n    canvasRef.value.handleElementUpdate(updatedElement)\n  }\n}\n\n// 处理模板保存\nconst handleSaveTemplate = async (templateData) => {\n  try {\n    const layoutData = canvasRef.value.exportLayoutData()\n    \n    // 构建模板数据\n    const data = {\n      ...templateData,\n      components: layoutData.elements,\n      layout: {\n        type: 'grid',\n        columns: 12,\n        gap: '16px',\n        areas: []\n      },\n      theme: {\n        colors: {\n          primary: '#2c3e50',\n          secondary: '#7f8c8d',\n          background: '#f5f7fa',\n          accent: '#3498db'\n        },\n        typography: {\n          title: {\n            font: 'Arial',\n            size: '24px',\n            weight: 'bold'\n          },\n          body: {\n            font: 'Arial',\n            size: '14px',\n            weight: 'normal'\n          }\n        },\n        spacing: {\n          unit: '1rem',\n          section: '2rem'\n        }\n      }\n    }\n\n    // 保存模板\n    await templateStore.saveTemplate(data)\n    showMessage('模板保存成功')\n    showSaveDialog.value = false\n  } catch (error) {\n    console.error('保存模板失败:', error)\n    showMessage('保存模板失败: ' + error.message, 'error', 5000)\n  }\n}\n\n// 处理缩放\nconst handleZoomIn = () => {\n  if (scale.value < 2) {\n    scale.value += 0.1\n  }\n}\n\nconst handleZoomOut = () => {\n  if (scale.value > 0.5) {\n    scale.value -= 0.1\n  }\n}\n\nconst handleZoomReset = () => {\n  scale.value = 1\n}\n\nconst dataFields = ref([])\n\n// 处理数据字段更新\nconst handleDataFieldsUpdate = (fields) => {\n  dataFields.value = fields\n}\n\n// 处理保存模板按钮点击\nconst handleSaveClick = () => {\n  showSaveDialog.value = true\n}\n</script>\n\n<style scoped>\n.resume-editor {\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.editor-header {\n  height: 64px;\n  padding: 0 20px;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #ffffff;\n}\n\n.left-actions,\n.right-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.scale-text {\n  font-size: 14px;\n  color: #666;\n  min-width: 48px;\n}\n\n.editor-main {\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
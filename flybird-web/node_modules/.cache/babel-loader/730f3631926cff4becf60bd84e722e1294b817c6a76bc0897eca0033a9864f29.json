{"ast":null,"code":"import { ref, computed } from 'vue';\nimport 'vue-cropper/dist/index.css';\nimport { VueCropper } from 'vue-cropper';\nimport { showToast } from '@/components/ToastMessage';\nexport default {\n  __name: 'AvatarCropper',\n  props: {\n    modelValue: Boolean\n  },\n  emits: ['update:modelValue', 'upload'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    const props = __props;\n    const emit = __emit;\n    const visible = computed({\n      get: () => props.modelValue,\n      set: val => emit('update:modelValue', val)\n    });\n    const cropper = ref(null);\n    const fileInput = ref(null);\n    const imgUrl = ref('');\n    const uploading = ref(false);\n    const previewStyle = ref({});\n\n    // 打开文件选择器\n    const openFileSelector = () => {\n      fileInput.value.click();\n    };\n\n    // 处理文件选择\n    const handleFileChange = e => {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型和大小\n      if (!file.type.startsWith('image/')) {\n        showToast('请选择图片文件', 'error');\n        return;\n      }\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (file.size > maxSize) {\n        showToast('图片大小不能超过5MB', 'error');\n        return;\n      }\n\n      // 读取文件\n      const reader = new FileReader();\n      reader.onload = e => {\n        imgUrl.value = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 实时预览\n    const realTime = data => {\n      previewStyle.value = {\n        backgroundImage: `url(${data.url})`,\n        backgroundPosition: `${data.x}px ${data.y}px`,\n        backgroundSize: `${data.w}px ${data.h}px`\n      };\n    };\n\n    // 旋转操作\n    const rotateLeft = () => {\n      cropper.value.rotateLeft();\n    };\n    const rotateRight = () => {\n      cropper.value.rotateRight();\n    };\n\n    // 缩放操作\n    const changeScale = num => {\n      cropper.value.changeScale(num);\n    };\n\n    // 上传处理\n    const handleUpload = async () => {\n      try {\n        uploading.value = true;\n        // 获取裁剪后的图片 blob 数据\n        const blob = await new Promise(resolve => {\n          cropper.value.getCropBlob(data => {\n            resolve(data);\n          });\n        });\n\n        // 创建文件对象\n        const file = new File([blob], 'avatar.png', {\n          type: 'image/png'\n        });\n\n        // 触发上传事件\n        emit('upload', file);\n        handleClose();\n      } catch (error) {\n        console.error('头像处理失败:', error);\n        showToast('头像处理失败，请重试', 'error');\n      } finally {\n        uploading.value = false;\n      }\n    };\n\n    // 关闭处理\n    const handleClose = () => {\n      visible.value = false;\n      imgUrl.value = '';\n      if (fileInput.value) {\n        fileInput.value.value = '';\n      }\n    };\n\n    // 暴露方法给父组件\n    __expose({\n      openFileSelector\n    });\n    const __returned__ = {\n      props,\n      emit,\n      visible,\n      cropper,\n      fileInput,\n      imgUrl,\n      uploading,\n      previewStyle,\n      openFileSelector,\n      handleFileChange,\n      realTime,\n      rotateLeft,\n      rotateRight,\n      changeScale,\n      handleUpload,\n      handleClose,\n      ref,\n      computed,\n      get VueCropper() {\n        return VueCropper;\n      },\n      get showToast() {\n        return showToast;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","VueCropper","showToast","props","__props","emit","__emit","visible","get","modelValue","set","val","cropper","fileInput","imgUrl","uploading","previewStyle","openFileSelector","value","click","handleFileChange","e","file","target","files","type","startsWith","maxSize","size","reader","FileReader","onload","result","readAsDataURL","realTime","data","backgroundImage","url","backgroundPosition","x","y","backgroundSize","w","h","rotateLeft","rotateRight","changeScale","num","handleUpload","blob","Promise","resolve","getCropBlob","File","handleClose","error","console","__expose"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/components/AvatarCropper.vue"],"sourcesContent":["<template>\n  <el-dialog\n    v-model=\"visible\"\n    title=\"上传头像\"\n    width=\"700px\"\n    :close-on-click-modal=\"false\"\n    :before-close=\"handleClose\"\n  >\n    <div class=\"avatar-cropper\">\n      <!-- 左侧预览区域 -->\n      <div class=\"preview-container\">\n        <h4 class=\"text-gray-600 mb-2\">预览效果</h4>\n        <div class=\"preview-box large mb-4\">\n          <div class=\"preview\" :style=\"previewStyle\"></div>\n        </div>\n        <div class=\"flex gap-4\">\n          <div class=\"preview-box small\">\n            <div class=\"preview\" :style=\"previewStyle\"></div>\n          </div>\n          <div class=\"preview-box mini\">\n            <div class=\"preview\" :style=\"previewStyle\"></div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 右侧裁剪区域 -->\n      <div class=\"cropper-container\">\n        <VueCropper\n          ref=\"cropper\"\n          :img=\"imgUrl\"\n          :autoCrop=\"true\"\n          :fixedBox=\"true\"\n          :centerBox=\"true\"\n          :info=\"true\"\n          :full=\"true\"\n          :canMove=\"true\"\n          :canMoveBox=\"true\"\n          :original=\"false\"\n          :autoCropWidth=\"200\"\n          :autoCropHeight=\"200\"\n          :outputType=\"'png'\"\n          @realTime=\"realTime\"\n        />\n      </div>\n    </div>\n\n    <!-- 操作按钮 -->\n    <div class=\"operation-buttons mt-4 flex gap-2\">\n      <el-button size=\"small\" @click=\"rotateLeft\">\n        <template #icon>\n          <i class=\"fas fa-undo\"></i>\n        </template>\n        向左旋转\n      </el-button>\n      <el-button size=\"small\" @click=\"rotateRight\">\n        <template #icon>\n          <i class=\"fas fa-redo\"></i>\n        </template>\n        向右旋转\n      </el-button>\n      <el-button size=\"small\" @click=\"changeScale(1)\">\n        <template #icon>\n          <i class=\"fas fa-search-plus\"></i>\n        </template>\n        放大\n      </el-button>\n      <el-button size=\"small\" @click=\"changeScale(-1)\">\n        <template #icon>\n          <i class=\"fas fa-search-minus\"></i>\n        </template>\n        缩小\n      </el-button>\n    </div>\n\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"handleClose\">取消</el-button>\n        <el-button type=\"primary\" :loading=\"uploading\" @click=\"handleUpload\">\n          确认上传\n        </el-button>\n      </div>\n    </template>\n  </el-dialog>\n\n  <!-- 文件选择器 -->\n  <input\n    ref=\"fileInput\"\n    type=\"file\"\n    accept=\"image/*\"\n    class=\"hidden\"\n    @change=\"handleFileChange\"\n  >\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport 'vue-cropper/dist/index.css'\nimport { VueCropper } from 'vue-cropper'\nimport { showToast } from '@/components/ToastMessage'\n\nconst props = defineProps({\n  modelValue: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'upload'])\n\nconst visible = computed({\n  get: () => props.modelValue,\n  set: (val) => emit('update:modelValue', val)\n})\n\nconst cropper = ref(null)\nconst fileInput = ref(null)\nconst imgUrl = ref('')\nconst uploading = ref(false)\nconst previewStyle = ref({})\n\n// 打开文件选择器\nconst openFileSelector = () => {\n  fileInput.value.click()\n}\n\n// 处理文件选择\nconst handleFileChange = (e) => {\n  const file = e.target.files[0]\n  if (!file) return\n\n  // 验证文件类型和大小\n  if (!file.type.startsWith('image/')) {\n    showToast('请选择图片文件', 'error')\n    return\n  }\n\n  const maxSize = 5 * 1024 * 1024 // 5MB\n  if (file.size > maxSize) {\n    showToast('图片大小不能超过5MB', 'error')\n    return\n  }\n\n  // 读取文件\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    imgUrl.value = e.target.result\n  }\n  reader.readAsDataURL(file)\n}\n\n// 实时预览\nconst realTime = (data) => {\n  previewStyle.value = {\n    backgroundImage: `url(${data.url})`,\n    backgroundPosition: `${data.x}px ${data.y}px`,\n    backgroundSize: `${data.w}px ${data.h}px`\n  }\n}\n\n// 旋转操作\nconst rotateLeft = () => {\n  cropper.value.rotateLeft()\n}\n\nconst rotateRight = () => {\n  cropper.value.rotateRight()\n}\n\n// 缩放操作\nconst changeScale = (num) => {\n  cropper.value.changeScale(num)\n}\n\n// 上传处理\nconst handleUpload = async () => {\n  try {\n    uploading.value = true\n    // 获取裁剪后的图片 blob 数据\n    const blob = await new Promise((resolve) => {\n      cropper.value.getCropBlob((data) => {\n        resolve(data)\n      })\n    })\n\n    // 创建文件对象\n    const file = new File([blob], 'avatar.png', { type: 'image/png' })\n    \n    // 触发上传事件\n    emit('upload', file)\n    handleClose()\n  } catch (error) {\n    console.error('头像处理失败:', error)\n    showToast('头像处理失败，请重试', 'error')\n  } finally {\n    uploading.value = false\n  }\n}\n\n// 关闭处理\nconst handleClose = () => {\n  visible.value = false\n  imgUrl.value = ''\n  if (fileInput.value) {\n    fileInput.value.value = ''\n  }\n}\n\n// 暴露方法给父组件\ndefineExpose({\n  openFileSelector\n})\n</script>\n\n<style scoped>\n.avatar-cropper {\n  display: flex;\n  gap: 20px;\n}\n\n.preview-container {\n  width: 200px;\n}\n\n.cropper-container {\n  flex: 1;\n  height: 400px;\n}\n\n.preview-box {\n  border: 1px solid #dcdfe6;\n  overflow: hidden;\n  border-radius: 4px;\n}\n\n.preview-box.large {\n  width: 200px;\n  height: 200px;\n}\n\n.preview-box.small {\n  width: 100px;\n  height: 100px;\n}\n\n.preview-box.mini {\n  width: 50px;\n  height: 50px;\n}\n\n.preview {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n:deep(.vue-cropper) {\n  height: 100%;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
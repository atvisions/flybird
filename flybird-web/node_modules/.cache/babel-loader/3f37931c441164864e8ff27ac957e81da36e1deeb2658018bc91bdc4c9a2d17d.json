{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { computed } from 'vue';\nimport { vDraggable } from '../../../directives/draggable';\nexport default {\n  __name: 'DesignElement',\n  props: {\n    element: {\n      type: Object,\n      required: true\n    },\n    isSelected: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['select', 'update'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 元素基础样式\n    const elementStyle = computed(() => _objectSpread({\n      transform: `translate(${props.element.x}px, ${props.element.y}px) rotate(${props.element.rotation}deg)`,\n      width: `${props.element.width}px`,\n      height: `${props.element.height}px`\n    }, props.element.styles));\n\n    // 获取字段标签\n    const getFieldLabel = dataField => {\n      const labels = {\n        profile: {\n          avatar: '头像',\n          name: '姓名',\n          email: '邮箱',\n          phone: '电话'\n        },\n        education: {\n          school: '学校',\n          major: '专业',\n          degree: '学位'\n        }\n        // ... 其他字段映射\n      };\n      return labels[dataField.type]?.[dataField.field] || dataField.field;\n    };\n\n    // 获取字段占位符\n    const getFieldPlaceholder = dataField => {\n      const placeholders = {\n        profile: {\n          avatar: '[头像]',\n          name: '[姓名]',\n          email: '[邮箱]',\n          phone: '[电话]'\n        }\n        // ... 其他占位符\n      };\n      return placeholders[dataField.type]?.[dataField.field] || '[数据]';\n    };\n\n    // 拖拽配置\n    const dragOptions = {\n      onDrag: (event, {\n        deltaX,\n        deltaY\n      }) => {\n        emit('update', _objectSpread(_objectSpread({}, props.element), {}, {\n          x: props.element.x + deltaX,\n          y: props.element.y + deltaY\n        }));\n      }\n    };\n\n    // 处理缩放\n    const startResize = handle => {\n      // 实现缩放逻辑\n    };\n\n    // 处理旋转\n    const startRotate = () => {\n      // 实现旋转逻辑\n    };\n    const __returned__ = {\n      props,\n      emit,\n      elementStyle,\n      getFieldLabel,\n      getFieldPlaceholder,\n      dragOptions,\n      startResize,\n      startRotate,\n      computed,\n      get vDraggable() {\n        return vDraggable;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","vDraggable","props","__props","emit","__emit","elementStyle","_objectSpread","transform","element","x","y","rotation","width","height","styles","getFieldLabel","dataField","labels","profile","avatar","name","email","phone","education","school","major","degree","type","field","getFieldPlaceholder","placeholders","dragOptions","onDrag","event","deltaX","deltaY","startResize","handle","startRotate"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/components/DesignElement.vue"],"sourcesContent":["<template>\n  <div \n    class=\"design-element\"\n    :class=\"{ selected: isSelected }\"\n    :style=\"elementStyle\"\n    @click=\"$emit('select', element)\"\n    v-draggable=\"dragOptions\"\n  >\n    <!-- 形状元素 -->\n    <template v-if=\"element.type === 'shape'\">\n      <div class=\"shape\" :style=\"shapeStyle\"></div>\n    </template>\n\n    <!-- 图标元素 -->\n    <template v-if=\"element.type === 'icon'\">\n      <v-icon :icon=\"element.icon\" :style=\"iconStyle\"></v-icon>\n    </template>\n\n    <!-- 图片元素 -->\n    <template v-if=\"element.type === 'image'\">\n      <div class=\"image-wrapper\">\n        <img \n          :src=\"element.content || element.placeholder\" \n          :style=\"imageStyle\"\n        >\n        <div v-if=\"element.dataBinding\" class=\"binding-indicator\">\n          已绑定: {{ element.dataBinding.field }}\n        </div>\n      </div>\n    </template>\n\n    <!-- 文本元素 -->\n    <template v-if=\"element.type === 'text'\">\n      <div class=\"text-wrapper\">\n        <div class=\"text\" :style=\"textStyle\">\n          {{ element.content || element.placeholder }}\n        </div>\n        <div v-if=\"element.dataBinding\" class=\"binding-indicator\">\n          已绑定: {{ element.dataBinding.field }}\n        </div>\n      </div>\n    </template>\n\n    <!-- 数据字段元素 -->\n    <template v-if=\"element.type === 'data-field'\">\n      <div class=\"data-field\" :style=\"dataFieldStyle\">\n        <div class=\"field-label\">{{ getFieldLabel(element.dataField) }}</div>\n        <div class=\"field-placeholder\">\n          {{ getFieldPlaceholder(element.dataField) }}\n        </div>\n      </div>\n    </template>\n\n    <!-- 调整大小的手柄 -->\n    <template v-if=\"isSelected\">\n      <div class=\"resize-handle tl\" @mousedown=\"startResize('tl')\"></div>\n      <div class=\"resize-handle tr\" @mousedown=\"startResize('tr')\"></div>\n      <div class=\"resize-handle bl\" @mousedown=\"startResize('bl')\"></div>\n      <div class=\"resize-handle br\" @mousedown=\"startResize('br')\"></div>\n      <!-- 旋转手柄 -->\n      <div class=\"rotate-handle\" @mousedown=\"startRotate\"></div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { vDraggable } from '../../../directives/draggable'\n\nconst props = defineProps({\n  element: {\n    type: Object,\n    required: true\n  },\n  isSelected: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['select', 'update'])\n\n// 元素基础样式\nconst elementStyle = computed(() => ({\n  transform: `translate(${props.element.x}px, ${props.element.y}px) rotate(${props.element.rotation}deg)`,\n  width: `${props.element.width}px`,\n  height: `${props.element.height}px`,\n  ...props.element.styles\n}))\n\n// 获取字段标签\nconst getFieldLabel = (dataField) => {\n  const labels = {\n    profile: {\n      avatar: '头像',\n      name: '姓名',\n      email: '邮箱',\n      phone: '电话'\n    },\n    education: {\n      school: '学校',\n      major: '专业',\n      degree: '学位'\n    }\n    // ... 其他字段映射\n  }\n  return labels[dataField.type]?.[dataField.field] || dataField.field\n}\n\n// 获取字段占位符\nconst getFieldPlaceholder = (dataField) => {\n  const placeholders = {\n    profile: {\n      avatar: '[头像]',\n      name: '[姓名]',\n      email: '[邮箱]',\n      phone: '[电话]'\n    }\n    // ... 其他占位符\n  }\n  return placeholders[dataField.type]?.[dataField.field] || '[数据]'\n}\n\n// 拖拽配置\nconst dragOptions = {\n  onDrag: (event, { deltaX, deltaY }) => {\n    emit('update', {\n      ...props.element,\n      x: props.element.x + deltaX,\n      y: props.element.y + deltaY\n    })\n  }\n}\n\n// 处理缩放\nconst startResize = (handle) => {\n  // 实现缩放逻辑\n}\n\n// 处理旋转\nconst startRotate = () => {\n  // 实现旋转逻辑\n}\n</script>\n\n<style scoped>\n.design-element {\n  position: absolute;\n  cursor: move;\n}\n\n.design-element.selected {\n  outline: 2px solid #1867C0;\n}\n\n.resize-handle {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: #fff;\n  border: 1px solid #1867C0;\n  border-radius: 50%;\n}\n\n.resize-handle.tl { top: -4px; left: -4px; cursor: nw-resize; }\n.resize-handle.tr { top: -4px; right: -4px; cursor: ne-resize; }\n.resize-handle.bl { bottom: -4px; left: -4px; cursor: sw-resize; }\n.resize-handle.br { bottom: -4px; right: -4px; cursor: se-resize; }\n\n.rotate-handle {\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  width: 8px;\n  height: 8px;\n  background: #1867C0;\n  border-radius: 50%;\n  transform: translateX(-50%);\n  cursor: grab;\n}\n\n.data-field {\n  padding: 8px;\n  border: 1px dashed #999;\n  border-radius: 4px;\n}\n\n.field-label {\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 4px;\n}\n\n.field-placeholder {\n  color: #999;\n  font-style: italic;\n}\n\n.binding-indicator {\n  position: absolute;\n  top: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(24, 103, 192, 0.9);\n  color: white;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.image-wrapper, .text-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n</style> "],"mappings":";AAkEA,SAASA,QAAQ,QAAQ,KAAI;AAC7B,SAASC,UAAU,QAAQ,+BAA8B;;;;;;;;;;;;;;;;;;;IAEzD,MAAMC,KAAK,GAAGC,OAAA;IAWd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,YAAY,GAAGN,QAAQ,CAAC,MAAAO,aAAA;MAC5BC,SAAS,EAAE,aAAaN,KAAK,CAACO,OAAO,CAACC,CAAC,OAAOR,KAAK,CAACO,OAAO,CAACE,CAAC,cAAcT,KAAK,CAACO,OAAO,CAACG,QAAQ,MAAM;MACvGC,KAAK,EAAE,GAAGX,KAAK,CAACO,OAAO,CAACI,KAAK,IAAI;MACjCC,MAAM,EAAE,GAAGZ,KAAK,CAACO,OAAO,CAACK,MAAM;IAAI,GAChCZ,KAAK,CAACO,OAAO,CAACM,MAAK,CACtB;;IAEF;IACA,MAAMC,aAAa,GAAIC,SAAS,IAAK;MACnC,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE,IAAI;UACVC,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE;QACT,CAAC;QACDC,SAAS,EAAE;UACTC,MAAM,EAAE,IAAI;UACZC,KAAK,EAAE,IAAI;UACXC,MAAM,EAAE;QACV;QACA;MACF;MACA,OAAOT,MAAM,CAACD,SAAS,CAACW,IAAI,CAAC,GAAGX,SAAS,CAACY,KAAK,CAAC,IAAIZ,SAAS,CAACY,KAAI;IACpE;;IAEA;IACA,MAAMC,mBAAmB,GAAIb,SAAS,IAAK;MACzC,MAAMc,YAAY,GAAG;QACnBZ,OAAO,EAAE;UACPC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE,MAAM;UACZC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACT;QACA;MACF;MACA,OAAOQ,YAAY,CAACd,SAAS,CAACW,IAAI,CAAC,GAAGX,SAAS,CAACY,KAAK,CAAC,IAAI,MAAK;IACjE;;IAEA;IACA,MAAMG,WAAW,GAAG;MAClBC,MAAM,EAAEA,CAACC,KAAK,EAAE;QAAEC,MAAM;QAAEC;MAAO,CAAC,KAAK;QACrChC,IAAI,CAAC,QAAQ,EAAAG,aAAA,CAAAA,aAAA,KACRL,KAAK,CAACO,OAAO;UAChBC,CAAC,EAAER,KAAK,CAACO,OAAO,CAACC,CAAC,GAAGyB,MAAM;UAC3BxB,CAAC,EAAET,KAAK,CAACO,OAAO,CAACE,CAAC,GAAGyB;QAAK,EAC3B;MACH;IACF;;IAEA;IACA,MAAMC,WAAW,GAAIC,MAAM,IAAK;MAC9B;IAAA,CACF;;IAEA;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB;IAAA,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
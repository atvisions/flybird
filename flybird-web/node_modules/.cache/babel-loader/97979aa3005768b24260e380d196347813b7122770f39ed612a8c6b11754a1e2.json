{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"background_image\"],\n  _excluded2 = [\"background_image\"];\nimport { defineStore } from 'pinia';\nimport { user } from '@/api/user';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n  getters: {\n    avatar: state => state.userInfo?.avatar || defaultAvatar,\n    username: state => state.userInfo?.username || '未设置昵称',\n    uid: state => state.userInfo?.uid,\n    background: state => state.backgroundImage,\n    phone: state => state.userInfo?.phone,\n    email: state => state.userInfo?.email,\n    position: state => state.userInfo?.position,\n    bio: state => state.userInfo?.bio,\n    isVip: state => state.userInfo?.is_vip || false,\n    isStaff: state => state.userInfo?.is_staff || false\n  },\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo();\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          const {\n              background_image\n            } = userData,\n            userDataWithoutBackground = _objectWithoutProperties(userData, _excluded);\n          this.userInfo = _objectSpread(_objectSpread({}, userDataWithoutBackground), {}, {\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          });\n          if (background_image) {\n            this.backgroundImage = background_image;\n          }\n          return this.userInfo;\n        }\n        return null;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData);\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now();\n          this.userInfo = _objectSpread(_objectSpread({}, this.userInfo), {}, {\n            avatar: response.data.data.avatar\n          });\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新头像失败');\n      } catch (error) {\n        console.error('Failed to update avatar:', error);\n        throw error;\n      }\n    },\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData);\n        if (response?.data?.code === 200) {\n          const {\n            background_image\n          } = response.data.data;\n          if (background_image) {\n            this.backgroundImage = background_image;\n          }\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新背景图失败');\n      } catch (error) {\n        console.error('Failed to update background:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data);\n        if (response?.data?.code === 200) {\n          const userData = response.data.data;\n          const {\n              background_image\n            } = userData,\n            userDataWithoutBackground = _objectWithoutProperties(userData, _excluded2);\n          this.userInfo = _objectSpread(_objectSpread(_objectSpread({}, this.userInfo), userDataWithoutBackground), {}, {\n            username: userData.username || this.userInfo?.username || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null,\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            position: userData.position || this.userInfo?.position || null,\n            bio: userData.bio || this.userInfo?.bio || null\n          });\n          if (background_image) {\n            this.backgroundImage = background_image;\n          }\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败');\n      } catch (error) {\n        console.error('Failed to update user info:', error);\n        console.log('Error response:', error.response?.data);\n        throw error;\n      }\n    },\n    clearUserInfo() {\n      this.userInfo = null;\n      this.avatarUpdateTime = null;\n      this.backgroundImage = null;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","user","defaultAvatar","useAccountStore","state","userInfo","avatarUpdateTime","backgroundImage","getters","avatar","username","uid","background","phone","email","position","bio","isVip","is_vip","isStaff","is_staff","actions","fetchUserInfo","response","getUserInfo","data","code","userData","background_image","userDataWithoutBackground","_objectWithoutProperties","_excluded","_objectSpread","id","error","console","log","updateAvatar","formData","Date","now","Error","message","updateBackground","updateUserInfo","_excluded2","clearUserInfo"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/account.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { user } from '@/api/user'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\nexport const useAccountStore = defineStore('account', {\n  state: () => ({\n    userInfo: null,\n    avatarUpdateTime: null,\n    backgroundImage: null\n  }),\n\n  getters: {\n    avatar: (state) => state.userInfo?.avatar || defaultAvatar,\n    username: (state) => state.userInfo?.username || '未设置昵称',\n    uid: (state) => state.userInfo?.uid,\n    background: (state) => state.backgroundImage,\n    phone: (state) => state.userInfo?.phone,\n    email: (state) => state.userInfo?.email,\n    position: (state) => state.userInfo?.position,\n    bio: (state) => state.userInfo?.bio,\n    isVip: (state) => state.userInfo?.is_vip || false,\n    isStaff: (state) => state.userInfo?.is_staff || false\n  },\n\n  actions: {\n    async fetchUserInfo() {\n      try {\n        const response = await user.getUserInfo()\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          const { background_image, ...userDataWithoutBackground } = userData\n          \n          this.userInfo = {\n            ...userDataWithoutBackground,\n            id: userData.id,\n            uid: userData.uid,\n            username: userData.username,\n            phone: userData.phone || null,\n            email: userData.email || null,\n            avatar: userData.avatar || null,\n            position: userData.position || null,\n            bio: userData.bio || null,\n            is_vip: userData.is_vip || false,\n            is_staff: userData.is_staff || false\n          }\n          \n          if (background_image) {\n            this.backgroundImage = background_image\n          }\n          \n          return this.userInfo\n        }\n        return null\n      } catch (error) {\n        console.error('获取用户信息失败:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    async updateAvatar(formData) {\n      try {\n        const response = await user.updateAvatar(formData)\n        if (response?.data?.code === 200) {\n          this.avatarUpdateTime = Date.now()\n          this.userInfo = {\n            ...this.userInfo,\n            avatar: response.data.data.avatar\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新头像失败')\n      } catch (error) {\n        console.error('Failed to update avatar:', error)\n        throw error\n      }\n    },\n\n    async updateBackground(formData) {\n      try {\n        const response = await user.updateBackground(formData)\n        if (response?.data?.code === 200) {\n          const { background_image } = response.data.data\n          if (background_image) {\n            this.backgroundImage = background_image\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新背景图失败')\n      } catch (error) {\n        console.error('Failed to update background:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    async updateUserInfo(data) {\n      try {\n        const response = await user.updateUserInfo(data)\n        if (response?.data?.code === 200) {\n          const userData = response.data.data\n          \n          const { background_image, ...userDataWithoutBackground } = userData\n          \n          this.userInfo = {\n            ...this.userInfo,\n            ...userDataWithoutBackground,\n            username: userData.username || this.userInfo?.username || null,\n            phone: userData.phone || this.userInfo?.phone || null,\n            email: userData.email || this.userInfo?.email || null,\n            avatar: userData.avatar || this.userInfo?.avatar || null,\n            position: userData.position || this.userInfo?.position || null,\n            bio: userData.bio || this.userInfo?.bio || null\n          }\n          \n          if (background_image) {\n            this.backgroundImage = background_image\n          }\n          \n          return response\n        }\n        throw new Error(response?.data?.message || '更新用户信息失败')\n      } catch (error) {\n        console.error('Failed to update user info:', error)\n        console.log('Error response:', error.response?.data)\n        throw error\n      }\n    },\n\n    clearUserInfo() {\n      this.userInfo = null\n      this.avatarUpdateTime = null\n      this.backgroundImage = null\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
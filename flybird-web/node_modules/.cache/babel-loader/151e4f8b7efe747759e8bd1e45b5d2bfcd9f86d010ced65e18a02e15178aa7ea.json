{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ref } from 'vue';\nimport ToolbarPanel from './components/ToolbarPanel.vue';\nimport Canvas from './components/Canvas.vue';\nimport PropertyPanel from './components/PropertyPanel.vue';\nimport SaveTemplateDialog from './components/SaveTemplateDialog.vue';\nimport { useTemplateStore } from '@/stores/template';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const canvas = ref(null);\n    const selectedElement = ref(null);\n    const dataFields = ref([]);\n    const showSaveDialog = ref(false);\n    const snackbar = ref({\n      show: false,\n      text: '',\n      color: 'success'\n    });\n    const templateStore = useTemplateStore();\n\n    // 显示消息\n    const showMessage = (text, color = 'success') => {\n      snackbar.value = {\n        show: true,\n        text,\n        color\n      };\n    };\n\n    // 处理元素选择\n    const handleElementSelect = element => {\n      selectedElement.value = element;\n    };\n\n    // 处理数据字段更新\n    const handleDataFieldsUpdate = fields => {\n      dataFields.value = fields;\n    };\n\n    // 处理元素更新\n    const handleElementUpdate = update => {\n      if (canvas.value) {\n        canvas.value.updateElement(update);\n      }\n    };\n\n    // 预览模板\n    const previewTemplate = () => {\n      // TODO: 实现预览功能\n      showMessage('预览功能开发中');\n    };\n\n    // 处理保存模板\n    const handleSaveTemplate = async formData => {\n      try {\n        // 获取画布数据\n        const canvasData = canvas.value.getCanvasData();\n\n        // 构造完整的模板数据\n        const templateData = _objectSpread(_objectSpread({}, formData), {}, {\n          components: canvasData.elements\n        });\n\n        // 保存模板\n        await templateStore.saveTemplate(templateData);\n        showMessage('模板保存成功');\n        showSaveDialog.value = false;\n      } catch (error) {\n        console.error('保存模板失败:', error);\n        showMessage(error.message || '保存失败，请重试', 'error');\n      }\n    };\n    const __returned__ = {\n      canvas,\n      selectedElement,\n      dataFields,\n      showSaveDialog,\n      snackbar,\n      templateStore,\n      showMessage,\n      handleElementSelect,\n      handleDataFieldsUpdate,\n      handleElementUpdate,\n      previewTemplate,\n      handleSaveTemplate,\n      ref,\n      ToolbarPanel,\n      Canvas,\n      PropertyPanel,\n      SaveTemplateDialog,\n      get useTemplateStore() {\n        return useTemplateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","ToolbarPanel","Canvas","PropertyPanel","SaveTemplateDialog","useTemplateStore","canvas","selectedElement","dataFields","showSaveDialog","snackbar","show","text","color","templateStore","showMessage","value","handleElementSelect","element","handleDataFieldsUpdate","fields","handleElementUpdate","update","updateElement","previewTemplate","handleSaveTemplate","formData","canvasData","getCanvasData","templateData","_objectSpread","components","elements","saveTemplate","error","console","message"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/resume-editor/index.vue"],"sourcesContent":["<template>\n  <div class=\"resume-editor\">\n    <!-- 顶部工具栏 -->\n    <div class=\"editor-toolbar\">\n      <v-btn\n        color=\"primary\"\n        prepend-icon=\"mdi-content-save\"\n        @click=\"showSaveDialog = true\"\n      >\n        保存模板\n      </v-btn>\n      \n      <v-btn\n        color=\"info\"\n        prepend-icon=\"mdi-eye\"\n        class=\"ml-2\"\n        @click=\"previewTemplate\"\n      >\n        预览\n      </v-btn>\n    </div>\n\n    <div class=\"editor-content\">\n      <!-- 左侧工具面板 -->\n      <ToolbarPanel />\n\n      <!-- 中间画布区域 -->\n      <Canvas\n        ref=\"canvas\"\n        @element-select=\"handleElementSelect\"\n        @data-fields-update=\"handleDataFieldsUpdate\"\n      />\n\n      <!-- 右侧属性面板 -->\n      <PropertyPanel\n        :selected-element=\"selectedElement\"\n        :data-fields=\"dataFields\"\n        @update=\"handleElementUpdate\"\n      />\n    </div>\n\n    <!-- 保存模板对话框 -->\n    <SaveTemplateDialog\n      v-model=\"showSaveDialog\"\n      @save=\"handleSaveTemplate\"\n    />\n\n    <!-- 消息提示 -->\n    <v-snackbar\n      v-model=\"snackbar.show\"\n      :color=\"snackbar.color\"\n      :timeout=\"3000\"\n    >\n      {{ snackbar.text }}\n    </v-snackbar>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport ToolbarPanel from './components/ToolbarPanel.vue'\nimport Canvas from './components/Canvas.vue'\nimport PropertyPanel from './components/PropertyPanel.vue'\nimport SaveTemplateDialog from './components/SaveTemplateDialog.vue'\nimport { useTemplateStore } from '@/stores/template'\n\nconst canvas = ref(null)\nconst selectedElement = ref(null)\nconst dataFields = ref([])\nconst showSaveDialog = ref(false)\nconst snackbar = ref({\n  show: false,\n  text: '',\n  color: 'success'\n})\n\nconst templateStore = useTemplateStore()\n\n// 显示消息\nconst showMessage = (text, color = 'success') => {\n  snackbar.value = {\n    show: true,\n    text,\n    color\n  }\n}\n\n// 处理元素选择\nconst handleElementSelect = (element) => {\n  selectedElement.value = element\n}\n\n// 处理数据字段更新\nconst handleDataFieldsUpdate = (fields) => {\n  dataFields.value = fields\n}\n\n// 处理元素更新\nconst handleElementUpdate = (update) => {\n  if (canvas.value) {\n    canvas.value.updateElement(update)\n  }\n}\n\n// 预览模板\nconst previewTemplate = () => {\n  // TODO: 实现预览功能\n  showMessage('预览功能开发中')\n}\n\n// 处理保存模板\nconst handleSaveTemplate = async (formData) => {\n  try {\n    // 获取画布数据\n    const canvasData = canvas.value.getCanvasData()\n    \n    // 构造完整的模板数据\n    const templateData = {\n      ...formData,\n      components: canvasData.elements\n    }\n\n    // 保存模板\n    await templateStore.saveTemplate(templateData)\n    showMessage('模板保存成功')\n    showSaveDialog.value = false\n  } catch (error) {\n    console.error('保存模板失败:', error)\n    showMessage(error.message || '保存失败，请重试', 'error')\n  }\n}\n</script>\n\n<style scoped>\n.resume-editor {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background-color: #f5f5f5;\n}\n\n.editor-toolbar {\n  padding: 8px 16px;\n  background-color: #fff;\n  border-bottom: 1px solid #e0e0e0;\n  display: flex;\n  align-items: center;\n}\n\n.editor-content {\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n}\n</style> "],"mappings":";AA2DA,SAASA,GAAG,QAAQ,KAAI;AACxB,OAAOC,YAAY,MAAM,+BAA8B;AACvD,OAAOC,MAAM,MAAM,yBAAwB;AAC3C,OAAOC,aAAa,MAAM,gCAA+B;AACzD,OAAOC,kBAAkB,MAAM,qCAAoC;AACnE,SAASC,gBAAgB,QAAQ,mBAAkB;;;;;;;IAEnD,MAAMC,MAAM,GAAGN,GAAG,CAAC,IAAI;IACvB,MAAMO,eAAe,GAAGP,GAAG,CAAC,IAAI;IAChC,MAAMQ,UAAU,GAAGR,GAAG,CAAC,EAAE;IACzB,MAAMS,cAAc,GAAGT,GAAG,CAAC,KAAK;IAChC,MAAMU,QAAQ,GAAGV,GAAG,CAAC;MACnBW,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC;IAED,MAAMC,aAAa,GAAGT,gBAAgB,CAAC;;IAEvC;IACA,MAAMU,WAAW,GAAGA,CAACH,IAAI,EAAEC,KAAK,GAAG,SAAS,KAAK;MAC/CH,QAAQ,CAACM,KAAK,GAAG;QACfL,IAAI,EAAE,IAAI;QACVC,IAAI;QACJC;MACF;IACF;;IAEA;IACA,MAAMI,mBAAmB,GAAIC,OAAO,IAAK;MACvCX,eAAe,CAACS,KAAK,GAAGE,OAAM;IAChC;;IAEA;IACA,MAAMC,sBAAsB,GAAIC,MAAM,IAAK;MACzCZ,UAAU,CAACQ,KAAK,GAAGI,MAAK;IAC1B;;IAEA;IACA,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;MACtC,IAAIhB,MAAM,CAACU,KAAK,EAAE;QAChBV,MAAM,CAACU,KAAK,CAACO,aAAa,CAACD,MAAM;MACnC;IACF;;IAEA;IACA,MAAME,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACAT,WAAW,CAAC,SAAS;IACvB;;IAEA;IACA,MAAMU,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;MAC7C,IAAI;QACF;QACA,MAAMC,UAAU,GAAGrB,MAAM,CAACU,KAAK,CAACY,aAAa,CAAC;;QAE9C;QACA,MAAMC,YAAY,GAAAC,aAAA,CAAAA,aAAA,KACbJ,QAAQ;UACXK,UAAU,EAAEJ,UAAU,CAACK;QAAO,EAChC;;QAEA;QACA,MAAMlB,aAAa,CAACmB,YAAY,CAACJ,YAAY;QAC7Cd,WAAW,CAAC,QAAQ;QACpBN,cAAc,CAACO,KAAK,GAAG,KAAI;MAC7B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BnB,WAAW,CAACmB,KAAK,CAACE,OAAO,IAAI,UAAU,EAAE,OAAO;MAClD;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useComponentStore } from '../../store/component';\nexport default {\n  __name: 'ComponentPanel',\n  props: {\n    components: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['add-component'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // 组件分类\n    const componentStore = useComponentStore();\n    const componentCategories = computed(() => componentStore.componentCategories);\n\n    // 当前展开的分类\n    const activeCategories = ref(['basic', 'content']);\n\n    // 获取分类标签\n    const getCategoryLabel = category => {\n      const labels = {\n        'basic': '基础组件',\n        'content': '内容组件',\n        'layout': '布局组件',\n        'display': '展示组件',\n        'custom': '自定义组件'\n      };\n      return labels[category] || category;\n    };\n\n    // 处理拖拽开始\n    const handleDragStart = (event, component) => {\n      event.dataTransfer.setData('component', JSON.stringify(component));\n      event.dataTransfer.effectAllowed = 'copy';\n    };\n    const __returned__ = {\n      props,\n      emit,\n      componentStore,\n      componentCategories,\n      activeCategories,\n      getCategoryLabel,\n      handleDragStart,\n      ref,\n      computed,\n      get useComponentStore() {\n        return useComponentStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useComponentStore","props","__props","emit","__emit","componentStore","componentCategories","activeCategories","getCategoryLabel","category","labels","handleDragStart","event","component","dataTransfer","setData","JSON","stringify","effectAllowed"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/template-editor/components/panels/ComponentPanel.vue"],"sourcesContent":["<template>\n  <div class=\"component-panel\">\n    <div class=\"panel-header\">\n      <h3>组件库</h3>\n    </div>\n    \n    <div class=\"panel-content\">\n      <el-collapse v-model=\"activeCategories\">\n        <el-collapse-item\n          v-for=\"(components, category) in componentCategories\"\n          :key=\"category\"\n          :title=\"getCategoryLabel(category)\"\n          :name=\"category\"\n        >\n          <div class=\"component-list\">\n            <div\n              v-for=\"component in components\"\n              :key=\"component.type\"\n              class=\"component-item\"\n              draggable=\"true\"\n              @dragstart=\"handleDragStart($event, component)\"\n              @click=\"$emit('add-component', component)\"\n            >\n              <el-icon><component :is=\"component.icon\" /></el-icon>\n              <span>{{ component.name }}</span>\n            </div>\n          </div>\n        </el-collapse-item>\n      </el-collapse>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useComponentStore } from '../../store/component'\n\nconst props = defineProps({\n  components: {\n    type: Array,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['add-component'])\n\n// 组件分类\nconst componentStore = useComponentStore()\nconst componentCategories = computed(() => componentStore.componentCategories)\n\n// 当前展开的分类\nconst activeCategories = ref(['basic', 'content'])\n\n// 获取分类标签\nconst getCategoryLabel = (category) => {\n  const labels = {\n    'basic': '基础组件',\n    'content': '内容组件',\n    'layout': '布局组件',\n    'display': '展示组件',\n    'custom': '自定义组件'\n  }\n  return labels[category] || category\n}\n\n// 处理拖拽开始\nconst handleDragStart = (event, component) => {\n  event.dataTransfer.setData('component', JSON.stringify(component))\n  event.dataTransfer.effectAllowed = 'copy'\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.component-panel {\n  @apply w-64 border-r border-gray-200 flex flex-col;\n  \n  .panel-header {\n    @apply h-12 px-4 flex items-center border-b border-gray-200;\n    \n    h3 {\n      @apply text-lg font-medium;\n    }\n  }\n  \n  .panel-content {\n    @apply flex-1 overflow-y-auto p-4;\n    \n    .component-list {\n      @apply grid grid-cols-2 gap-2;\n    }\n    \n    .component-item {\n      @apply flex flex-col items-center justify-center p-2 rounded cursor-pointer hover:bg-gray-100;\n      \n      .el-icon {\n        @apply text-2xl mb-1;\n      }\n      \n      span {\n        @apply text-sm text-gray-600;\n      }\n    }\n  }\n}\n</style> "],"mappings":"AAkCA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,iBAAiB,QAAQ,uBAAsB;;;;;;;;;;;;;;;IAExD,MAAMC,KAAK,GAAGC,OAAA;IAOd,MAAMC,IAAI,GAAGC,MAAA;;IAEb;IACA,MAAMC,cAAc,GAAGL,iBAAiB,CAAC;IACzC,MAAMM,mBAAmB,GAAGP,QAAQ,CAAC,MAAMM,cAAc,CAACC,mBAAmB;;IAE7E;IACA,MAAMC,gBAAgB,GAAGT,GAAG,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC;;IAEjD;IACA,MAAMU,gBAAgB,GAAIC,QAAQ,IAAK;MACrC,MAAMC,MAAM,GAAG;QACb,OAAO,EAAE,MAAM;QACf,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE;MACZ;MACA,OAAOA,MAAM,CAACD,QAAQ,CAAC,IAAIA,QAAO;IACpC;;IAEA;IACA,MAAME,eAAe,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;MAC5CD,KAAK,CAACE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAAC;MACjED,KAAK,CAACE,YAAY,CAACI,aAAa,GAAG,MAAK;IAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
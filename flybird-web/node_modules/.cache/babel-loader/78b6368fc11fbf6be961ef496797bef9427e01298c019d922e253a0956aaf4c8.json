{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { DocumentTextIcon, QuestionMarkCircleIcon, HashtagIcon, XMarkIcon } from '@heroicons/vue/24/outline';\nimport { showToast } from '@/components/ToastMessage';\nimport ArticleForm from './components/ArticleForm.vue';\nexport default {\n  __name: 'CreateContent',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n\n    // 内容类型\n    const contentTypes = [{\n      id: 'article',\n      name: '发布文章',\n      icon: DocumentTextIcon\n    }, {\n      id: 'question',\n      name: '发布问题',\n      icon: QuestionMarkCircleIcon\n    }, {\n      id: 'topic',\n      name: '发起话题',\n      icon: HashtagIcon\n    }];\n\n    // 根据来源页面设置默认类型\n    const getDefaultType = () => {\n      // 从查询参数获取类型\n      const type = route.query.type;\n      // 检查是否是有效的类型\n      if (contentTypes.some(t => t.id === type)) {\n        return type;\n      }\n      // 默认返回文章类型\n      return 'article';\n    };\n    const selectedType = ref(getDefaultType());\n\n    // 问答表单数据\n    const questionForm = ref({\n      title: '',\n      category: '',\n      bounty: '',\n      bountyDays: '7',\n      content: '',\n      tags: []\n    });\n\n    // 标签相关\n    const newTag = ref('');\n    const addTag = () => {\n      const tag = newTag.value.trim();\n      if (tag && !questionForm.value.tags.includes(tag) && questionForm.value.tags.length < 5) {\n        questionForm.value.tags.push(tag);\n        newTag.value = '';\n      }\n    };\n    const removeTag = tag => {\n      questionForm.value.tags = questionForm.value.tags.filter(t => t !== tag);\n    };\n\n    // 提交问题\n    const submitQuestion = () => {\n      // 表单验证\n      if (!questionForm.value.title) {\n        showToast('请输入问题标题', 'warning');\n        return;\n      }\n      if (!questionForm.value.category) {\n        showToast('请选择问题分类', 'warning');\n        return;\n      }\n      if (!questionForm.value.content) {\n        showToast('请输入问题描述', 'warning');\n        return;\n      }\n\n      // TODO: 调用接口提交问题\n      console.log('提交问题:', questionForm.value);\n      showToast('发布成功', 'success');\n      router.push('/community/questions');\n    };\n    const __returned__ = {\n      router,\n      route,\n      contentTypes,\n      getDefaultType,\n      selectedType,\n      questionForm,\n      newTag,\n      addTag,\n      removeTag,\n      submitQuestion,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get DocumentTextIcon() {\n        return DocumentTextIcon;\n      },\n      get QuestionMarkCircleIcon() {\n        return QuestionMarkCircleIcon;\n      },\n      get HashtagIcon() {\n        return HashtagIcon;\n      },\n      get XMarkIcon() {\n        return XMarkIcon;\n      },\n      get showToast() {\n        return showToast;\n      },\n      ArticleForm\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","useRoute","DocumentTextIcon","QuestionMarkCircleIcon","HashtagIcon","XMarkIcon","showToast","ArticleForm","router","route","contentTypes","id","name","icon","getDefaultType","type","query","some","t","selectedType","questionForm","title","category","bounty","bountyDays","content","tags","newTag","addTag","tag","value","trim","includes","length","push","removeTag","filter","submitQuestion","console","log"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/views/community/CreateContent.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen py-4 pb-24 lg:py-6 mt-[72px]\">\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <!-- 内容类型选择 -->\n      <div class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6 mb-6\">\n        <div class=\"flex items-center gap-4\">\n          <button\n            v-for=\"type in contentTypes\"\n            :key=\"type.id\"\n            class=\"flex-1 h-20 rounded-lg border-2 transition-colors flex flex-col items-center justify-center gap-2\"\n            :class=\"[\n              selectedType === type.id \n                ? 'border-violet-600 bg-violet-50 text-violet-600' \n                : 'border-gray-200 hover:border-violet-200'\n            ]\"\n            @click=\"selectedType = type.id\"\n          >\n            <component :is=\"type.icon\" class=\"w-6 h-6\" />\n            <span class=\"text-sm font-medium\">{{ type.name }}</span>\n          </button>\n        </div>\n      </div>\n\n      <!-- 问答发布表单 -->\n      <div v-if=\"selectedType === 'question'\" class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6\">\n        <div class=\"space-y-6\">\n          <!-- 标题 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题标题</label>\n            <input\n              type=\"text\"\n              v-model=\"questionForm.title\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"请用一句话描述你的问题\"\n            >\n          </div>\n\n          <!-- 分类 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题分类</label>\n            <select\n              v-model=\"questionForm.category\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n            >\n              <option value=\"\">请选择分类</option>\n              <option value=\"tech\">技术问答</option>\n              <option value=\"career\">职业发展</option>\n              <option value=\"share\">经验分享</option>\n            </select>\n          </div>\n\n          <!-- 悬赏设置 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">悬赏金额</label>\n            <div class=\"flex items-center gap-4\">\n              <div class=\"flex-1\">\n                <input\n                  type=\"number\"\n                  v-model=\"questionForm.bounty\"\n                  class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                  placeholder=\"设置悬赏金额\"\n                >\n              </div>\n              <div class=\"flex items-center gap-2\">\n                <span class=\"text-sm text-gray-500\">截止时间</span>\n                <select\n                  v-model=\"questionForm.bountyDays\"\n                  class=\"rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n                >\n                  <option value=\"1\">1天</option>\n                  <option value=\"3\">3天</option>\n                  <option value=\"7\">7天</option>\n                  <option value=\"15\">15天</option>\n                  <option value=\"30\">30天</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <!-- 问题描述 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">问题描述</label>\n            <textarea\n              v-model=\"questionForm.content\"\n              rows=\"6\"\n              class=\"block w-full rounded-lg border-gray-300 shadow-sm focus:border-violet-500 focus:ring-violet-500\"\n              placeholder=\"详细描述你的问题，以便他人更好地帮助你\"\n            ></textarea>\n          </div>\n\n          <!-- 标签 -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">添加标签</label>\n            <div class=\"flex flex-wrap gap-2\">\n              <div\n                v-for=\"tag in questionForm.tags\"\n                :key=\"tag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm flex items-center group\"\n              >\n                <span>{{ tag }}</span>\n                <XMarkIcon \n                  class=\"w-4 h-4 ml-1 cursor-pointer opacity-0 group-hover:opacity-100 transition-opacity\"\n                  @click=\"removeTag(tag)\"\n                />\n              </div>\n              <input\n                v-if=\"questionForm.tags.length < 5\"\n                type=\"text\"\n                v-model=\"newTag\"\n                @keydown.enter=\"addTag\"\n                class=\"px-3 py-1 bg-gray-100 text-gray-600 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-violet-500\"\n                placeholder=\"按回车添加标签\"\n              >\n            </div>\n            <p class=\"mt-1 text-xs text-gray-500\">最多添加 5 个标签</p>\n          </div>\n\n          <!-- 发布按钮 -->\n          <div class=\"flex justify-end gap-4\">\n            <button \n              class=\"px-6 h-10 rounded-lg border border-gray-300 text-gray-700 hover:bg-gray-50 transition-colors\"\n              @click=\"$router.back()\"\n            >\n              取消\n            </button>\n            <button \n              class=\"px-6 h-10 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n              @click=\"submitQuestion\"\n            >\n              发布问题\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 文章发布表单 -->\n      <div v-if=\"selectedType === 'article'\" class=\"relative bg-white rounded-xl border border-gray-100\">\n        <ArticleForm />\n      </div>\n      <!-- 话题发布表单 -->\n      <div v-else-if=\"selectedType === 'topic'\" class=\"bg-white rounded-xl border border-gray-100 p-4 lg:p-6 text-center text-gray-500\">\n        话题发布功能开发中...\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { \n  DocumentTextIcon,\n  QuestionMarkCircleIcon,\n  HashtagIcon,\n  XMarkIcon\n} from '@heroicons/vue/24/outline'\nimport { showToast } from '@/components/ToastMessage'\nimport ArticleForm from './components/ArticleForm.vue'\n\nconst router = useRouter()\nconst route = useRoute()\n\n// 内容类型\nconst contentTypes = [\n  { id: 'article', name: '发布文章', icon: DocumentTextIcon },\n  { id: 'question', name: '发布问题', icon: QuestionMarkCircleIcon },\n  { id: 'topic', name: '发起话题', icon: HashtagIcon }\n]\n\n// 根据来源页面设置默认类型\nconst getDefaultType = () => {\n  // 从查询参数获取类型\n  const type = route.query.type\n  // 检查是否是有效的类型\n  if (contentTypes.some(t => t.id === type)) {\n    return type\n  }\n  // 默认返回文章类型\n  return 'article'\n}\n\nconst selectedType = ref(getDefaultType())\n\n// 问答表单数据\nconst questionForm = ref({\n  title: '',\n  category: '',\n  bounty: '',\n  bountyDays: '7',\n  content: '',\n  tags: []\n})\n\n// 标签相关\nconst newTag = ref('')\n\nconst addTag = () => {\n  const tag = newTag.value.trim()\n  if (tag && !questionForm.value.tags.includes(tag) && questionForm.value.tags.length < 5) {\n    questionForm.value.tags.push(tag)\n    newTag.value = ''\n  }\n}\n\nconst removeTag = (tag) => {\n  questionForm.value.tags = questionForm.value.tags.filter(t => t !== tag)\n}\n\n// 提交问题\nconst submitQuestion = () => {\n  // 表单验证\n  if (!questionForm.value.title) {\n    showToast('请输入问题标题', 'warning')\n    return\n  }\n  if (!questionForm.value.category) {\n    showToast('请选择问题分类', 'warning')\n    return\n  }\n  if (!questionForm.value.content) {\n    showToast('请输入问题描述', 'warning')\n    return\n  }\n\n  // TODO: 调用接口提交问题\n  console.log('提交问题:', questionForm.value)\n  showToast('发布成功', 'success')\n  router.push('/community/questions')\n}\n</script> "],"mappings":";;;AAoJA,SAASA,GAAG,QAAQ,KAAI;AACxB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAW;AAC/C,SACEC,gBAAgB,EAChBC,sBAAsB,EACtBC,WAAW,EACXC,SAAQ,QACH,2BAA0B;AACjC,SAASC,SAAS,QAAQ,2BAA0B;AACpD,OAAOC,WAAW,MAAM,8BAA6B;;;;;;;IAErD,MAAMC,MAAM,GAAGR,SAAS,CAAC;IACzB,MAAMS,KAAK,GAAGR,QAAQ,CAAC;;IAEvB;IACA,MAAMS,YAAY,GAAG,CACnB;MAAEC,EAAE,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEX;IAAiB,CAAC,EACvD;MAAES,EAAE,EAAE,UAAU;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEV;IAAuB,CAAC,EAC9D;MAAEQ,EAAE,EAAE,OAAO;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAET;IAAY,EACjD;;IAEA;IACA,MAAMU,cAAc,GAAGA,CAAA,KAAM;MAC3B;MACA,MAAMC,IAAI,GAAGN,KAAK,CAACO,KAAK,CAACD,IAAG;MAC5B;MACA,IAAIL,YAAY,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,EAAE,KAAKI,IAAI,CAAC,EAAE;QACzC,OAAOA,IAAG;MACZ;MACA;MACA,OAAO,SAAQ;IACjB;IAEA,MAAMI,YAAY,GAAGpB,GAAG,CAACe,cAAc,CAAC,CAAC;;IAEzC;IACA,MAAMM,YAAY,GAAGrB,GAAG,CAAC;MACvBsB,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,GAAG;MACfC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACR,CAAC;;IAED;IACA,MAAMC,MAAM,GAAG5B,GAAG,CAAC,EAAE;IAErB,MAAM6B,MAAM,GAAGA,CAAA,KAAM;MACnB,MAAMC,GAAG,GAAGF,MAAM,CAACG,KAAK,CAACC,IAAI,CAAC;MAC9B,IAAIF,GAAG,IAAI,CAACT,YAAY,CAACU,KAAK,CAACJ,IAAI,CAACM,QAAQ,CAACH,GAAG,CAAC,IAAIT,YAAY,CAACU,KAAK,CAACJ,IAAI,CAACO,MAAM,GAAG,CAAC,EAAE;QACvFb,YAAY,CAACU,KAAK,CAACJ,IAAI,CAACQ,IAAI,CAACL,GAAG;QAChCF,MAAM,CAACG,KAAK,GAAG,EAAC;MAClB;IACF;IAEA,MAAMK,SAAS,GAAIN,GAAG,IAAK;MACzBT,YAAY,CAACU,KAAK,CAACJ,IAAI,GAAGN,YAAY,CAACU,KAAK,CAACJ,IAAI,CAACU,MAAM,CAAClB,CAAC,IAAIA,CAAC,KAAKW,GAAG;IACzE;;IAEA;IACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;MAC3B;MACA,IAAI,CAACjB,YAAY,CAACU,KAAK,CAACT,KAAK,EAAE;QAC7Bf,SAAS,CAAC,SAAS,EAAE,SAAS;QAC9B;MACF;MACA,IAAI,CAACc,YAAY,CAACU,KAAK,CAACR,QAAQ,EAAE;QAChChB,SAAS,CAAC,SAAS,EAAE,SAAS;QAC9B;MACF;MACA,IAAI,CAACc,YAAY,CAACU,KAAK,CAACL,OAAO,EAAE;QAC/BnB,SAAS,CAAC,SAAS,EAAE,SAAS;QAC9B;MACF;;MAEA;MACAgC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEnB,YAAY,CAACU,KAAK;MACvCxB,SAAS,CAAC,MAAM,EAAE,SAAS;MAC3BE,MAAM,CAAC0B,IAAI,CAAC,sBAAsB;IACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
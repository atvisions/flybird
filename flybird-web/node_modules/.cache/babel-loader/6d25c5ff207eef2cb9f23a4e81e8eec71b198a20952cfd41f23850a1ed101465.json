{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport axios from 'axios';\nimport { STORAGE_KEYS } from '@/utils/storage';\nconst request = axios.create({\n  baseURL: 'http://192.168.3.16:8000',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  if (config.method === 'get') {\n    config.params = _objectSpread(_objectSpread({}, config.params), {}, {\n      language: localStorage.getItem('language') || 'zh-hans'\n    });\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nrequest.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // 处理401未授权的情况\n  if (error.response?.status === 401) {\n    localStorage.removeItem(STORAGE_KEYS.TOKEN);\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","STORAGE_KEYS","request","create","baseURL","timeout","headers","interceptors","use","config","token","localStorage","getItem","TOKEN","method","params","_objectSpread","language","error","Promise","reject","response","status","removeItem","window","location","pathname","includes","href"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { STORAGE_KEYS } from '@/utils/storage'\n\nconst request = axios.create({\n  baseURL: 'http://192.168.3.16:8000',\n  timeout: 5000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN)\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n    if (config.method === 'get') {\n      config.params = {\n        ...config.params,\n        language: localStorage.getItem('language') || 'zh-hans'\n      }\n    }\n    return config\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nrequest.interceptors.response.use(\n  response => {\n    return response\n  },\n  error => {\n    // 处理401未授权的情况\n    if (error.response?.status === 401) {\n      localStorage.removeItem(STORAGE_KEYS.TOKEN)\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login'\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\nexport default request"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAE,0BAA0B;EACnCC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACL,OAAO,CAACM,GAAG,CAC9BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACX,YAAY,CAACY,KAAK,CAAC;EACtD,IAAIH,KAAK,EAAE;IACTD,MAAM,CAACH,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUI,KAAK,EAAE;EACrD;EACA,IAAID,MAAM,CAACK,MAAM,KAAK,KAAK,EAAE;IAC3BL,MAAM,CAACM,MAAM,GAAAC,aAAA,CAAAA,aAAA,KACRP,MAAM,CAACM,MAAM;MAChBE,QAAQ,EAAEN,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI;IAAS,EACxD;EACH;EACA,OAAOH,MAAM;AACf,CAAC,EACDS,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,OAAO,CAACK,YAAY,CAACc,QAAQ,CAACb,GAAG,CAC/Ba,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAEC,MAAM,KAAK,GAAG,EAAE;IAClCX,YAAY,CAACY,UAAU,CAACtB,YAAY,CAACY,KAAK,CAAC;IAC3C,IAAI,CAACW,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChDH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,QAAQ;IACjC;EACF;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
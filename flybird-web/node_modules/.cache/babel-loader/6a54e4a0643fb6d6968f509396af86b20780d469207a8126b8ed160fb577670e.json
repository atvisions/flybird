{"ast":null,"code":"import _objectSpread from \"/Users/liuzhao/Documents/Projects/flybird/flybird-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineStore } from 'pinia';\nimport { profile } from '@/api/profile';\nimport defaultAvatar from '@/assets/images/default-avatar.png';\nexport const useProfileStore = defineStore('profile', {\n  state: () => ({\n    basicInfo: null,\n    completeness: null,\n    avatarUpdateTime: null,\n    background: null,\n    preferences: null\n  }),\n  getters: {\n    userAvatar: state => state.basicInfo?.avatar || defaultAvatar,\n    userName: state => state.basicInfo?.nickname || '未设置昵称',\n    userBackground: state => state.background,\n    profileCompleteness: state => state.completeness || 0\n  },\n  actions: {\n    async fetchBasicInfo() {\n      try {\n        const response = await profile.getBasicInfo();\n        if (response?.data?.code === 200) {\n          this.basicInfo = response.data.data;\n          return this.basicInfo;\n        }\n      } catch (error) {\n        console.error('获取基本信息失败:', error);\n        throw error;\n      }\n    },\n    async updateBasicInfo({\n      type,\n      data\n    }) {\n      try {\n        let response;\n        if (type === 'avatar') {\n          response = await profile.uploadAvatar(data);\n        } else if (type === 'background') {\n          response = await profile.uploadBackground(data);\n        } else if (type === 'basic') {\n          response = await profile.updateModule('basic_info', data);\n        } else {\n          throw new Error('未知的更新类型');\n        }\n        if (response?.data?.code === 200) {\n          if (type === 'avatar' || type === 'background') {\n            this.avatarUpdateTime = Date.now();\n          }\n          if (type === 'basic') {\n            this.basicInfo = _objectSpread(_objectSpread({}, this.basicInfo), response.data.data);\n          }\n          return response;\n        }\n        throw new Error(response?.data?.message || '更新失败');\n      } catch (error) {\n        console.error('Failed to update basic info:', error);\n        throw error;\n      }\n    },\n    async fetchCompleteness() {\n      try {\n        const response = await profile.getCompleteness();\n        if (response?.data?.code === 200) {\n          this.completeness = response.data;\n          return response.data;\n        }\n      } catch (error) {\n        console.error('获取完整度失败:', error);\n      }\n    },\n    clearProfile() {\n      this.basicInfo = null;\n      this.completeness = null;\n      this.avatarUpdateTime = null;\n      this.background = null;\n      this.preferences = null;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","profile","defaultAvatar","useProfileStore","state","basicInfo","completeness","avatarUpdateTime","background","preferences","getters","userAvatar","avatar","userName","nickname","userBackground","profileCompleteness","actions","fetchBasicInfo","response","getBasicInfo","data","code","error","console","updateBasicInfo","type","uploadAvatar","uploadBackground","updateModule","Error","Date","now","_objectSpread","message","fetchCompleteness","getCompleteness","clearProfile"],"sources":["/Users/liuzhao/Documents/Projects/flybird/flybird-web/src/stores/profile.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { profile } from '@/api/profile'\nimport defaultAvatar from '@/assets/images/default-avatar.png'\n\nexport const useProfileStore = defineStore('profile', {\n  state: () => ({\n    basicInfo: null,\n    completeness: null,\n    avatarUpdateTime: null,\n    background: null,\n    preferences: null\n  }),\n\n  getters: {\n    userAvatar: (state) => state.basicInfo?.avatar || defaultAvatar,\n    userName: (state) => state.basicInfo?.nickname || '未设置昵称',\n    userBackground: (state) => state.background,\n    profileCompleteness: (state) => state.completeness || 0\n  },\n\n  actions: {\n    async fetchBasicInfo() {\n      try {\n        const response = await profile.getBasicInfo()\n        if (response?.data?.code === 200) {\n          this.basicInfo = response.data.data\n          return this.basicInfo\n        }\n      } catch (error) {\n        console.error('获取基本信息失败:', error)\n        throw error\n      }\n    },\n\n    async updateBasicInfo({ type, data }) {\n      try {\n        let response\n        if (type === 'avatar') {\n          response = await profile.uploadAvatar(data)\n        } else if (type === 'background') {\n          response = await profile.uploadBackground(data)\n        } else if (type === 'basic') {\n          response = await profile.updateModule('basic_info', data)\n        } else {\n          throw new Error('未知的更新类型')\n        }\n\n        if (response?.data?.code === 200) {\n          if (type === 'avatar' || type === 'background') {\n            this.avatarUpdateTime = Date.now()\n          }\n          if (type === 'basic') {\n            this.basicInfo = {\n              ...this.basicInfo,\n              ...response.data.data\n            }\n          }\n          return response\n        }\n        throw new Error(response?.data?.message || '更新失败')\n      } catch (error) {\n        console.error('Failed to update basic info:', error)\n        throw error\n      }\n    },\n\n    async fetchCompleteness() {\n      try {\n        const response = await profile.getCompleteness()\n        if (response?.data?.code === 200) {\n          this.completeness = response.data\n          return response.data\n        }\n      } catch (error) {\n        console.error('获取完整度失败:', error)\n      }\n    },\n\n    clearProfile() {\n      this.basicInfo = null\n      this.completeness = null\n      this.avatarUpdateTime = null\n      this.background = null\n      this.preferences = null\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}